{"version":3,"sources":["custom.js","map-death.js","queue.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","lines-bsas.js","blocks-substance-pie.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","console","log","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","parallelism","pop","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","$anchor","stop","animate","scrollTop","preventDefault","each","$id","$current","parent","find","location","pathname","hostname","target","hash","tab","$target","get","play","load","response","asignVal_svg","val_svg","initialize","mapWidth","mapHeight","transformX","transformY","legendWidth","legendHeight","unitWidth","Vis","visualize","states","visualizationWrapper","forEach","wrapper","createMap","selector","eventName","el","shape","key","$maps_sub","value","values","palette","self","town_value","geoData","parentNode","getElementsByClassName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","YlOrBr","setupData","years","keys","dataset","OMRs","y","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","querySelector","time","sqrt","axis","line","csv","addEventListener","quarter","date","date2","Date","setMonth","getMonth","Math","ceil","mouseoutFunc","symbol","type","size","tooltipFent","focus","mouseoverFunc","y0","y1","invert","percentVal","mousemoveFunc","x0","pageY","pageX","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesColors","seriesLineStrokes","seriesLineDash","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","rangePoints","x2","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","xAxis_fent","months","xAxis2_fent","tickSize","tickPadding","formatPercent","yAxis_fent","label","$lines_fent","varSeries","filter","seriesData","name","min","c","series","updateWidth","$svg","wrapper_width","wrapper_height","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","renderLegend","renderLines","w","setupLegend","$legend","opioids","circle","alcohol","marijuana","other","none","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","$lines","current_town","y_circle_alcohol","town_names","bisectAge","bisector","category10","update","delay","string_select","value_select","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","indexOf","term","ui","item","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","getParent","getValue","getSum","_sum","arcTween","toArc","arc","toEndAngle","endAngle","_current","interpolate","startAngle","labelAnimation","centroid","fill","selectArcAnimation","_d","dist","outerRadius","midAngle","sin","cos","updatePie","getPercent","sum","toFixed","getLegend","liveLarge","angle","arcLength","PI","onMouseIn","onClick","option","description","eval","explodedIndex","$pie_substance","_i","animateDuration","opacity","transform","labelHeight","stroke","x1","innerRadius","y2","onMouseOut","pie","arcs","isDelay","_duration","font-family","font-size","text-anchor","attrTween","class","exit","remove","legends","labelWidth","generatePie","prescription","heroin","fentanyl","both","methadone","buprenorphine","time_period","labelsWidth","layout","sort","alignment-baseline","data_pie","asignVal_gender","makeChart_gender","table_html","data_gender","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","multi","$option","$value","drawGraph","column","redraw","rangeBands","bars","$bars_age","gender_age","age_bar_color","age_bar_label","age_bars_legend","ease","rangeBand","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","selected","thisButton","wrap","word","words","split","reverse","lineNumber","lineHeight","dy","parseFloat","tspan","join","getComputedTextLength","raceth","2014","2015","rangeRoundBands","xAxis_bars","yAxis_bars","divtooltip_raceeth","$bars_race","options","bar","elements","l","elementData","__data__","legend"],"mappings":"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A,aACA,QACA,SACA,UACA,cACA,aACA,UACA,UACA,SACA,cACA,UACA,YACA,aACA,YACA,SACA,SACA,SACA,aACA,UACA,WACA,YACA,WACA,cACA,YACA,WACA,aACA,WACA,cACA,YACA,WACA,aACA,YACA,WACA,aACA,YACA,SACA,WACA,SACA,aACA,WACA,UACA,aACA,UACA,WACA,UACA,eACA,WACA,WACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,SACA,UACA,YACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,YACA,UACA,kBACA,iBACA,iBACA,UACA,cACA,SACA,YACA,WACA,SACA,QACA,UACA,YACA,YACA,WACA,YACA,UACA,aACA,aACA,WACA,WACA,UACA,WACA,aACA,OACA,aACA,SACA,UACA,UACA,SACA,YACA,kBACA,aACA,SACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,UACA,YACA,UACA,WACA,YACA,cACA,SACA,OACA,aACA,UACA,WACA,YACA,YACA,eACA,WACA,MACA,YACA,QACA,aACA,WACA,YACA,SACA,UACA,YACA,aACA,SACA,SACA,YACA,OACA,YACA,SACA,aACA,YACA,aACA,SACA,cACA,aACA,UACA,eACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,gBACA,cACA,YACA,UACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,aACA,kBACA,SACA,YACA,SACA,UACA,aACA,aACA,eACA,iBACA,WACA,UACA,cACA,SACA,UACA,YACA,cACA,mBACA,iBACA,cACA,cACA,eACA,cACA,aACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,aACA,aACA,aACA,WACA,WACA,YACA,eACA,SACA,WACA,UACA,UACA,WACA,SACA,WACA,YACA,WACA,WACA,OACA,SACA,YACA,UACA,UACA,QACA,YACA,cACA,WACA,SACA,QACA,WACA,UACA,SACA,YACA,YACA,WACA,UACA,aACA,aACA,WACA,aACA,cACA,cACA,eACA,cACA,YACA,UACA,cACA,WACA,cACA,WACA,YACA,OACA,aACA,UACA,aACA,SACA,aACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,WACA,QACA,eACA,YACA,QACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,SACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,UACA,SACA,eACA,kBACA,iBACA,cACA,kBACA,kBACA,cACA,cACA,YACA,WACA,cACA,cACA,SACA,WACA,WACA,WACA,UACA,UACA,YACA,eACA,eACA,aACA,aACA,aACA,UACA,WACA,SACA,YACA,cACA,WACA,YAEAF,EAAA,gBAEAxH;AACA3N,IAAA,EACA8N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEA2F,EAAA9F,EAAAC,YACA8F,EAAA,IACAjR,EAAAgR,EAAA5F,EAAAC,KAAAD,EAAAG,MACAhO,EAAA0T,EAAA7F,EAAA3N,IAAA2N,EAAAI,OAEAuH,EAAA3U,GAAA4U,SAAA,SAAAzT,GACA,MAAAA,GAAA+R,MACAjG,KACAgG,EAAAjT,GAAAwE,OAAA,QACAgM,EAAAxQ,GAAAwE,OAAA,KAGA8H,KAEAyB,EAAA/N,GAAAyB,MAAA0P,SAEAxF,EAAA3L,GAAAyB,MAAA0P,SAIA2B,GAFA9S,GAAAyB,MAAAoT,aAEA7U,GAAA6B,IAAA0M,QAEAyE,EAAAhT,GAAA6B,IAAA0M,OAEAC,EAAAxO,GAAA6B,IAAA2M,OAGAmE,EAAA3S,GAAA8B,OAAA,eAAAC,OAAA,OAEAsR,EAAAV,EACA5Q,OAAA,KACAC,KAAA,YAAA,aAAAgL,EAAAC,KAAA,IAAAD,EAAA3N,IAAA,KAGA8T,EAAAE,EAAAtR,OAAA,KAAAC,KAAA,QAAA,aACAmR,GACApR,OAAA,QACAC,KAAA,IAAA,KACAA,KAAA,IAAA,IACAA,KAAA,cAAA,UACAW,KAAA,OAEA,IAAAyQ,GAAAC,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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n$('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\n\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n        if (target.length) {\n            $('html,body').animate({\n                scrollTop: target.offset().top\n            }, 500);\n            return false;\n        }\n    }\n    // });\n\n\n});\n\n\n/////////////////////////////Accordion\n// $(function() {\n//     var icons = {\n//         header: \"iconClosed\",\n//         activeHeader: \"iconOpen\",\n//         hoverHeader: 'iconHover'\n\n//     };\n//     $(\"#accordion\").accordion({\n//         icons: icons,\n//         heightStyle: \"content\"\n//     });\n// });\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$('.js-play-video').click(function() {\n    var $target = $($(this).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n\t//for (i = 0; i < usStates.features.length; i++) {\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n\t\t//return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n            console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n        console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","/* global d3, $, queue */\n// Dependency on queue.js\n\n(function() {\n    \"use strict\";\n\n    // Heights & Widths\n    var legendHeight = 60,\n\tlegendWidth = '100%',\n\tmapWidth = 600,\n\tmapHeight = 400;\n\n    var currentyear;\n    var svgContainer;\n    var opChgScale;\n\n    // Helper functions\n\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n\n\n    function initialize() {\n\tqueue()\n\t//should be town polym data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.json, \"us_states_5m.geo.json\")\n\t//should be opioid death data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.csv, \"us_pop.csv\")\n\t.awaitAll(generateMap);\n    }\n\n    function generateMap(error, results) {\n\n\tvar maTowns = results[0];\n\tvar maOpioid = results[1];\n\n\n\t$('.controls-map').click(function() {\n\t    $(\"#odMap_timeline\").val($(this).data('select'));\n\t    setSymbology($(this).data('select'));\n\t});\n\n\tfor (var i = 0; i < maTowns.features.length; i++) {\n\t    if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\n\t\tconsole.log('ASSERT failure for index: ' + i);\n\t\tconsole.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n\t\t// alert('Input data corrupted: generation of map terminated.');\n\t\treturn;\n            }\n\t    maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n\t}\n\n\tsvgContainer = d3.select(\"#odMap_map\")\n\t    .classed(\"svg-container\", true) //container class to make it responsive\n\t    .append(\"svg\")\n\t    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n\t    .attr(\"viewBox\", \"0 0 \"+mapWidth+\" \"+mapHeight)\n\t    //class to make it responsive\n\t    .classed(\"svg-content-responsive\", true)\n\t    .style(\"border\", \"0px solid steelblue\");\n\n\tvar tooltip = d3.select('#odMap_map').append('div')\n\t    .attr('class', 'hidden vis-tooltip');\n\n\t//#eff3ff\n\n\topChgScale = d3.scale.threshold()\n\t    .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\n\t    .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\n\topChgScale.domainStrings = function() {\n\t    return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64'\n\t    ]);\n\t};\n\n\n\tvar projection = d3.geo.conicConformal()\n\t    .parallels([41 + 43 / 60, 42 + 41 / 60])\n\t    .rotate([71 + 30 / 60, -41])\n\t    .scale([10000])\n\t    .translate([mapWidth/1.8, mapHeight*1.1]);\n\n\tvar geoPath = d3.geo.path()\n\t    .projection(projection);\n\n\tsvgContainer.selectAll(\"path\")\n\t    .data(maTowns.features)\n\t    .enter()\n\t    .append(\"path\")\n\t    .classed(\"deathmap\", true)\n\t    .attr(\"d\", function(d, i) {\n\t\treturn geoPath(d);\n\t    })\n\t    .style(\"stroke\", \"#2f363d\")\n\t    .style(\"stroke-width\", \"0.1px\")\n\t    .style(\"fill\", \"white\")\n\t    .on('mousemove', function(d) {\n\t\tvar mouse = d3.mouse(svgContainer.node()).map(function(d) {\n\t\t    return parseInt(d);\n\t\t});\n\n\t\tvar style = 'left:'+((100*mouse[0]/mapWidth)+3)+'% !important;top:'+(100*mouse[1]/mapHeight)+'% !important;';\n\t\t// Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\n\t\tvar transformX= mouse[0] > mapWidth/2 ? '-160%' : 0,\n\t\t    transformY= mouse[1] > mapHeight/2 ? '-100%' : 0;\n\t\tstyle += 'transform: translate('+transformX+','+transformY+');';\n\n\t\tvar string_base = \"yr\";\n\t\tvar currentvalue = string_base.concat(currentyear);\n\t\tvar currentrate;\n\n\t\tif (d.properties[currentvalue] > 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else if (d.properties[currentvalue] === 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else {\n\t\t    currentrate = \"N/A*\";\n\t\t}\n\n\t\ttooltip.classed('hidden', false)\n\t\t    .attr('style', style)\n\t\t    .html(\"<strong>\" + toTitleCase(d.properties.TOWN) + \"</strong> | \" + currentrate);\n\t    })\n\n\t    .on('mouseover', function(d, i) {\n\t\td3.select(this).style('fill-opacity', 0.25)\n\t\t    .style(\"stroke\", \"white\")\n\t\t    .style(\"stroke-width\", \"2px\");\n\t    })\n\t    .on('mouseout', function(d, i) {\n\t\ttooltip.classed('hidden', true);\n\t\td3.selectAll('path.deathmap')\n\t\t    .style(\"fill-opacity\", 1)\n\t\t    .style(\"stroke\", \"#2f363d\")\n\t\t\t.style(\"stroke-width\", \"0.1px\");\n\t    });\n\n\n\tgetYear();\n\tgenerateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\n\n\n    } // generateMap\n\n    function getYear() {\n        setSymbology(2000);\n        $(\"#odMap_timeline\").on('input change', function() {\n            setSymbology($(this).val());\n        });\n    }\n\n    function setSymbology(year) {\n\n        var szAttr = 'yr' + year;\n        currentyear = year;\n        $('#odMap_titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\n        $('#odMap_fromYear').html(year);\n\n        $('#odMap_source').html('Sources: Massachusetts Department of Public Health,' +\n                             '<br>Massachusetts Registry of Vital Records and Statistics</>');\n\n        svgContainer.selectAll(\"path.deathmap\")\n            .transition()\n            .duration(500)\n            .style(\"fill\", function(d, i) {\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n            });\n    }\n\n    function generateLegend(scale, szDivId, szCaption) {\n\n        var svg = d3.select('#' + szDivId).append(\"svg\")\n\t    .attr(\"width\", legendWidth)\n\t    .attr(\"height\", legendHeight);\n\n        var g = svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        //legendData.push({\n            //d: -9999,\n            //r: '#f1f1f1',\n            //s: 'N/A'\n        //});\n\tfor (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n\tvar unitWidth = 100/legendData.length;\n\n        g.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n\t    .attr(\"height\", legendHeight/3)\n\t    .attr(\"width\", function(d, i) {\n\t\treturn unitWidth+'%';\n\t    })\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        g.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + (unitWidth/2) + '%';\n            })\n\t    .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        g.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    } // generateLegend()\n\n\n    $(document).ready(initialize);\n})();\n\n\n\n\n\n\n\n// ///////////////////Map Composite\n\n\n\n\n\n\n\n\n\n\n// function app2() {\n//     queue()\n//     //should be town polym data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\n//     //should be opioid death data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.csv, \"us_pop.csv\")\n//     .awaitAll(generateMap2);\n// }\n\n// function generateMap2(error, results) {\n//     $('.controls-map').click(function() {\n//         $(\"#timeline\").val($(this).data('select'));\n//         setSymbology2($(this).data('select'));\n//     });\n\n//     var maTowns = results[0];\n//     var maOpioid = results[1];\n\n//     var currentyear\n\n//     var i;\n//     for (i = 0; i < maTowns.features.length; i++) {\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\n//             // console.log('ASSERT failure for index: ' + i);\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n//             alert('Input data corrupted: generation of map terminated.');\n//             return;\n//         }\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n//     }\n\n//     var width = 960,\n//         height = 450;\n\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"0px solid steelblue\");\n\n//     var tooltip2 = d3.select('#map2').append('div')\n//         .attr('class', 'hidden tooltip2');\n\n//     var opChgScale = d3.scale.threshold()\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\n//         .range(colorbrewer.RdPu[5]);\n//     opChgScale.domainStrings = function() {\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\n//             '15.9-31.5', '>31.5'\n//         ]);\n//     };\n\n//     function toTitleCase(str) {\n//         return str.replace(/\\w\\S*/g, function(txt) {\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n//         });\n//     }\n\n//     var projection = d3.geo.conicConformal()\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\n//         .rotate([71 + 30 / 60, -41])\n//         .scale([10000])\n//         .translate([330, 480]);\n\n//     var geoPath = d3.geo.path()\n//         .projection(projection);\n\n//     var map = svgContainer.selectAll(\"path\")\n//         .data(maTowns.features)\n//         .enter()\n//         .append(\"path\")\n//         .attr(\"d\", function(d, i) {\n//             return geoPath(d);\n//         })\n//         .on('mousemove', function(d) {\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\n//                 return parseInt(d);\n//             });\n//             var string_base = \"yr\"\n//             currentvalue = string_base.concat(currentyear);\n//             var currentrate\n\n//             if (d.properties[currentvalue] > 0) {\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\n//             } else if (d.properties[currentvalue] == 0) {\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n//             } else {\n//                 currentrate = \"N/A*\";\n//             }\n\n\n//             tooltip2.classed('hidden', false)\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\n//         })\n//         .on('mouseover', function(d, i) {\n\n//             var currentState = this;\n//             d3.select(this).style('fill-opacity', 0.25)\n//                 .style(\"stroke\", \"white\")\n//                 .style(\"stroke-width\", \"2px\");\n//         })\n//         .on('mouseout', function(d, i) {\n//             tooltip2.classed('hidden', true);\n//             d3.selectAll('path')\n//                 .style(\"fill-opacity\", 1)\n//                 .style(\"stroke\", \"#2f363d\")\n//                 .style(\"stroke-width\", \"0.1px\");\n//         })\n//         .style(\"stroke\", \"#2f363d\")\n//         .style(\"stroke-width\", \"0.1px\")\n//         .style(\"fill\", \"white\")\n//         .on('mouseenter', function(d, i) {\n\n//             //var string_base = \"yr\"\n//             //currentvalue = string_base.concat(currentyear);\n//             //console.log(d.properties[currentvalue]);\n//         })\n//         .on('mouseleave', function(d) {\n\n//         });\n\n//     var aYears = [\n//         [2000, 2001],\n//         [2001, 2002],\n//         [2002, 2003],\n//         [2003, 2004],\n//         [2004, 2005],\n//         [2005, 2006],\n//         [2006, 2007],\n//         [2007, 2008],\n//         [2008, 2009],\n//         [2010, 2011],\n//         [2011, 2012],\n//         [2012, 2013],\n//         [2013, 2014],\n//         [2014, 2014.5]\n//     ];\n\n//     var index = 0;\n//     getYear();\n\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\n\n//     function getYear() {\n//         setSymbology2(2000);\n//         $(\"#timeline\").on('input change', function() {\n//             var year = $(this).val()\n//             setSymbology2($(this).val());\n//         });\n//     };\n\n\n//     function setSymbology2(year) {\n\n//         var szAttr = 'yr' + year;\n//         currentyear = year\n//         var toyear = eval(year) + 1\n\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\n//         $('#fromYear2').html(year);\n//         $('#titleMidfix2').html('to');\n//         $('#toYear2').html(toyear).append('<span>*</span>');\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\n//                             '<br />Executive Office of Health and Human Services'+\n//                             '<br />(Registry of Vital Records and Statistics,' +\n//                             '<br />Massachusetts Department of Public Health)');\n\n\n\n//         svgContainer.selectAll(\"path\")\n//             .transition()\n//             .duration(500)\n//             .style(\"fill\", function(d, i) {\n\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n//             });\n//     }\n\n//     function generateLegend2(scale, szDivId, szCaption) {\n//         var width2 = 550,\n//             height2 = 80;\n\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\n//             .attr(\"width\", width2)\n//             .attr(\"height\", height2);\n\n//         var g = svg.append(\"g\");\n\n//         // Create data array.\n//         var legendData = [];\n//         legendData.push({\n//             d: -9999,\n//             r: '#f1f1f1',\n//             s: 'N/A'\n//         });\n//         var i;\n//         for (i = 0; i < scale.domain().length; i++) {\n//             legendData.push({\n//                 d: scale.domain()[i],\n//                 r: scale.range()[i],\n//                 s: scale.domainStrings()[i]\n//             });\n//         }\n\n//         g.selectAll(\"rect\")\n//             .data(legendData)\n//             .enter().append(\"rect\")\n//             .attr(\"height\", 20)\n//             .attr(\"width\", 50)\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 20)\n//             .style(\"stroke\", \"black\")\n//             .style(\"stroke-width\", \"0.25px\")\n//             .style(\"fill\", function(d, i) {\n//                 return d.r;\n//             });\n\n//         g.selectAll(\"text\")\n//             .data(legendData)\n//             .enter().append(\"text\")\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 60)\n//             .text(function(d, i) {\n//                 return d.s;\n//             });\n\n//         g.append(\"text\")\n//             .attr(\"class\", \"vis-caption\")\n//             .attr(\"y\", 12)\n//             .text(szCaption);\n//     } // generateLegend2()\n// } // generateMap2\n","var Vis = (function(d3) {\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([7500])\n        .translate([250, 350]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6]);\n\n\n\n    function visualize(error, states, data) {\n\n        var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper\n                .append('div')\n                .style({\n                    width: width + 'px',\n                    height: height + 'px'\n                });\n\n            createMap(wrapper, states, data)\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n\twrapper.append('span')\n            .text(\"\")\n\t    .attr('class', 'selection-label');\n\n        wrapper.append('y');\n\n        var $maps_sub = wrapper.append('svg')\n            .attr({\n                width: width,\n                height: height\n            });\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n            //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n            //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n                d3.selectAll('path#bsasmap').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\n            '>35-60%', '>60-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n\t    .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n\t\treturn i * 60;\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * 60)+30;\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        $maps_sub_legends.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n})(d3);\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    var yScale = d3.scale.sqrt();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -dimensions.margin.top)\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(1, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    function bindEvents() {\r\n        d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n\r\n        function mouseoutFunc() {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n            tooltip_death.classed(\"hidden\", true);\r\n        }\r\n\r\n        function mouseoverFunc(d, i) {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n            d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n            tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n        }\r\n\r\n        var coordinates = [0, 0];\r\n\r\n        function mousemoveFunc(d) {\r\n            coordinates = d3.mouse(this);\r\n            var x = coordinates[0];\r\n            var y = coordinates[1];\r\n            tooltip_death\r\n                .style(\"top\", y + \"px\")\r\n                .style(\"left\", x + \"px\")\r\n                .style('position', 'absolute')\r\n                .style('z-index', 1001);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n\n    var chartData = [{\n  \t\"date\": new Date(\"01/01/2014\"),\n  \t\"FentanylHeroin\": \"0.19\",\n  \t\"Fentanyl\": \"0.22\",\n  \t\"Heroin\": \"0.41\",\n  \t\"Methadone\": \"0.10\"\n  \t}, {\n  \t\"date\": new Date(\"04/01/2014\"),\n  \t\"FentanylHeroin\": \"0.18\",\n  \t\"Fentanyl\": \"0.19\",\n  \t\"Heroin\": \"0.49\",\n  \t\"Methadone\": \"0.07\"\n  \t}, {\n  \t\"date\": new Date(\"07/01/2014\"),\n  \t\"FentanylHeroin\": \"0.14\",\n  \t\"Fentanyl\": \"0.14\",\n  \t\"Heroin\": \"0.53\",\n  \t\"Methadone\": \"0.10\"\n  \t}, {\n  \t\"date\": new Date(\"10/01/2014\"),\n  \t\"FentanylHeroin\": \"0.22\",\n  \t\"Fentanyl\": \"0.27\",\n  \t\"Heroin\": \"0.35\",\n  \t\"Methadone\": \"0.06\"\n  \t}, {\n  \t\"date\": new Date(\"01/01/2015\"),\n  \t\"FentanylHeroin\": \"0.19\",\n  \t\"Fentanyl\": \"0.40\",\n  \t\"Heroin\": \"0.30\",\n  \t\"Methadone\": \"0.04\"\n  \t}, {\n  \t\"date\": new Date(\"04/01/2015\"),\n  \t\"FentanylHeroin\": \"0.24\",\n  \t\"Fentanyl\": \"0.38\",\n  \t\"Heroin\": \"0.29\",\n  \t\"Methadone\": \"0.05\"\n  \t}, {\n  \t\"date\": new Date(\"07/01/2015\"),\n  \t\"FentanylHeroin\": \"0.19\",\n  \t\"Fentanyl\": \"0.40\",\n  \t\"Heroin\": \"0.30\",\n  \t\"Methadone\": \"0.06\"\n  \t}, {\n  \t\"date\": new Date(\"10/01/2015\"),\n  \t\"FentanylHeroin\": \"0.22\",\n  \t\"Fentanyl\": \"0.43\",\n  \t\"Heroin\": \"0.24\",\n  \t\"Methadone\": \"0.05\"\n  \t}, {\n  \t\"date\": new Date(\"01/01/2016\"),\n  \t\"FentanylHeroin\": \"0.15\",\n  \t\"Fentanyl\": \"0.50\",\n  \t\"Heroin\": \"0.17\",\n  \t\"Methadone\": \"0.04\"\n\t}];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n    \tvar date2 = new Date();\n    \tdate2.setMonth(date.getMonth() - 10);\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\n    \treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n      top: 30,\n      right: 150,\n      bottom: 50,\n      left: 42\n    };\n\n    var width = 540;\n    var height = 300;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n                    \t.scale(x)\n                    \t.orient(\"bottom\")\n                    \t.ticks(d3.time.months, 3)\n                    \t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n                      \t.scale(x)\n                      \t.ticks(d3.time.years, 1)\n                      \t.tickFormat(yearformat)\n                      \t.tickSize(3, 0)\n                      \t.tickPadding(1)\n                      \t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n                    \t.scale(y)\n                    \t.orient(\"left\")\n                    \t.tickFormat(formatPercent)\n                    \t.ticks(5)\n                    \t.tickSize(3, 0)\n                    \t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n              \t.x(function(d) {\n              \t    return x(d.label);\n              \t})\n              \t.y(function(d) {\n              \t    return y(d.value);\n              \t});\n\n\n    var $lines_fent = d3.select(document.querySelector(rootSelector))\n    \t.append(\"svg\")\n    \t.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    \t.attr(\"viewBox\", \"0 0 \"+(width + margin.left + margin.right) +\" \"+(height + margin.top + margin.bottom))\n    \t//class to make it responsive\n    \t.classed(\"svg-content-responsive\", true)\n    \t.append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n      return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n    \treturn {\n    \t    name: name,\n    \t    values: chartData.map(function(d) {\n        \t\treturn {\n        \t\t    name: name,\n        \t\t    label: d[xLabel],\n        \t\t    value: +d[name]\n        \t\t};\n    \t    })\n    \t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(seriesData, function(c) {\n          return d3.min(c.values, function(d) {\n      \t//return d.value;\n      \treturn 0;\n          });\n      }),\n      d3.max(seriesData, function(c) {\n          return d3.max(c.values, function(d) {\n      \treturn d.value;\n          });\n      })\n    ]);\n\n    $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-x-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis_fent)\n    \t.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.style(\"stroke-width\", \"1.5px\")\n    \t.call(xAxis_fent);\n\n    $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n    \t.call(xAxis2_fent)\n    \t.append(\"text\")\n    \t.attr(\"x\", width - margin.left)\n    \t.attr(\"y\", margin.bottom - 32)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-x-axis-label\")\n    \t.text(\"Quarter\");\n\n\n    $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-y-axis\")\n    \t.call(yAxis_fent)\n    \t.append(\"text\")\n    \t.attr(\"x\", 0)\n    \t.attr(\"y\", -44)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-y-axis-label\")\n    \t.text(\"Percent Opioid Deaths\");\n\n    var series = $lines_fent.selectAll(\".series\")\n    \t.data(seriesData)\n    \t.enter().append(\"g\")\n    \t.attr(\"class\", \"seriesData\");\n\n\n    series.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.style(\"stroke\", function(d) {\n    \t    return color(d.name);\n    \t})\n    \t.style(\"stroke-width\", function(d) {\n    \t    return lineStroke(d.name);\n    \t})\n    \t.style(\"stroke-dasharray\", function(d) {\n    \t    return lineDash(d.name);\n    \t})\n    \t.style(\"fill\", \"none\");\n\n\n    series.append(\"path\")\n    \t.attr(\"class\", \"hit-area-ext\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n    \t.style(\"fill\", \"none\");\n\n\n    $lines_fent.append(\"text\")\n    \t.attr(\"class\", \"vis-data-label\")\n    \t.attr(\"x\", width + 5)\n    \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    \t.attr(\"dy\", \"1em\")\n    \t.text(\"Fentanyl & Heroin\");\n\n    $lines_fent.append(\"text\")\n    \t.attr(\"class\", \"vis-data-label\")\n    \t.attr(\"x\", width + 5)\n    \t.attr(\"y\", y(chartData[8].Methadone) - 7)\n    \t.attr(\"dy\", \"1em\")\n    \t.text(\"Methadone\");\n\n    $lines_fent.append(\"text\")\n    \t.attr(\"class\", \"vis-data-label\")\n      .attr(\"x\", width + 5)\n      .attr(\"y\", y(chartData[8].Heroin) - 10)\n      .attr(\"dy\", \"1em\")\n      .text(\"Heroin\");\n\n    $lines_fent.append(\"text\")\n    \t.attr(\"class\", \"vis-data-label\")\n      .attr(\"x\", width + 5)\n      .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n      .attr(\"dy\", \"1em\")\n      .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"focus\")\n    \t.classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n    \t.style(\"stroke-width\", 1)\n    \t.attr(\"r\", 6)\n    \t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n    \t.on(\"mouseover\", mouseoverFunc)\n    \t.on(\"mouseout\", mouseoutFunc)\n    \t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n      \tfocus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n    \t//         }\n\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1)\n\n    \ttooltipFent.classed(\"hidden\", false)\n    \t.html(percentVal);\n    \t//console.log(d.rates[i]);\n    \t//console.log(d3.select(this).select(\"path.point\"));\n    \tfocus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n    \t//console.log(\"events\", window.event, d3.event);\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1);\n\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n    \ttooltipFent\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n    \t    .html(percentVal);\n    }\n})();\n","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n     var town_names = [\n         //\"massachusetts\",\n         \"abington\",\n         \"acton\",\n         \"acushnet\",\n         \"adams\",\n         \"agawam\",\n         \"alford\",\n         \"amesbury\",\n         \"amherst\",\n         \"andover\",\n         \"aquinnah\",\n         \"arlington\",\n         \"ashburnham\",\n         \"ashby\",\n         \"ashfield\",\n         \"ashland\",\n         \"athol\",\n         \"attleboro\",\n         \"auburn\",\n         \"avon\",\n         \"ayer\",\n         \"barnstable\",\n         \"barre\",\n         \"becket\",\n         \"bedford\",\n         \"belchertown\",\n         \"bellingham\",\n         \"belmont\",\n         \"berkley\",\n         \"berlin\",\n         \"bernardston\",\n         \"beverly\",\n         \"billerica\",\n         \"blackstone\",\n         \"blandford\",\n         \"bolton\",\n         \"boston\",\n         \"bourne\",\n         \"boxborough\",\n         \"boxford\",\n         \"boylston\",\n         \"braintree\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brookline\",\n         \"buckland\",\n         \"burlington\",\n         \"cambridge\",\n         \"canton\",\n         \"carlisle\",\n         \"carver\",\n         \"charlemont\",\n         \"charlton\",\n         \"chatham\",\n         \"chelmsford\",\n         \"chelsea\",\n         \"cheshire\",\n         \"chester\",\n         \"chesterfield\",\n         \"chicopee\",\n         \"chilmark\",\n         \"clarksburg\",\n         \"clinton\",\n         \"cohasset\",\n         \"colrain\",\n         \"concord\",\n         \"conway\",\n         \"cummington\",\n         \"dalton\",\n         \"danvers\",\n         \"dartmouth\",\n         \"dedham\",\n         \"deerfield\",\n         \"dennis\",\n         \"dighton\",\n         \"douglas\",\n         \"dover\",\n         \"dracut\",\n         \"dudley\",\n         \"dunstable\",\n         \"duxbury\",\n         \"eastbridgewater\",\n         \"eastbrookfield\",\n         \"eastlongmeadow\",\n         \"eastham\",\n         \"easthampton\",\n         \"easton\",\n         \"edgartown\",\n         \"egremont\",\n         \"erving\",\n         \"essex\",\n         \"everett\",\n         \"fairhaven\",\n         \"fallriver\",\n         \"falmouth\",\n         \"fitchburg\",\n         \"florida\",\n         \"foxborough\",\n         \"framingham\",\n         \"franklin\",\n         \"freetown\",\n         \"gardner\",\n         \"gay head\",\n         \"georgetown\",\n         \"gill\",\n         \"gloucester\",\n         \"goshen\",\n         \"gosnold\",\n         \"grafton\",\n         \"granby\",\n         \"granville\",\n         \"greatbarrington\",\n         \"greenfield\",\n         \"groton\",\n         \"groveland\",\n         \"hadley\",\n         \"halifax\",\n         \"hamilton\",\n         \"hampden\",\n         \"hancock\",\n         \"hanover\",\n         \"hanson\",\n         \"hardwick\",\n         \"harvard\",\n         \"harwich\",\n         \"hatfield\",\n         \"haverhill\",\n         \"hawley\",\n         \"heath\",\n         \"hingham\",\n         \"hinsdale\",\n         \"holbrook\",\n         \"holden\",\n         \"holland\",\n         \"holliston\",\n         \"holyoke\",\n         \"hopedale\",\n         \"hopkinton\",\n         \"hubbardston\",\n         \"hudson\",\n         \"hull\",\n         \"huntington\",\n         \"ipswich\",\n         \"kingston\",\n         \"lakeville\",\n         \"lancaster\",\n         \"lanesborough\",\n         \"lawrence\",\n         \"lee\",\n         \"leicester\",\n         \"lenox\",\n         \"leominster\",\n         \"leverett\",\n         \"lexington\",\n         \"leyden\",\n         \"lincoln\",\n         \"littleton\",\n         \"longmeadow\",\n         \"lowell\",\n         \"ludlow\",\n         \"lunenburg\",\n         \"lynn\",\n         \"lynnfield\",\n         \"malden\",\n         \"manchester\",\n         \"mansfield\",\n         \"marblehead\",\n         \"marion\",\n         \"marlborough\",\n         \"marshfield\",\n         \"mashpee\",\n         \"mattapoisett\",\n         \"maynard\",\n         \"medfield\",\n         \"medford\",\n         \"medway\",\n         \"melrose\",\n         \"mendon\",\n         \"merrimac\",\n         \"methuen\",\n         \"middleborough\",\n         \"middlefield\",\n         \"middleton\",\n         \"milford\",\n         \"millbury\",\n         \"millis\",\n         \"millville\",\n         \"milton\",\n         \"monroe\",\n         \"monson\",\n         \"montague\",\n         \"monterey\",\n         \"montgomery\",\n         \"mountwashington\",\n         \"nahant\",\n         \"nantucket\",\n         \"natick\",\n         \"needham\",\n         \"newashford\",\n         \"newbedford\",\n         \"newbraintree\",\n         \"newmarlborough\",\n         \"newsalem\",\n         \"newbury\",\n         \"newburyport\",\n         \"newton\",\n         \"norfolk\",\n         \"westadams\",\n         \"westandover\",\n         \"westattleborough\",\n         \"westbrookfield\",\n         \"westreading\",\n         \"northampton\",\n         \"northborough\",\n         \"northbridge\",\n         \"northfield\",\n         \"norton\",\n         \"norwell\",\n         \"norwood\",\n         \"oak bluffs\",\n         \"oakham\",\n         \"orange\",\n         \"orleans\",\n         \"otis\",\n         \"oxford\",\n         \"palmer\",\n         \"paxton\",\n         \"peabody\",\n         \"pelham\",\n         \"pembroke\",\n         \"pepperell\",\n         \"peru\",\n         \"petersham\",\n         \"phillipston\",\n         \"pittsfield\",\n         \"plainfield\",\n         \"plainville\",\n         \"plymouth\",\n         \"plympton\",\n         \"princeton\",\n         \"provincetown\",\n         \"quincy\",\n         \"randolph\",\n         \"raynham\",\n         \"reading\",\n         \"rehoboth\",\n         \"revere\",\n         \"richmond\",\n         \"rochester\",\n         \"rockland\",\n         \"rockport\",\n         \"rowe\",\n         \"rowley\",\n         \"royalston\",\n         \"russell\",\n         \"rutland\",\n         \"salem\",\n         \"salisbury\",\n         \"sandisfield\",\n         \"sandwich\",\n         \"saugus\",\n         \"savoy\",\n         \"scituate\",\n         \"seekonk\",\n         \"sharon\",\n         \"sheffield\",\n         \"shelburne\",\n         \"sherborn\",\n         \"shirley\",\n         \"shrewsbury\",\n         \"shutesbury\",\n         \"somerset\",\n         \"somerville\",\n         \"southhadley\",\n         \"southampton\",\n         \"southborough\",\n         \"southbridge\",\n         \"southwick\",\n         \"spencer\",\n         \"springfield\",\n         \"sterling\",\n         \"stockbridge\",\n         \"stoneham\",\n         \"stoughton\",\n         \"stow\",\n         \"sturbridge\",\n         \"sudbury\",\n         \"sunderland\",\n         \"sutton\",\n         \"swampscott\",\n         \"swansea\",\n         \"taunton\",\n         \"templeton\",\n         \"tewksbury\",\n         \"tisbury\",\n         \"tolland\",\n         \"topsfield\",\n         \"townsend\",\n         \"truro\",\n         \"tyngsborough\",\n         \"tyringham\",\n         \"upton\",\n         \"uxbridge\",\n         \"wakefield\",\n         \"wales\",\n         \"walpole\",\n         \"waltham\",\n         \"ware\",\n         \"wareham\",\n         \"warren\",\n         \"warwick\",\n         \"washington\",\n         \"watertown\",\n         \"wayland\",\n         \"webster\",\n         \"wellesley\",\n         \"wellfleet\",\n         \"wendell\",\n         \"wenham\",\n         \"westboylston\",\n         \"westbridgewater\",\n         \"westbrookfield\",\n         \"westnewbury\",\n         \"westspringfield\",\n         \"weststockbridge\",\n         \"westtisbury\",\n         \"westborough\",\n         \"westfield\",\n         \"westford\",\n         \"westhampton\",\n         \"westminster\",\n         \"weston\",\n         \"westport\",\n         \"westwood\",\n         \"weymouth\",\n         \"whately\",\n         \"whitman\",\n         \"wilbraham\",\n         \"williamsburg\",\n         \"williamstown\",\n         \"wilmington\",\n         \"winchendon\",\n         \"winchester\",\n         \"windsor\",\n         \"winthrop\",\n         \"woburn\",\n         \"worcester\",\n         \"worthington\",\n         \"wrentham\",\n         \"yarmouth\"\n     ];\n     var current_town = \"massachusetts\";\n\n     var margin = {\n             top: 0,\n             right: 10,\n             bottom: 30,\n             left: 30\n         },\n         wrapper_width = rootNode.clientWidth,\n         wrapper_height = 400,\n         width = wrapper_width - margin.left - margin.right,\n         height = wrapper_height - margin.top - margin.bottom;\n\n     var bisectAge = d3.bisector(function(d) {\n         return d.age;\n     }).left;\n     var percent = d3.format(',.0%');\n     var yearformat = d3.format(\"d\");\n     // var min_age = 2005;\n     // var fields = ['emp', 'edu', 'race', 'orig'];\n     var groups = {};\n\n     var x = d3.scale.linear();\n\n     var y = d3.scale.linear();\n\n     var color = d3.scale.category10();\n\n     var xAxis_bsas = d3.svg.axis();\n\n     var yAxis_bsas = d3.svg.axis();\n\n     var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n     var $lines_bsas = $svg\n         .append(\"g\")\n         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n         .append(\"text\")\n         .attr(\"x\", 635)\n         .attr(\"y\", 15)\n         .attr(\"text-anchor\", \"middle\")\n         .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n\n    var legend_pos_text = -60,\n         legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n    function render () {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n         .scale(x)\n         .tickFormat(yearformat)\n         .ticks((width < 500 ? 4 : 10))\n         .orient(\"bottom\")\n         .outerTickSize(0);\n\n        yAxis_bsas\n         .scale(y)\n         .tickSize(width)\n         .orient(\"right\")\n         .tickFormat(percent);\n\n\n        line.x(function(d) {\n             return x(d.age);\n         })\n         .y(function(d) {\n             return y(d.value);\n         })\n         .defined(function(d) {\n             return y(d.value);\n         }) // Omit empty values.;\n\n         $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n         $y_axis.call(yAxis_bsas);\n         $lines_bsas.selectAll(\".vis-y-axis text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n         $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        renderLegend();\n        renderLines();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        $legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        $legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(1*line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(1*line_height)+3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(2*line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(2*line_height)+3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(3*line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(3*line_height)+3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(4*line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(4*line_height)+3);\n        $legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(5*line_height));\n        $legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(5*line_height)+3);\n    }\n\n    function setupLines () {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        $lines.none.attr(\"d\", function(d) {\n            return line(groups[current_town + \"none\"].values);\n        });\n    }\n\n\n\n\n\n     d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\n         if (error) throw error;\n         //console.log(groups);\n         // var marriages = groups[current_town];\n\n         x.domain([2005, d3.max(data, function(d) {\n             return d.age;\n         })]);\n         y.domain([0, .99]);\n\n         setupLines();\n         render();\n         window.addEventListener('resize', render);\n\n\n\n         // Autocomplete\n\n         $(\".btn-bsas\").addClass('active');\n         d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n             current_town = d3.select(this).attr(\"data-val\");\n             update();\n             d3.select(this).classed('active', true);\n             $(\"#tags\").val('');\n         });\n\n\n         $(\"#tags\").autocomplete({\n             source: function(request, response) {\n                 var matches = $.map(town_names, function(acItem) {\n                     if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                         return acItem;\n                     }\n                 });\n                 response(matches);\n                 //$(\"#tags\").focus(function() {\n                     // if (matches.length == 1) {\n                     //     current_town = matches[0];\n                     //     $(\".btn-bsas\").removeClass('active');\n                     //     update();\n                     // }\n                 //});\n                 //console.log(matches);\n             },\n             select: function(event, ui) {\n                 current_town = ui.item.value;\n                 $(\".btn-bsas\").removeClass('active');\n                 update();\n             }\n         });\n\n         function update() {\n\n             // marriages = groups[current_town];\n             //update alcohol line\n             $lines_bsas.select(\".line.alcohol\")\n                 .transition()\n                 .duration(600)\n                 .delay(180)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"alcohol\"].values);\n                 });\n\n             //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n             //update alcohol circles\n             for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n                 var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                     // console.log(string_select);\n\n                 if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"alcohol\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"alcohol\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n\n\n             //marijuana\n             $lines_bsas.select(\".line.marijuana\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"marijuana\"].values);\n                 });\n             //update marijuana circles\n             for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n                 var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                     //console.log(string_select);\n\n                 if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"marijuana\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"marijuana\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n             //none\n             $lines_bsas.select(\".line.none\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"none\"].values);\n                 });\n             //update none circles\n             for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n                 var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n                 var value_select = groups[current_town + \"none\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (groups[current_town + \"none\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"none\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"none\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //opioids\n             $lines_bsas.select(\".line.opioids\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"opioids\"].values);\n                 });\n             //update opioids circles\n             for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n                 var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n                 var value_select = groups[current_town + \"opioids\"].values[i].value\n                     //console.log(string_select);\n                     //console.log(value_select);\n                     //console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"opioids\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"opioids\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //other\n             $lines_bsas.select(\".line.other\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"other\"].values);\n                 });\n             //update other circles\n             for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n                 var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n                 var value_select = groups[current_town + \"other\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"other\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"other\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n         }\n\n\n\n\n         // alcohol\n         var focusalcohol = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus alcohol\")\n             .style(\"display\", \"none\");\n         focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // marijuana\n         var focusmarijuana = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus marijuana\")\n             .style(\"display\", \"none\");\n         focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusnone = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus none\")\n             .style(\"display\", \"none\");\n         focusnone.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusnone.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // opioids\n         var focusopioids = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus opioids\")\n             .style(\"display\", \"none\");\n         focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusother = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus other\")\n             .style(\"display\", \"none\");\n         focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // Events\n        $eventOverlay\n             .on(\"mouseover\", function() {\n                 focusmarijuana.style(\"display\", null);\n                 focusalcohol.style(\"display\", null);\n                 focusnone.style(\"display\", null);\n                 focusopioids.style(\"display\", null);\n                 focusother.style(\"display\", null);\n                 //focusage.style(\"display\", null);\n             })\n             .on(\"mouseout\", function() {\n                 focusmarijuana.style(\"display\", \"none\");\n                 focusalcohol.style(\"display\", \"none\");\n                 focusnone.style(\"display\", \"none\");\n                 focusopioids.style(\"display\", \"none\");\n                 focusother.style(\"display\", \"none\");\n                 //focusage.style(\"display\", \"none\");\n             })\n             .on(\"mousemove\", mousemove);\n\n         function mousemove() {\n\n\n\n             var x0 = x.invert(d3.mouse(this)[0])\n\n             // Alcohol\n             var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                 d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                 d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                 d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n             if (d_alcohol.value >= 0) {\n                 focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                 focusalcohol.select(\"text\").text(percent(d_alcohol.value));\n                 focusalcohol.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusalcohol.select(\"circle\").attr(\"r\", 0);\n                 focusalcohol.select(\"text\").text(\"\");\n             }\n\n             // Marijuana\n\n             var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                 d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                 d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                 d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n             // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n             // console.log(d_marijuana.value >= 0);\n\n             if (d_marijuana.value >= 0) {\n                 focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                 focusmarijuana.select(\"text\").text(percent(d_marijuana.value));\n                 focusmarijuana.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                 focusmarijuana.select(\"text\").text(\"\");\n             }\n\n             // None\n\n             var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n                 d0_none = groups[current_town + \"none\"].values[i_none - 1],\n                 d1_none = groups[current_town + \"none\"].values[i_none],\n                 d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n             if (d_none.value >= 0) {\n                 focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n                 focusnone.select(\"text\").text(percent(d_none.value));\n                 focusnone.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusnone.select(\"circle\").attr(\"r\", 0);\n                 focusnone.select(\"text\").text(\"\");\n             }\n\n\n             // Opioids\n             var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                 d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                 d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                 d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n             if (d_opioids.value >= 0) {\n                 focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                 focusopioids.select(\"text\").text(percent(d_opioids.value));\n                 focusopioids.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusopioids.select(\"circle\").attr(\"r\", 0);\n                 focusopioids.select(\"text\").text(\"\");\n             }\n\n\n             // other\n             var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                 d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                 d1_other = groups[current_town + \"other\"].values[i_other],\n                 d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n             //console.log(d_other.value);\n\n             if (d_other.value >= 0) {\n                 focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                 focusother.select(\"text\").text(percent(d_other.value));\n                 focusother.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusother.select(\"circle\").attr(\"r\", 0);\n                 focusother.select(\"text\").text(\"\");\n             }\n\n\n             // Adjust label horizontal positions.\n             if (x0 > 80) {\n                 focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             } else {\n                 focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             }\n\n\n\n         }\n\n     }); // @end d3.tsv()\n\n\n     function type(d, i) {\n\n         d3.keys(d).forEach(function(key) {\n             d[key] = +d[key];\n             if (key != 'age') {\n                 if (!(key in groups)) {\n                     groups[key] = {\n                         'values': [{\n                             age: d.age,\n                             value: d[key]\n                         }]\n                     };\n                 } else {\n                     groups[key]['values'].push({\n                         age: d.age,\n                         value: d[key]\n                     });\n                 }\n             }\n         });\n\n         return d;\n\n     }\n})();\n","$(document).ready(function() {\n\n    var prescription = [{\n        \"Yes\": 83,\n        \"No\": 17\n    }, {\n        \"Yes\": 57,\n        \"No\": 43\n    }, {\n        \"Yes\": 50,\n        \"No\": 50\n    }, {\n        \"Yes\": 37,\n        \"No\": 63\n    }];\n\n    var heroin = [{\n        \"Yes\": 65,\n        \"No\": 35\n    }, {\n        \"Yes\": 28,\n        \"No\": 72\n    }, {\n        \"Yes\": 20,\n        \"No\": 80\n    }, {\n        \"Yes\": 13,\n        \"No\": 87\n    }];\n\n    var fentanyl = [{\n        \"Yes\": 68,\n        \"No\": 32\n    }, {\n        \"Yes\": 30,\n        \"No\": 70\n    }, {\n        \"Yes\": 22,\n        \"No\": 78\n    }, {\n        \"Yes\": 17,\n        \"No\": 83\n    }];\n\n    var both = [{\n        \"Yes\": 64,\n        \"No\": 36\n    }, {\n        \"Yes\": 24,\n        \"No\": 76\n    }, {\n        \"Yes\": 15,\n        \"No\": 85\n    }, {\n        \"Yes\": 9,\n        \"No\": 91\n    }];\n\n    var methadone = [{\n        \"Yes\": 76,\n        \"No\": 24\n    }, {\n        \"Yes\": 46,\n        \"No\": 54\n    }, {\n        \"Yes\": 41,\n        \"No\": 59\n    }, {\n        \"Yes\": 27,\n        \"No\": 73\n    }];\n\n    var buprenorphine = [{\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }];\n\n\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n    $(\"#studyperiod\").addClass(\"active\");\n\n    // $(\"#options_substance\").on('input change', function() {\n    //     data_substance = eval(($(\"#options_substance option:selected\").val()));\n    //     asignVal_substance(data_substance, time);\n    // });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"During the Study Period\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-perioid\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n\n    function asignVal_substance(type, time) {\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Present</th><th>Not Present</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n        })\n\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //PIE CHART\n    ///////////////////////\n\n    var margin = {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 0\n    };\n    var width = 550 - margin.left - margin.right,\n        height = 300 - margin.top - margin.bottom;\n\n    var labelsWidth = width * 0.4;\n    var labelWidth = labelsWidth * 0.1;\n    var labelHeight = labelWidth * 0.6;\n\n    var animateDuration = 300;\n    var outerRadius = width - labelsWidth < height ? (width - labelsWidth) / 2 : height / 2;\n    var innerRadius = outerRadius * 0.5; // 40%\n\n    var arc = d3.svg.arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius);\n\n    var pie = d3.layout\n        .pie()\n        .sort(null)\n        .value(getValue)\n        .startAngle(1.1 * Math.PI)\n        .endAngle(3.1 * Math.PI);\n\n    var explodedIndex;\n    var color = d3.scale.ordinal()\n        .range([\"#b71c1c\", \"#d32f2f\", \"#f44336\", \"#ef5350\", \"#e57373\", \"#ef9a9a\"]);\n\n    var $pie_substance = d3.select('#piechart')\n        .attr({\n            width: width + margin.left + margin.right,\n            height: height + margin.top + margin.bottom\n        })\n        .append('g')\n        .attr({\n            class: 'labels',\n            transform: 'translate(' + (width - (labelsWidth + margin.right)) + ', ' + margin.top + ')'\n        })\n        .select(getParent)\n        .append('g')\n        .attr({\n            class: 'pie',\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (height / 2 + margin.top) + ')'\n        })\n        .select(getParent)\n        .append('g')\n        .attr({\n            class: 'main-legend',\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (outerRadius + margin.top) + ')'\n        })\n        .select(getParent);\n\n    $pie_substance.select('.main-legend')\n        .append('circle')\n        .attr({\n            class: 'border',\n            opacity: 0,\n            stroke: 'rgba(255,255,255,1)',\n            fill: 'rgba(0,0,0,0)',\n            r: innerRadius * 0.9\n        })\n        .select(getParent)\n        .append('circle')\n        .attr({\n            class: 'circle',\n            opacity: 0,\n            fill: 'rgba(255,255,255,1)',\n            r: innerRadius * 0.9\n        })\n        .select(getParent)\n        .append('line')\n        .attr({\n            opacity: 0,\n            stroke: 'rgba(255,255,255,1)',\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0\n        })\n        .select(getParent)\n        .append('text')\n        .attr({\n            class: 'legend-title',\n            'font-size': '18px',\n            y: -1 * innerRadius * 0.13,\n            'font-family': 'Arial',\n            'text-anchor': 'middle',\n            'alignment-baseline': 'middle',\n            fill: '#fff'\n        })\n\n    .select(getParent)\n        .append('text')\n        .attr({\n            class: 'description',\n            'font-size': '14px',\n            y: innerRadius * 0.13,\n            'font-family': 'Arial',\n            'text-anchor': 'middle',\n            'alignment-baseline': 'middle',\n            fill: '#fff'\n        });\n\n    function getParent() {\n        return this.parentNode;\n    }\n\n    function getValue(d) {\n        return d.value;\n    }\n\n\n    function getSum(data) {\n        var _sum = 0;\n        data.forEach(function addValue(item) {\n            _sum += item.value;\n        });\n        return _sum;\n    }\n\n    function arcTween(d) {\n        var i;\n\n        function toArc(t) {\n            return arc(i(t));\n        }\n\n        function toEndAngle(t) {\n            d.endAngle = i(t);\n            return arc(d);\n        }\n\n        if ('undefined' === typeof this._current) {\n            i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n            this._current = d;\n            return toEndAngle;\n        }\n        i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return toArc;\n    }\n\n    function labelAnimation(d) {\n        return 'translate (' + arc.centroid(d) + ')';\n    }\n\n    function fill(d, i) {\n        return color(i);\n    }\n\n    function selectArcAnimation(_d) {\n        var dist = outerRadius * 0.05;\n        _d.midAngle = ((_d.endAngle - _d.startAngle) / 2) + _d.startAngle;\n        var x = Math.sin(_d.midAngle) * dist;\n        var y = -Math.cos(_d.midAngle) * dist;\n        return 'translate(' + x + ',' + y + ')';\n    }\n\n    function updatePie(data) {\n        var sum = getSum(data);\n        data = pie(data);\n        var arcs = $pie_substance.select('.pie')\n            .selectAll('.arc')\n            .data(data);\n\n        var isDelay = arcs.selectAll('path').length;\n        var _duration = isDelay ? animateDuration : animateDuration / 2;\n\n        function getPercent(d) {\n            return ((d.value / sum) * 100).toFixed(1) + '%';\n        }\n\n        function getLegend(d) {\n            return d.data.name + ' Present | ' + d.data.value;\n        }\n\n        function liveLarge(d) {\n            var angle = 360 * (d.value / sum);\n            var arcLength = (Math.PI * (outerRadius / 2) * angle) / 180;\n            return arcLength > Math.PI * outerRadius * 0.01;\n        }\n\n        function onMouseIn(d, i) {\n            explodedIndex = i;\n            onClick(d, i);\n\n            function onClick(d, i) {\n\n                console.log(d.data.option);\n                $('.substance-type').html(d.data.description);\n                $('#total').html(d.data.value);\n                if (d.data.option == \"buprenorphine\") {\n                    $('#timeline_blocks').attr('max', 0);\n                } else {\n                    $('#timeline_blocks').attr('max', 3);\n                };\n                data_substance = eval(d.data.option);\n                asignVal_substance(data_substance, time);\n            };\n\n\n            var label = $pie_substance.selectAll('.legend')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                });\n            if (!label.attr('data-exit')) {\n                label.transition()\n                    .duration(animateDuration / 2)\n                    .attr({\n                        opacity: 1,\n                        transform: 'translate(10, ' + ((labelHeight + 5) * i) + ')'\n                    });\n            }\n\n\n            $pie_substance.selectAll('.arc')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                })\n                .transition()\n                .duration(animateDuration / 2)\n                .attr('transform', selectArcAnimation);\n\n            $pie_substance.select('.main-legend')\n                .select('.border')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    stroke: fill(null, i)\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.circle')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    fill: fill(null, i)\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('line')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    stroke: fill(null, i),\n                    x1: Math.sin(d.midAngle) * (innerRadius * 0.7),\n                    y1: -Math.cos(d.midAngle) * (innerRadius * 0.7),\n                    x2: Math.sin(d.midAngle) * innerRadius,\n                    y2: -Math.cos(d.midAngle) * innerRadius\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.legend-title')\n                .text(d.data.name)\n                // .append(d.data.name[1])\n                .select(getParent)\n                .select('.description')\n                .text(d.data.value)\n        }\n\n        function onMouseOut(d, i) {\n            $pie_substance.select('.main-legend')\n                .selectAll(['.circle', '.border'])\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 0\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('line')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 0\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.legend-title')\n                .text('')\n                .select(getParent)\n                .select('.description')\n                .text('');\n\n            if ('undefined' === typeof i) {\n                return;\n            }\n            var label = $pie_substance.selectAll('.legend')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                });\n\n            if (!label.attr('data-exit')) {\n                label.transition()\n                    .duration(animateDuration / 2)\n                    .attr({\n                        opacity: 1,\n                        transform: 'translate(0, ' + ((labelHeight + 5) * i) + ')'\n                    });\n            }\n\n            $pie_substance.selectAll('.arc')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                })\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    transform: 'translate(0,0)'\n                });\n        }\n\n        onMouseOut();\n        // update Pie\n\n        arcs.enter()\n            .append('g')\n            .attr('class', 'arc')\n\n        .on('click', function(d, i) {\n                // onMouseOut.call($(this).parent(), d, i);\n                // console.log($(this));\n                if (explodedIndex >= 0) {\n                    onMouseOut(null, explodedIndex);\n                }\n                onMouseIn(d, i);\n            })\n            //.on('mouseout', onMouseOut)\n            // .on('mouseout', onMouseOut)\n            .append('path')\n            .attr({\n                fill: fill\n            })\n            .attr(\"d\", arc).style('stroke', 'white')\n            .style('stroke-width', 2)\n            .select(getParent)\n            .filter(liveLarge)\n            .append('text')\n            .attr({\n                'font-family': 'Arial',\n                'font-size': '14px',\n                fill: '#fff',\n                'text-anchor': 'middle'\n            });\n\n\n        arcs.select('path')\n            .transition()\n            .delay(function delayFn(d, i) {\n                return isDelay ? 0 : _duration * i;\n            })\n            .duration(_duration)\n            .attrTween('d', arcTween);\n\n        arcs.select('text')\n            .text(getPercent)\n            .transition()\n            .duration(animateDuration)\n            .attr({\n                class: 'label-content',\n                transform: labelAnimation\n            });\n\n        arcs.exit()\n            .on('mouseenter', null)\n            .on('mouseout', null)\n            .remove();\n\n        // Update Legends\n\n        var legends = $pie_substance\n            .select('.labels')\n            .selectAll('.legend')\n            .data(data);\n\n        legends.enter()\n            .append('g')\n            .on('click', function(d, i) {\n                // onMouseOut.call($(this).parent(), d, i);\n                // console.log($(this));\n                if (explodedIndex >= 0) {\n                    onMouseOut(null, explodedIndex);\n                }\n                onMouseIn(d, i);\n            })\n            .attr('class', 'legend')\n            .append('rect')\n            .attr({\n                width: labelWidth,\n                height: labelHeight,\n                fill: fill\n            })\n            .select(getParent)\n            .append('text')\n            .attr({\n                'font-size': '14px',\n                'font-family': 'Arial',\n                fill: '#666',\n                x: labelWidth + 5,\n                y: labelHeight / 2 + 5\n            })\n            .select(getParent)\n            .attr({\n                opacity: 0,\n                transform: function(d, i) {\n                    return 'translate(15, ' + ((labelHeight + 5) * i) + ')';\n                }\n            })\n            .transition()\n            .duration(animateDuration)\n            .attr({\n                opacity: 1,\n                transform: function(d, i) {\n                    return 'translate(0, ' + ((labelHeight + 5) * i) + ')';\n                }\n            });\n\n        legends.exit()\n            .on('mouseenter', null)\n            .on('mouseout', null)\n            .attr('data-exit', true)\n            .transition()\n            .duration(animateDuration / 2)\n            .attr({\n                opacity: 0,\n                transform: function(d, i) {\n                    return 'translate(-15, ' + ((labelHeight + 5) * i) + ')';\n                }\n            })\n            .remove();\n\n\n\n        legends.select('text').html(getLegend);\n\n    }\n\n    var data_pie = [\n        { name: 'Heroin', value: 867, option: 'heroin', description: 'heroin' },\n        { name: 'Fentanyl', value: 288, option: 'fentanyl', description: 'fentanyl' },\n        { name: 'Fentanyl & Heroin', value: 249, option: 'both', description: 'both fentanyl and heroin' },\n        { name: 'Prescription Opioid', value: 154, option: 'prescription', description: 'prescription opioid' },\n        { name: 'Methadone', value: 84, option: 'methadone', description: 'methadone' },\n        { name: 'Buprenorphine', value: 15, option: 'buprenorphine', description: 'buprenorphine' },\n    ];\n\n    generatePie(data_pie);\n\n\n    function generatePie(data) {\n        updatePie(data);\n    }\n\n\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender1\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender4\">' + prescription[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender1\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender4\">' + heroin[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        var $option = $(this).data('select');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        var $option = $(this).attr('id');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray) {\n        for (b = 0; b < noOfBlocks; b++) {\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            blockArray.push('<div class=\"block type_gender' + i + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n        redraw(dataset, selected);\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([0, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n        var age_bar_color = d3.scale.ordinal()\r\n            .range([\"#64B5F6\", \"#FF80AB\"]);\r\n        var age_bar_label = d3.scale.ordinal()\r\n            .range([\"Male\", \"Female\"])\r\n\r\n        var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n            .data(['2014', '2015'])\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(0,\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n        age_bars_legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 20)\r\n            .attr(\"height\", 20)\r\n            .style(\"fill\", age_bar_color);\r\n\r\n\r\n        age_bars_legend.append(\"text\")\r\n            .attr(\"x\", width + 10)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \".5em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text(age_bar_label);\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-axis\");\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-data-label\");\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".2f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                console.log(xScale(+d[column]) + 50);\r\n                console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n})();\r\n","$(document).ready(function(){\n\n    dataset = [\n        { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\n        { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\n        { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\n        { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\n    ];\n\n    var color = d3.scale.ordinal()\n        .range([\"#2166ac\", \"#92c5de\"]);\n    var margin = { top: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10), right: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 20), bottom: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 5), left: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10) },\n        width = parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n    var x0 = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal();\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    //var colorRange = d3.scale.category20();\n    //var color = d3.scale.ordinal()\n    //.range(colorRange.range());\n\n\n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $bars_race = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return { name: name, value: +d[name] };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(10,\" + height + \")\")\n        .call(xAxis_bars)\n        .selectAll(\".tick text\")\n        .call(wrap, x0.rangeBand());\n\n    $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\")\n        .call(yAxis_bars)\n        .append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\")\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n    \tdivtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n    \tdivtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n});\n"],"sourceRoot":"/source/"}