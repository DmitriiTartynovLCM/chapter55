{"version":3,"sources":["custom.js","lines-bsas.js","queue.js","maps_binary5yr.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","opioidsY2000","d","d3","select","attr","classed","opioidsY2015","queue","parallelism","pop","popping","started","tasks","active","t","a","slice","call","push","callback","apply","e","r","error","remaining","NaN","notify","await","all","concat","q","noop","Infinity","defer","arguments","f","awaitAll","version","define","amd","module","exports","this","createElement","scroll","ready","bind","event","preventDefault","$anchor","stop","animate","scrollTop","on","tab","target","newTabHeight","querySelector","clientHeight","parent","click","each","$id","$current","html","find","location","pathname","replace","hostname","hash","$target","data","get","play","load","response","asignVal_svg","val","val_svg","innerHTML","words","trim","split","potentialWidow","newWords","join","Vis","visualize","states","forEach","wrapper","visualizationWrapper","append","createMap","geo","selector","eventName","selectAll","el","shape","text","key","$maps_sub","width","features","enter","path","value","values","properties","TOWN_1","palette","toLowerCase","self","town_value","geoData","format","TOWN","node","parentNode","getElementsByClassName","fill-opacity","generateLegend_map_sub","scale","szDivId","szCaption","legendHeight","legendWidth","$maps_sub_svg","$maps_sub_legends","legendData","domain","range","s","domainStrings","unitWidth","json","projection","conicConformal","parallels","rotate","translate","colors_5yr","threshold","opChgScale","date","console","log","setupData","years","keys","dataset","OMRs","y","year","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","mouseoutFunc","tooltip_death","mouseoverFunc","y0","mouse","y1","invert","percentVal","mousemoveFunc","offsetX","layerY","offsetY","time","linear","svg","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","symbol","type","size","tooltipFent","focus","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","$legend","componentWidth","renderLegend","legendItems","legendItemsTranslate","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","map","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","$lines_bsas_x_axis_label","$lines_bsas_y_axis_label","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","transition","duration","delay","string_select","value_select","town_names","abington","acton","acushnet","adams","agawam","alford","amesbury","amherst","andover","aquinnah","arlington","ashburnham","ashby","ashfield","ashland","athol","attleboro","auburn","avon","ayer","barnstable","barre","becket","bedford","belchertown","bellingham","belmont","berkley","berlin","bernardston","beverly","billerica","blackstone","blandford","bolton","boston","bourne","boxborough","boxford","boylston","braintree","brewster","bridgewater","brimfield","brockton","brookfield","brookline","buckland","burlington","cambridge","canton","carlisle","carver","charlemont","charlton","chatham","chelmsford","chelsea","cheshire","chester","chesterfield","chicopee","chilmark","clarksburg","clinton","cohasset","colrain","concord","conway","cummington","dalton","danvers","dartmouth","dedham","deerfield","dennis","dighton","douglas","dover","dracut","dudley","dunstable","duxbury","eastbridgewater","eastbrookfield","eastham","easthampton","eastlongmeadow","easton","edgartown","egremont","erving","essex","everett","fairhaven","fallriver","falmouth","fitchburg","florida","foxborough","framingham","franklin","freetown","gardner","georgetown","gill","gloucester","goshen","gosnold","grafton","granby","granville","greatbarrington","greenfield","groton","groveland","hadley","halifax","hamilton","hampden","hancock","hanover","hanson","hardwick","harvard","harwich","hatfield","haverhill","hawley","heath","hingham","hinsdale","holbrook","holden","holland","holliston","holyoke","hopedale","hopkinton","hubbardston","hudson","hull","huntington","ipswich","kingston","lakeville","lancaster","lanesborough","lawrence","lee","leicester","lenox","leominster","leverett","lexington","leyden","lincoln","littleton","longmeadow","lowell","ludlow","lunenburg","lynn","lynnfield","malden","manchester","mansfield","marblehead","marion","marlborough","marshfield","mashpee","mattapoisett","maynard","medfield","medford","medway","melrose","mendon","merrimac","methuen","middleborough","middlefield","middleton","milford","millbury","millis","millville","milton","monroe","monson","montague","monterey","montgomery","mountwashington","nahant","nantucket","natick","needham","newashford","newbedford","newbraintree","newbury","newburyport","newmarlborough","newsalem","newton","norfolk","northadams","northampton","northandover","northattleborough","northborough","northbridge","northbrookfield","northfield","northreading","norton","norwell","norwood","oakbluffs","oakham","orange","orleans","otis","oxford","palmer","paxton","peabody","pelham","pembroke","pepperell","peru","petersham","phillipston","pittsfield","plainfield","plainville","plymouth","plympton","princeton","provincetown","quincy","randolph","raynham","reading","rehoboth","revere","richmond","rochester","rockland","rockport","rowe","rowley","royalston","russell","rutland","salem","salisbury","sandisfield","sandwich","saugus","savoy","scituate","seekonk","sharon","sheffield","shelburne","sherborn","shirley","shrewsbury","shutesbury","somerset","somerville","southampton","southborough","southbridge","southhadley","southwick","spencer","springfield","sterling","stockbridge","stoneham","stoughton","stow","sturbridge","sudbury","sunderland","sutton","swampscott","swansea","taunton","templeton","tewksbury","tisbury","tolland","topsfield","townsend","truro","tyngsborough","tyringham","upton","uxbridge","wakefield","wales","walpole","waltham","ware","wareham","warren","warwick","washington","watertown","wayland","webster","wellesley","wellfleet","wendell","wenham","westborough","westboylston","westbridgewater","westbrookfield","westfield","westford","westhampton","westminster","westnewbury","weston","westport","westspringfield","weststockbridge","westtisbury","westwood","weymouth","whately","whitman","wilbraham","williamsburg","williamstown","wilmington","winchendon","winchester","windsor","winthrop","woburn","worcester","worthington","wrentham","yarmouth","bisectAge","bisector","category10","none","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","toUpperCase","indexOf","term","ui","asignVal_substance","Yes","empty","makeChart_substance","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","person_path","person_svg_No","b","person_svg_Yes","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","stroke","stroke-width","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","parseInt","time_period","o","stack","layout","n","parseFloat","substance_html","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","person_svg","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","reverse","lineNumber","dy","tspan","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","yAxisLabel","legendRect","legendText","bar","raceth","errorBarArea2014all","min2014","max2014","interpolate","errorBarArea2015all","min2015","max2015","errorBarArea2014white","errorBarArea2015white","errorBarArea2014black","errorBarArea2015black","errorBarArea2014hisp","errorBarArea2015hisp","errorBars2014all","errorBars2015all","errorBars2014white","errorBars2015white","errorBars2014black","errorBars2015black","errorBars2014hisp","errorBars2015hisp","linemult","linepad","2014","2015","area","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\r\n\r\ndocument.createElement(\"article\");\r\ndocument.createElement(\"section\");\r\n\r\nvar speed = -80;\r\nparallax(speed);\r\n\r\nfunction parallax(speed) {\r\n\r\n    var parallax = document.querySelectorAll(\".parallax\");\r\n    // console.log(parallax[0]);\r\n\r\n    window.onscroll = function() {\r\n        for (var i = 0; i < parallax.length; i++) {\r\n\r\n            //var position = $(el).position();\r\n            // var offset = [];\r\n            var $offset = $(parallax[i]).offset();\r\n            //console.log(offset);\r\n            var $windowHeight = window.height;\r\n            var $windowYOffset = window.pageYOffset / $offset.top;\r\n            // $windowYOffset[0] = 0;\r\n            //       console.log($windowYOffset);\r\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\r\n            // console.log(el+\",\"+i);\r\n\r\n            var extraY = [0, -10, -60, -40, 0, -20];\r\n\r\n            var elBackgrounPos = [];\r\n\r\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\r\n\r\n            //console.log(elBackgrounPos);\r\n\r\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\r\n        };\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////NAV\r\nfunction collapseNavbar() {\r\n    if ($(\".navbar\").offset().top > 50) {\r\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\r\n    } else {\r\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\r\n    }\r\n}\r\n\r\n$(window).scroll(collapseNavbar);\r\n$(document).ready(collapseNavbar);\r\n\r\n// jQuery for page scrolling feature - requires jQuery Easing plugin\r\n$(function() {\r\n    $('a.page-scroll').bind('click', function(event) {\r\n        event.preventDefault();\r\n        var $anchor = $(this);\r\n        $('html, body').stop().animate({\r\n            scrollTop: $($anchor.attr('href')).offset().top\r\n        }, 1500, 'easeInOutExpo');\r\n        event.preventDefault();\r\n    });\r\n});\r\n\r\n\r\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\r\n  var tab = $(e.target).attr('href');\r\n  var newTabHeight = document.querySelector(tab).clientHeight;\r\n  $(tab).parent().animate({ height: newTabHeight });\r\n});\r\n\r\n\r\n\r\n// Closes the Responsive Menu on Menu Item Click\r\n$('.navbar-collapse ul li a').click(function() {\r\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\r\n        $('.navbar-toggle:visible').click();\r\n    }\r\n});\r\n\r\n\r\n//when scrolling...\r\n$(window).scroll(function() {\r\n    if ($(window).scrollTop() >= 400) {\r\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\r\n    } else {\r\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\r\n    };\r\n\r\n\r\n    $('.target').each(function() {\r\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\r\n            var $id = $(this).attr('id');\r\n            $('#navigation li').removeClass('active');\r\n            $('#navigation li[id=' + $id + '1]').addClass('active');\r\n\r\n            var $current = $(this).attr('data-index');\r\n            // var $current = $(this).find('.section-title').text();\r\n            $('#current-section').html($current);\r\n        }\r\n    });\r\n\r\n});\r\n\r\n$(\"#navigation li\").on('click', function() {\r\n    $(this).parent().find(\"li\").removeClass(\"active\");\r\n    $(this).addClass(\"active\");\r\n});\r\n\r\n\r\n\r\n$('a[href*=#]:not([href=#])').click(function() {\r\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\r\n\r\n        var target = $(this.hash);\r\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n        if (target.length) {\r\n            $('html,body').animate({\r\n                scrollTop: target.offset().top\r\n            }, 500);\r\n            return false;\r\n        }\r\n    }\r\n    // });\r\n\r\n\r\n});\r\n\r\n\r\n/////////////////////////////Accordion\r\n// $(function() {\r\n//     var icons = {\r\n//         header: \"iconClosed\",\r\n//         activeHeader: \"iconOpen\",\r\n//         hoverHeader: 'iconHover'\r\n\r\n//     };\r\n//     $(\"#accordion\").accordion({\r\n//         icons: icons,\r\n//         heightStyle: \"content\"\r\n//     });\r\n// });\r\n\r\n/////////////////////////////Pills\r\n\r\n$('#pills-first a').click(function(e) {\r\n    e.preventDefault()\r\n    $(this).tab('show')\r\n});\r\n\r\n\r\n/////////////////////////////Video Links\r\n\r\n$(document).click('.js-play-video', function(e) {\r\n    var $target = $($(e.target).data('target'));\r\n    if($target.get(0)) {\r\n        $target.get(0).play();\r\n    }\r\n});\r\n\r\n/////////////////////////////SVG Infographic\r\n$(function() {\r\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\r\n        var $svg = $(this).find('svg');\r\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\r\n        var val_svg = '2/3';\r\n        asignVal_svg(val_svg);\r\n\r\n        function asignVal_svg(val) {\r\n            $('.btn-svg').removeClass('active');\r\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\r\n            if (val == '1/12') {\r\n                $('.svg-studyperiod').attr(\"opacity\", 0);\r\n                $('.svg-onemonth').attr(\"opacity\", 1);\r\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an active opioid prescription a month before they died')\r\n            } else {\r\n                $('.svg-studyperiod').attr(\"opacity\", 1);\r\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an opioid prescription at some point from 2011–2014')\r\n            }\r\n        }\r\n\r\n        $('.btn-svg').on('click', function() {\r\n            asignVal_svg($(this).val());\r\n        });\r\n\r\n        $('.controls-svg').on('click', function() {\r\n            asignVal_svg($(this).data('select'));\r\n        });\r\n    });\r\n});\r\n\r\n\r\n// Fix widows (no words on own line at the end of a <p>)\r\n$('p').each(function() {\r\n    var innerHTML = $(this).html();\r\n    var words = innerHTML.trim().split(' ');\r\n    if(words.length > 2) {\r\n        var potentialWidow = words[words.length-1];\r\n        var newWords = words.slice(0,-1).join(' ');\r\n        $(this).html(newWords+'&nbsp;'+potentialWidow);\r\n    }\r\n})\r\n","/* global d3*/\r\n(function() {\r\n    var rootNode = document.querySelector('#lines-bsas');\r\n    var town_names = {\r\n        //\"massachusetts\" : \"Massachusetts\",\r\n        \"abington\": \"Abington\",\r\n        \"acton\": \"Acton\",\r\n        \"acushnet\": \"Acushnet\",\r\n        \"adams\": \"Adams\",\r\n        \"agawam\": \"Agawam\",\r\n        \"alford\": \"Alford\",\r\n        \"amesbury\": \"Amesbury\",\r\n        \"amherst\": \"Amherst\",\r\n        \"andover\": \"Andover\",\r\n        \"aquinnah\": \"Aquinnah\",\r\n        \"arlington\": \"Arlington\",\r\n        \"ashburnham\": \"Ashburnham\",\r\n        \"ashby\": \"Ashby\",\r\n        \"ashfield\": \"Ashfield\",\r\n        \"ashland\": \"Ashland\",\r\n        \"athol\": \"Athol\",\r\n        \"attleboro\": \"Attleboro\",\r\n        \"auburn\": \"Auburn\",\r\n        \"avon\": \"Avon\",\r\n        \"ayer\": \"Ayer\",\r\n        \"barnstable\": \"Barnstable\",\r\n        \"barre\": \"Barre\",\r\n        \"becket\": \"Becket\",\r\n        \"bedford\": \"Bedford\",\r\n        \"belchertown\": \"Belchertown\",\r\n        \"bellingham\": \"Bellingham\",\r\n        \"belmont\": \"Belmont\",\r\n        \"berkley\": \"Berkley\",\r\n        \"berlin\": \"Berlin\",\r\n        \"bernardston\": \"Bernardston\",\r\n        \"beverly\": \"Beverly\",\r\n        \"billerica\": \"Billerica\",\r\n        \"blackstone\": \"Blackstone\",\r\n        \"blandford\": \"Blandford\",\r\n        \"bolton\": \"Bolton\",\r\n        \"boston\": \"Boston\",\r\n        \"bourne\": \"Bourne\",\r\n        \"boxborough\": \"Boxborough\",\r\n        \"boxford\": \"Boxford\",\r\n        \"boylston\": \"Boylston\",\r\n        \"braintree\": \"Braintree\",\r\n        \"brewster\": \"Brewster\",\r\n        \"bridgewater\": \"Bridgewater\",\r\n        \"brimfield\": \"Brimfield\",\r\n        \"brockton\": \"Brockton\",\r\n        \"brookfield\": \"Brookfield\",\r\n        \"brookline\": \"Brookline\",\r\n        \"buckland\": \"Buckland\",\r\n        \"burlington\": \"Burlington\",\r\n        \"cambridge\": \"Cambridge\",\r\n        \"canton\": \"Canton\",\r\n        \"carlisle\": \"Carlisle\",\r\n        \"carver\": \"Carver\",\r\n        \"charlemont\": \"Charlemont\",\r\n        \"charlton\": \"Charlton\",\r\n        \"chatham\": \"Chatham\",\r\n        \"chelmsford\": \"Chelmsford\",\r\n        \"chelsea\": \"Chelsea\",\r\n        \"cheshire\": \"Cheshire\",\r\n        \"chester\": \"Chester\",\r\n        \"chesterfield\": \"Chesterfield\",\r\n        \"chicopee\": \"Chicopee\",\r\n        \"chilmark\": \"Chilmark\",\r\n        \"clarksburg\": \"Clarksburg\",\r\n        \"clinton\": \"Clinton\",\r\n        \"cohasset\": \"Cohasset\",\r\n        \"colrain\": \"Colrain\",\r\n        \"concord\": \"Concord\",\r\n        \"conway\": \"Conway\",\r\n        \"cummington\": \"Cummington\",\r\n        \"dalton\": \"Dalton\",\r\n        \"danvers\": \"Danvers\",\r\n        \"dartmouth\": \"Dartmouth\",\r\n        \"dedham\": \"Dedham\",\r\n        \"deerfield\": \"Deerfield\",\r\n        \"dennis\": \"Dennis\",\r\n        \"dighton\": \"Dighton\",\r\n        \"douglas\": \"Douglas\",\r\n        \"dover\": \"Dover\",\r\n        \"dracut\": \"Dracut\",\r\n        \"dudley\": \"Dudley\",\r\n        \"dunstable\": \"Dunstable\",\r\n        \"duxbury\": \"Duxbury\",\r\n        \"eastbridgewater\": \"East Bridgewater\",\r\n        \"eastbrookfield\": \"East Brookfield\",\r\n        \"eastham\": \"Eastham\",\r\n        \"easthampton\": \"Easthampton\",\r\n        \"eastlongmeadow\": \"East Longmeadow\",\r\n        \"easton\": \"Easton\",\r\n        \"edgartown\": \"Edgartown\",\r\n        \"egremont\": \"Egremont\",\r\n        \"erving\": \"Erving\",\r\n        \"essex\": \"Essex\",\r\n        \"everett\": \"Everett\",\r\n        \"fairhaven\": \"Fairhaven\",\r\n        \"fallriver\": \"Fall River\",\r\n        \"falmouth\": \"Falmouth\",\r\n        \"fitchburg\": \"Fitchburg\",\r\n        \"florida\": \"Florida\",\r\n        \"foxborough\": \"Foxborough\",\r\n        \"framingham\": \"Framingham\",\r\n        \"franklin\": \"Franklin\",\r\n        \"freetown\": \"Freetown\",\r\n        \"gardner\": \"Gardner\",\r\n        \"georgetown\": \"Georgetown\",\r\n        \"gill\": \"Gill\",\r\n        \"gloucester\": \"Gloucester\",\r\n        \"goshen\": \"Goshen\",\r\n        \"gosnold\": \"Gosnold\",\r\n        \"grafton\": \"Grafton\",\r\n        \"granby\": \"Granby\",\r\n        \"granville\": \"Granville\",\r\n        \"greatbarrington\": \"Great Barrington\",\r\n        \"greenfield\": \"Greenfield\",\r\n        \"groton\": \"Groton\",\r\n        \"groveland\": \"Groveland\",\r\n        \"hadley\": \"Hadley\",\r\n        \"halifax\": \"Halifax\",\r\n        \"hamilton\": \"Hamilton\",\r\n        \"hampden\": \"Hampden\",\r\n        \"hancock\": \"Hancock\",\r\n        \"hanover\": \"Hanover\",\r\n        \"hanson\": \"Hanson\",\r\n        \"hardwick\": \"Hardwick\",\r\n        \"harvard\": \"Harvard\",\r\n        \"harwich\": \"Harwich\",\r\n        \"hatfield\": \"Hatfield\",\r\n        \"haverhill\": \"Haverhill\",\r\n        \"hawley\": \"Hawley\",\r\n        \"heath\": \"Heath\",\r\n        \"hingham\": \"Hingham\",\r\n        \"hinsdale\": \"Hinsdale\",\r\n        \"holbrook\": \"Holbrook\",\r\n        \"holden\": \"Holden\",\r\n        \"holland\": \"Holland\",\r\n        \"holliston\": \"Holliston\",\r\n        \"holyoke\": \"Holyoke\",\r\n        \"hopedale\": \"Hopedale\",\r\n        \"hopkinton\": \"Hopkinton\",\r\n        \"hubbardston\": \"Hubbardston\",\r\n        \"hudson\": \"Hudson\",\r\n        \"hull\": \"Hull\",\r\n        \"huntington\": \"Huntington\",\r\n        \"ipswich\": \"Ipswich\",\r\n        \"kingston\": \"Kingston\",\r\n        \"lakeville\": \"Lakeville\",\r\n        \"lancaster\": \"Lancaster\",\r\n        \"lanesborough\": \"Lanesborough\",\r\n        \"lawrence\": \"Lawrence\",\r\n        \"lee\": \"Lee\",\r\n        \"leicester\": \"Leicester\",\r\n        \"lenox\": \"Lenox\",\r\n        \"leominster\": \"Leominster\",\r\n        \"leverett\": \"Leverett\",\r\n        \"lexington\": \"Lexington\",\r\n        \"leyden\": \"Leyden\",\r\n        \"lincoln\": \"Lincoln\",\r\n        \"littleton\": \"Littleton\",\r\n        \"longmeadow\": \"Longmeadow\",\r\n        \"lowell\": \"Lowell\",\r\n        \"ludlow\": \"Ludlow\",\r\n        \"lunenburg\": \"Lunenburg\",\r\n        \"lynn\": \"Lynn\",\r\n        \"lynnfield\": \"Lynnfield\",\r\n        \"malden\": \"Malden\",\r\n        \"manchester\": \"Manchester\",\r\n        \"mansfield\": \"Mansfield\",\r\n        \"marblehead\": \"Marblehead\",\r\n        \"marion\": \"Marion\",\r\n        \"marlborough\": \"Marlborough\",\r\n        \"marshfield\": \"Marshfield\",\r\n        \"mashpee\": \"Mashpee\",\r\n        \"mattapoisett\": \"Mattapoisett\",\r\n        \"maynard\": \"Maynard\",\r\n        \"medfield\": \"Medfield\",\r\n        \"medford\": \"Medford\",\r\n        \"medway\": \"Medway\",\r\n        \"melrose\": \"Melrose\",\r\n        \"mendon\": \"Mendon\",\r\n        \"merrimac\": \"Merrimac\",\r\n        \"methuen\": \"Methuen\",\r\n        \"middleborough\": \"Middleborough\",\r\n        \"middlefield\": \"Middlefield\",\r\n        \"middleton\": \"Middleton\",\r\n        \"milford\": \"Milford\",\r\n        \"millbury\": \"Millbury\",\r\n        \"millis\": \"Millis\",\r\n        \"millville\": \"Millville\",\r\n        \"milton\": \"Milton\",\r\n        \"monroe\": \"Monroe\",\r\n        \"monson\": \"Monson\",\r\n        \"montague\": \"Montague\",\r\n        \"monterey\": \"Monterey\",\r\n        \"montgomery\": \"Montgomery\",\r\n        \"mountwashington\": \"Mount Washington\",\r\n        \"nahant\": \"Nahant\",\r\n        \"nantucket\": \"Nantucket\",\r\n        \"natick\": \"Natick\",\r\n        \"needham\": \"Needham\",\r\n        \"newashford\": \"New Ashford\",\r\n        \"newbedford\": \"New Bedford\",\r\n        \"newbraintree\": \"New Braintree\",\r\n        \"newbury\": \"Newbury\",\r\n        \"newburyport\": \"Newburyport\",\r\n        \"newmarlborough\": \"New Marlborough\",\r\n        \"newsalem\": \"New Salem\",\r\n        \"newton\": \"Newton\",\r\n        \"norfolk\": \"Norfolk\",\r\n        \"northadams\": \"North Adams\",\r\n        \"northampton\": \"Northampton\",\r\n        \"northandover\": \"North Andover\",\r\n        \"northattleborough\": \"North Attleborough\",\r\n        \"northborough\": \"Northborough\",\r\n        \"northbridge\": \"Northbridge\",\r\n        \"northbrookfield\": \"North Brookfield\",\r\n        \"northfield\": \"Northfield\",\r\n        \"northreading\": \"North Reading\",\r\n        \"norton\": \"Norton\",\r\n        \"norwell\": \"Norwell\",\r\n        \"norwood\": \"Norwood\",\r\n        \"oakbluffs\": \"Oak Bluffs\",\r\n        \"oakham\": \"Oakham\",\r\n        \"orange\": \"Orange\",\r\n        \"orleans\": \"Orleans\",\r\n        \"otis\": \"Otis\",\r\n        \"oxford\": \"Oxford\",\r\n        \"palmer\": \"Palmer\",\r\n        \"paxton\": \"Paxton\",\r\n        \"peabody\": \"Peabody\",\r\n        \"pelham\": \"Pelham\",\r\n        \"pembroke\": \"Pembroke\",\r\n        \"pepperell\": \"Pepperell\",\r\n        \"peru\": \"Peru\",\r\n        \"petersham\": \"Petersham\",\r\n        \"phillipston\": \"Phillipston\",\r\n        \"pittsfield\": \"Pittsfield\",\r\n        \"plainfield\": \"Plainfield\",\r\n        \"plainville\": \"Plainville\",\r\n        \"plymouth\": \"Plymouth\",\r\n        \"plympton\": \"Plympton\",\r\n        \"princeton\": \"Princeton\",\r\n        \"provincetown\": \"Provincetown\",\r\n        \"quincy\": \"Quincy\",\r\n        \"randolph\": \"Randolph\",\r\n        \"raynham\": \"Raynham\",\r\n        \"reading\": \"Reading\",\r\n        \"rehoboth\": \"Rehoboth\",\r\n        \"revere\": \"Revere\",\r\n        \"richmond\": \"Richmond\",\r\n        \"rochester\": \"Rochester\",\r\n        \"rockland\": \"Rockland\",\r\n        \"rockport\": \"Rockport\",\r\n        \"rowe\": \"Rowe\",\r\n        \"rowley\": \"Rowley\",\r\n        \"royalston\": \"Royalston\",\r\n        \"russell\": \"Russell\",\r\n        \"rutland\": \"Rutland\",\r\n        \"salem\": \"Salem\",\r\n        \"salisbury\": \"Salisbury\",\r\n        \"sandisfield\": \"Sandisfield\",\r\n        \"sandwich\": \"Sandwich\",\r\n        \"saugus\": \"Saugus\",\r\n        \"savoy\": \"Savoy\",\r\n        \"scituate\": \"Scituate\",\r\n        \"seekonk\": \"Seekonk\",\r\n        \"sharon\": \"Sharon\",\r\n        \"sheffield\": \"Sheffield\",\r\n        \"shelburne\": \"Shelburne\",\r\n        \"sherborn\": \"Sherborn\",\r\n        \"shirley\": \"Shirley\",\r\n        \"shrewsbury\": \"Shrewsbury\",\r\n        \"shutesbury\": \"Shutesbury\",\r\n        \"somerset\": \"Somerset\",\r\n        \"somerville\": \"Somerville\",\r\n        \"southampton\": \"Southampton\",\r\n        \"southborough\": \"Southborough\",\r\n        \"southbridge\": \"Southbridge\",\r\n        \"southhadley\": \"South Hadley\",\r\n        \"southwick\": \"Southwick\",\r\n        \"spencer\": \"Spencer\",\r\n        \"springfield\": \"Springfield\",\r\n        \"sterling\": \"Sterling\",\r\n        \"stockbridge\": \"Stockbridge\",\r\n        \"stoneham\": \"Stoneham\",\r\n        \"stoughton\": \"Stoughton\",\r\n        \"stow\": \"Stow\",\r\n        \"sturbridge\": \"Sturbridge\",\r\n        \"sudbury\": \"Sudbury\",\r\n        \"sunderland\": \"Sunderland\",\r\n        \"sutton\": \"Sutton\",\r\n        \"swampscott\": \"Swampscott\",\r\n        \"swansea\": \"Swansea\",\r\n        \"taunton\": \"Taunton\",\r\n        \"templeton\": \"Templeton\",\r\n        \"tewksbury\": \"Tewksbury\",\r\n        \"tisbury\": \"Tisbury\",\r\n        \"tolland\": \"Tolland\",\r\n        \"topsfield\": \"Topsfield\",\r\n        \"townsend\": \"Townsend\",\r\n        \"truro\": \"Truro\",\r\n        \"tyngsborough\": \"Tyngsborough\",\r\n        \"tyringham\": \"Tyringham\",\r\n        \"upton\": \"Upton\",\r\n        \"uxbridge\": \"Uxbridge\",\r\n        \"wakefield\": \"Wakefield\",\r\n        \"wales\": \"Wales\",\r\n        \"walpole\": \"Walpole\",\r\n        \"waltham\": \"Waltham\",\r\n        \"ware\": \"Ware\",\r\n        \"wareham\": \"Wareham\",\r\n        \"warren\": \"Warren\",\r\n        \"warwick\": \"Warwick\",\r\n        \"washington\": \"Washington\",\r\n        \"watertown\": \"Watertown\",\r\n        \"wayland\": \"Wayland\",\r\n        \"webster\": \"Webster\",\r\n        \"wellesley\": \"Wellesley\",\r\n        \"wellfleet\": \"Wellfleet\",\r\n        \"wendell\": \"Wendell\",\r\n        \"wenham\": \"Wenham\",\r\n        \"westborough\": \"Westborough\",\r\n        \"westboylston\": \"West Boylston\",\r\n        \"westbridgewater\": \"West Bridgewater\",\r\n        \"westbrookfield\": \"West Brookfield\",\r\n        \"westfield\": \"Westfield\",\r\n        \"westford\": \"Westford\",\r\n        \"westhampton\": \"Westhampton\",\r\n        \"westminster\": \"Westminster\",\r\n        \"westnewbury\": \"West Newbury\",\r\n        \"weston\": \"Weston\",\r\n        \"westport\": \"Westport\",\r\n        \"westspringfield\": \"West Springfield\",\r\n        \"weststockbridge\": \"West Stockbridge\",\r\n        \"westtisbury\": \"West Tisbury\",\r\n        \"westwood\": \"Westwood\",\r\n        \"weymouth\": \"Weymouth\",\r\n        \"whately\": \"Whately\",\r\n        \"whitman\": \"Whitman\",\r\n        \"wilbraham\": \"Wilbraham\",\r\n        \"williamsburg\": \"Williamsburg\",\r\n        \"williamstown\": \"Williamstown\",\r\n        \"wilmington\": \"Wilmington\",\r\n        \"winchendon\": \"Winchendon\",\r\n        \"winchester\": \"Winchester\",\r\n        \"windsor\": \"Windsor\",\r\n        \"winthrop\": \"Winthrop\",\r\n        \"woburn\": \"Woburn\",\r\n        \"worcester\": \"Worcester\",\r\n        \"worthington\": \"Worthington\",\r\n        \"wrentham\": \"Wrentham\",\r\n        \"yarmouth\": \"Yarmouth\"\r\n    };\r\n    var current_town = \"massachusetts\";\r\n\r\n    var margin = {\r\n            top: 0,\r\n            right: 25,\r\n            bottom: 35,\r\n            left: 45\r\n        },\r\n        wrapper_width = rootNode.clientWidth,\r\n        wrapper_height = 400,\r\n        width = wrapper_width - margin.left - margin.right,\r\n        height = wrapper_height - margin.top - margin.bottom;\r\n\r\n    var bisectAge = d3.bisector(function(d) {\r\n        return d.age;\r\n    }).left;\r\n    var percent = d3.format(',.0%');\r\n    var yearformat = d3.format(\"d\");\r\n    // var min_age = 2005;\r\n    // var fields = ['emp', 'edu', 'race', 'orig'];\r\n    var groups = {};\r\n\r\n    var x = d3.scale.linear();\r\n\r\n    var y = d3.scale.linear();\r\n\r\n    var color = d3.scale.category10();\r\n\r\n    var xAxis_bsas = d3.svg.axis();\r\n\r\n    var yAxis_bsas = d3.svg.axis();\r\n\r\n    var line = d3.svg.line();\r\n\r\n\r\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\r\n\r\n    var $lines_bsas = $svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\r\n    $x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", 635)\r\n        .attr(\"y\", 15)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(\"Year\");\r\n\r\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\r\n    $y_axis.append(\"text\");\r\n\r\n    var $lines_bsas_x_axis_label = $x_axis.append(\"text\");\r\n    var $lines_bsas_y_axis_label = $y_axis.append(\"text\");\r\n\r\n    var legend_pos_text = -60,\r\n        legend_pos_dot = -70;\r\n    var $legend = {\r\n        opioids: {},\r\n        alcohol: {},\r\n        marijuana: {},\r\n        other: {},\r\n        none: {}\r\n    };\r\n\r\n    setupLegend();\r\n\r\n    var $lines = {};\r\n\r\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateWidth(rootNode.clientWidth);\r\n\r\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\r\n        x.range([0, width]);\r\n        y.range([height, 0]);\r\n\r\n        xAxis_bsas\r\n            .scale(x)\r\n            .tickFormat(yearformat)\r\n            .ticks((width < 500 ? 4 : 10))\r\n            .orient(\"bottom\")\r\n            .outerTickSize(0);\r\n\r\n        yAxis_bsas\r\n            .scale(y)\r\n            .tickSize(width)\r\n            .orient(\"right\")\r\n            .tickFormat(percent);\r\n\r\n\r\n\r\n        line.x(function(d) {\r\n                return x(d.age);\r\n            })\r\n            .y(function(d) {\r\n                return y(d.value);\r\n            })\r\n            .defined(function(d) {\r\n                return y(d.value);\r\n            }); // Omit empty values.\r\n\r\n        $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\r\n        $y_axis.call(yAxis_bsas);\r\n        $lines_bsas.selectAll(\".vis-y-axis .tick text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\r\n        $eventOverlay.attr(\"width\", width).attr(\"height\", height);\r\n\r\n\r\n        $lines_bsas_x_axis_label\r\n            .attr(\"x\", (width - margin.left)/2)\r\n            .attr(\"y\", (margin.bottom) / 2)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"class\", \"vis-x-axis-label\")\r\n            .text(\"Fiscal Year\");\r\n\r\n\r\n        $lines_bsas_y_axis_label\r\n            .attr(\"x\", -(height - margin.top)/2)\r\n            .attr(\"y\", -margin.left)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"class\", \"vis-y-axis-label\")\r\n            .text(\"Percent Primary Substance of Use\");\r\n\r\n\r\n\r\n        renderLegend();\r\n        renderLines();\r\n        updateDots();\r\n    }\r\n\r\n\r\n    function updateWidth(w) {\r\n        wrapper_width = w;\r\n        width = wrapper_width - margin.left - margin.right;\r\n    }\r\n\r\n    function setupLegend() {\r\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\r\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\r\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\r\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\r\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\r\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\r\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\r\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\r\n        //$legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\r\n        //$legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\r\n    }\r\n\r\n    function renderLegend() {\r\n        var top_offset = 0;\r\n        var line_height = 15;\r\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (1 * line_height));\r\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (1 * line_height) + 3);\r\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (2 * line_height));\r\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (2 * line_height) + 3);\r\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (3 * line_height));\r\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (3 * line_height) + 3);\r\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (4 * line_height));\r\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (4 * line_height) + 3);\r\n        //$legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (5 * line_height));\r\n        //$legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (5 * line_height) + 3);\r\n    }\r\n\r\n    function setupLines() {\r\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        // $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\r\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n        //     var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\r\n        //     var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\r\n\r\n        //     if (y_circle_alcohol >= 0) {\r\n\r\n        //         //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n        //         //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\r\n\r\n        //         $lines_bsas.append(\"circle\")\r\n        //             .attr(\"class\", function(d) {\r\n        //                 return \"circle none y\" + groups[current_town + \"none\"].values[i].age\r\n        //             })\r\n        //             .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\r\n        //             .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\r\n        //             .attr(\"r\", 3)\r\n        //             .attr(\"pointer-events\", \"none\");\r\n        //     }\r\n        // }\r\n\r\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle other y\" + groups[current_town + \"other\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function renderLines() {\r\n        $lines.alcohol.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"alcohol\"].values);\r\n        });\r\n        $lines.opioids.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"opioids\"].values);\r\n        });\r\n        $lines.marijuana.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"marijuana\"].values);\r\n        });\r\n        $lines.other.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"other\"].values);\r\n        });\r\n        // $lines.none.attr(\"d\", function(d) {\r\n        //     return line(groups[current_town + \"none\"].values);\r\n        // });\r\n    }\r\n\r\n\r\n\r\n    function updateDots() {\r\n\r\n        // marriages = groups[current_town];\r\n        //update alcohol line\r\n        $lines_bsas.select(\".line.alcohol\")\r\n            .transition()\r\n            .duration(1000)\r\n            .delay(180)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"alcohol\"].values);\r\n            });\r\n\r\n        //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\r\n\r\n        //update alcohol circles\r\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n            var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                // console.log(string_select);\r\n\r\n            if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"alcohol\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"alcohol\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3)\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"r\", 0)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        //marijuana\r\n        $lines_bsas.select(\".line.marijuana\")\r\n            .transition()\r\n            .duration(1000)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"marijuana\"].values);\r\n            });\r\n        //update marijuana circles\r\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n            var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                //console.log(string_select);\r\n\r\n            if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"marijuana\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"marijuana\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3)\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"r\", 0)\r\n            }\r\n\r\n        }\r\n\r\n        //none\r\n        // $lines_bsas.select(\".line.none\")\r\n        //     .transition()\r\n        //     .duration(1000)\r\n        //     .attr(\"d\", function(d) {\r\n        //         return line(groups[current_town + \"none\"].values);\r\n        //     });\r\n        // //update none circles\r\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n\r\n        //     var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\r\n        //     var value_select = groups[current_town + \"none\"].values[i].value\r\n        //         // console.log(string_select);\r\n        //         // console.log(value_select);\r\n        //         // console.log(value_select >= 0);\r\n\r\n        //     if (groups[current_town + \"none\"].values[i].value >= 0) {\r\n        //         $lines_bsas.selectAll(string_select)\r\n        //             .transition()\r\n        //             .duration(1000)\r\n        //             .attr(\"cx\", function(d) {\r\n        //                 return x(groups[current_town + \"none\"].values[i].age)\r\n        //             })\r\n        //             .attr(\"cy\", function(d) {\r\n        //                 return y(groups[current_town + \"none\"].values[i].value)\r\n        //             })\r\n        //             .attr(\"r\", 3);\r\n        //     } else {\r\n        //         $lines_bsas.selectAll(string_select)\r\n        //             .transition()\r\n        //             .duration(1000)\r\n        //             .attr(\"r\", 0);\r\n        //     }\r\n\r\n        // }\r\n\r\n        //opioids\r\n        $lines_bsas.select(\".line.opioids\")\r\n            .transition()\r\n            .duration(1000)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"opioids\"].values);\r\n            });\r\n        //update opioids circles\r\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n\r\n            var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\r\n            var value_select = groups[current_town + \"opioids\"].values[i].value\r\n                //console.log(string_select);\r\n                //console.log(value_select);\r\n                //console.log(value_select >= 0);\r\n\r\n            if (value_select >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"opioids\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"opioids\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3);\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"r\", 0);\r\n            }\r\n\r\n        }\r\n\r\n        //other\r\n        $lines_bsas.select(\".line.other\")\r\n            .transition()\r\n            .duration(1000)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"other\"].values);\r\n            });\r\n        //update other circles\r\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n            var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\r\n            var value_select = groups[current_town + \"other\"].values[i].value\r\n                // console.log(string_select);\r\n                // console.log(value_select);\r\n                // console.log(value_select >= 0);\r\n\r\n            if (value_select >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"other\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"other\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3);\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"r\", 0);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    d3.csv(\"js/data/bsas-data-2000to2015.csv\", type, function(error, data) {\r\n        if (error) throw error;\r\n        //console.log(groups);\r\n        // var marriages = groups[current_town];\r\n\r\n        x.domain([2000, d3.max(data, function(d) {\r\n            return d.age;\r\n        })]);\r\n        y.domain([0, 1.00]);\r\n\r\n        setupLines();\r\n        render();\r\n        window.addEventListener('resize', render);\r\n\r\n\r\n\r\n        // Autocomplete\r\n\r\n        $(\".btn-bsas\").addClass('active');\r\n        d3.selectAll(\".btn-bsas\").on(\"click\", function() {\r\n            current_town = d3.select(this).attr(\"data-val\");\r\n            updateDots();\r\n            d3.select(this).classed('active', true);\r\n            $(\"#tags\").val('');\r\n        });\r\n\r\n\r\n\r\n        $(\"#tags\").autocomplete({\r\n            source: function(request, response) {\r\n                //console.log(town_names);\r\n                var matches = $.map(town_names, function(acItem) {\r\n                    if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\r\n                        return acItem;\r\n                    }\r\n                });\r\n                response(matches);\r\n                //$(\"#tags\").focus(function() {\r\n                // if (matches.length == 1) {\r\n                //     current_town = matches[0];\r\n                //     $(\".btn-bsas\").removeClass('active');\r\n                //     updateDots();\r\n                // }\r\n                //});\r\n                //console.log(matches);\r\n            },\r\n            select: function(event, ui) {\r\n                $.each(town_names, function(key, value) {\r\n                    if (value === ui.item.value) {\r\n                        current_town = key;\r\n                        console.log(value)\r\n                    }\r\n                });\r\n\r\n\r\n                $(\".btn-bsas\").removeClass('active');\r\n                updateDots();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // alcohol\r\n        var focusalcohol = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus alcohol\")\r\n            .style(\"display\", \"none\");\r\n        focusalcohol.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusalcohol.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // marijuana\r\n        var focusmarijuana = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus marijuana\")\r\n            .style(\"display\", \"none\");\r\n        focusmarijuana.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusmarijuana.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // none\r\n        // var focusnone = $lines_bsas.append(\"g\")\r\n        //     .attr(\"class\", \"focus none\")\r\n        //     .style(\"display\", \"none\");\r\n        // focusnone.append(\"circle\")\r\n        //     .attr(\"pointer-events\", \"none\")\r\n        //     .attr(\"r\", 3);\r\n        // focusnone.append(\"text\")\r\n        //     .attr(\"pointer-events\", \"none\")\r\n        //     .attr(\"x\", 9)\r\n        //     .attr(\"dy\", \".35em\");\r\n\r\n        // opioids\r\n        var focusopioids = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus opioids\")\r\n            .style(\"display\", \"none\");\r\n        focusopioids.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusopioids.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // none\r\n        var focusother = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus other\")\r\n            .style(\"display\", \"none\");\r\n        focusother.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusother.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // Events\r\n        $eventOverlay\r\n            .on(\"mouseover\", function() {\r\n                focusmarijuana.style(\"display\", null);\r\n                focusalcohol.style(\"display\", null);\r\n                //focusnone.style(\"display\", null);\r\n                focusopioids.style(\"display\", null);\r\n                focusother.style(\"display\", null);\r\n                //focusage.style(\"display\", null);\r\n            })\r\n            .on(\"mouseout\", function() {\r\n                focusmarijuana.style(\"display\", \"none\");\r\n                focusalcohol.style(\"display\", \"none\");\r\n                //focusnone.style(\"display\", \"none\");\r\n                focusopioids.style(\"display\", \"none\");\r\n                focusother.style(\"display\", \"none\");\r\n                //focusage.style(\"display\", \"none\");\r\n            })\r\n            .on(\"mousemove\", mousemove);\r\n\r\n        function mousemove() {\r\n\r\n\r\n\r\n            var x0 = x.invert(d3.mouse(this)[0])\r\n\r\n            // Alcohol\r\n            var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\r\n                d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\r\n                d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\r\n                d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\r\n\r\n            if (d_alcohol.value >= 0) {\r\n                focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\r\n                focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform', \"translate(-28,0)\");\r\n                focusalcohol.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusalcohol.select(\"circle\").attr(\"r\", 0);\r\n                focusalcohol.select(\"text\").text(\"\");\r\n            }\r\n\r\n            // Marijuana\r\n\r\n            var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\r\n                d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\r\n                d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\r\n                d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\r\n\r\n\r\n            // console.log(d_marijuana.value + \" \" + d_marijuana.age);\r\n            // console.log(d_marijuana.value >= 0);\r\n\r\n            if (d_marijuana.value >= 0) {\r\n                focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\r\n                focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform', \"translate(-28,0)\");\r\n                focusmarijuana.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusmarijuana.select(\"circle\").attr(\"r\", 0);\r\n                focusmarijuana.select(\"text\").text(\"\");\r\n            }\r\n\r\n            // None\r\n\r\n            // var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\r\n            //     d0_none = groups[current_town + \"none\"].values[i_none - 1],\r\n            //     d1_none = groups[current_town + \"none\"].values[i_none],\r\n            //     d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\r\n\r\n            // if (d_none.value >= 0) {\r\n            //     focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\r\n            //     focusnone.select(\"text\").text(percent(d_none.value));\r\n            //     focusnone.select(\"circle\").attr(\"r\", 4);\r\n            // } else {\r\n            //     focusnone.select(\"circle\").attr(\"r\", 0);\r\n            //     focusnone.select(\"text\").text(\"\");\r\n            // }\r\n\r\n\r\n            // Opioids\r\n            var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\r\n                d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\r\n                d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\r\n                d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\r\n\r\n            if (d_opioids.value >= 0) {\r\n                focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\r\n                focusopioids.select(\"text\").text(percent(d_opioids.value));\r\n                focusopioids.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusopioids.select(\"circle\").attr(\"r\", 0);\r\n                focusopioids.select(\"text\").text(\"\");\r\n            }\r\n\r\n\r\n            // other\r\n            var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\r\n                d0_other = groups[current_town + \"other\"].values[i_other - 1],\r\n                d1_other = groups[current_town + \"other\"].values[i_other],\r\n                d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\r\n\r\n            //console.log(d_other.value);\r\n\r\n            if (d_other.value >= 0) {\r\n                focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\r\n                focusother.select(\"text\").text(percent(d_other.value));\r\n                focusother.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusother.select(\"circle\").attr(\"r\", 0);\r\n                focusother.select(\"text\").text(\"\");\r\n            }\r\n\r\n\r\n            // Adjust label horizontal positions.\r\n            if (x0 > 80) {\r\n                focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                //focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n            } else {\r\n                focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                //focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    }); // @end d3.tsv()\r\n\r\n\r\n    function type(d, i) {\r\n\r\n        d3.keys(d).forEach(function(key) {\r\n            d[key] = +d[key];\r\n            if (key != 'age') {\r\n                if (!(key in groups)) {\r\n                    groups[key] = {\r\n                        'values': [{\r\n                            age: d.age,\r\n                            value: d[key]\r\n                        }]\r\n                    };\r\n                } else {\r\n                    groups[key]['values'].push({\r\n                        age: d.age,\r\n                        value: d[key]\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        return d;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n})();\r\n\r\nfunction opioidsY2000(d, i) {\r\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\r\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\r\n            d3.select(\".btn-bsas\").classed('active', true);\r\n        };\r\n\r\n        function opioidsY2015(d, i) {\r\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\r\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\r\n            d3.select(\".btn-bsas\").classed('active', true);\r\n        };\r\n","(function() {\r\n  var slice = [].slice;\r\n\r\n  function queue(parallelism) {\r\n    var q,\r\n        tasks = [],\r\n        started = 0, // number of tasks that have been started (and perhaps finished)\r\n        active = 0, // number of tasks currently being executed (started but not finished)\r\n        remaining = 0, // number of tasks not yet finished\r\n        popping, // inside a synchronous task callback?\r\n        error = null,\r\n        await = noop,\r\n        all;\r\n\r\n    if (!parallelism) parallelism = Infinity;\r\n\r\n    function pop() {\r\n      while (popping = started < tasks.length && active < parallelism) {\r\n        var i = started++,\r\n            t = tasks[i],\r\n            a = slice.call(t, 1);\r\n        a.push(callback(i));\r\n        ++active;\r\n        t[0].apply(null, a);\r\n      }\r\n    }\r\n\r\n    function callback(i) {\r\n      return function(e, r) {\r\n        --active;\r\n        if (error != null) return;\r\n        if (e != null) {\r\n          error = e; // ignore new tasks and squelch active callbacks\r\n          started = remaining = NaN; // stop queued tasks from starting\r\n          notify();\r\n        } else {\r\n          tasks[i] = r;\r\n          if (--remaining) popping || pop();\r\n          else notify();\r\n        }\r\n      };\r\n    }\r\n\r\n    function notify() {\r\n      if (error != null) await(error);\r\n      else if (all) await(error, tasks);\r\n      else await.apply(null, [error].concat(tasks));\r\n    }\r\n\r\n    return q = {\r\n      defer: function() {\r\n        if (!error) {\r\n          tasks.push(arguments);\r\n          ++remaining;\r\n          pop();\r\n        }\r\n        return q;\r\n      },\r\n      await: function(f) {\r\n        await = f;\r\n        all = false;\r\n        if (!remaining) notify();\r\n        return q;\r\n      },\r\n      awaitAll: function(f) {\r\n        await = f;\r\n        all = true;\r\n        if (!remaining) notify();\r\n        return q;\r\n      }\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  queue.version = \"1.0.7\";\r\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\r\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\r\n  else this.queue = queue;\r\n})();\r\n","var Vis = (function(d3) {\r\n    \"use strict\";\r\n\r\n    var visualizationWrapper = d3.select('#binaryMaps_maps');\r\n\r\n    var geojson;\r\n    queue()\r\n        .defer(d3.json, 'js/data/TOWN.geo.json')\r\n        .defer(d3.json, 'js/data/rate_5yr_odc.json')\r\n        .await(visualize);\r\n\r\n    var width = 525,\r\n        height = 325;\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([8600])\r\n        .translate([280, 360]);\r\n\r\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n    var colors_5yr = [\"#d3d3d3\", \"#9ecae1\", \"#6baed6\", \"#2171b5\", \"#084594\"];\r\n    \r\n    var path = d3.geo.path().projection(projection),\r\n        palette = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\r\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313']);\r\n        .range(colors_5yr);\r\n\r\n\r\n\r\n    function visualize(error, states, data) {\r\n\r\n\r\n\r\n        data.data.forEach(function(data, i) {\r\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\r\n\r\n            createMap(wrapper, states, data);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function createMap(wrapper, geo, data) {\r\n\r\n        wrapper.append('span')\r\n            .text(function(d) {\r\n                if (data.key == 2005) {\r\n                    return '2001 to 2005';\r\n                } else if (data.key == 2010) {\r\n                    return '2006 to 2010';\r\n                } else if (data.key == 2015) {\r\n                    return '2011 to 2015';\r\n                }\r\n            })\r\n            .attr('class', 'vis-title')\r\n            .style('padding-bottom', \"3%\");\r\n\r\n\r\n\r\n\r\n        wrapper.append('span')\r\n            .text(\"\")\r\n            .attr('class', 'selection-label');\r\n\r\n        var $maps_sub = wrapper\r\n            .classed(\"svg-container\", true) //container class to make it responsive\r\n            .append(\"svg\")\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n            //class to make it responsive\r\n            .classed(\"svg-content-responsive\", true);\r\n\r\n        $maps_sub.selectAll('path')\r\n            .data(geo.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', path)\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"0.0px\")\r\n            .style('fill', function(d, i) {\r\n                var value = data.values[d.properties.TOWN_1];\r\n                return palette(value);\r\n            })\r\n            .on('mouseover', function(d, i) {\r\n\r\n            })\r\n            .on('mouseout', function(d, i) {\r\n\r\n            })\r\n            .attr('class', function(d) {\r\n                return d.properties.TOWN_1.toLowerCase()\r\n            })\r\n            .attr('id', 'bsasmap')\r\n            .on('mouseenter', function(d, i) {\r\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'select');\r\n                // var currentState = this;\r\n                // console.log(this);\r\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('mouseleave', function(d) {\r\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'unselect');\r\n\r\n            })\r\n            .on('select', function(self) {\r\n                var geoData = self.data();\r\n                var town_value\r\n\r\n                if (data.values[geoData[0].properties.TOWN_1] > 0) {\r\n                    town_value = d3.format(\".2f\")(data.values[geoData[0].properties.TOWN]);\r\n                } else { town_value = \"0\"; }\r\n\r\n                //console.log(town_value);\r\n\r\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \"<br>\" + town_value) + \" per 100,000\";\r\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('unselect', function(self) {\r\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\r\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\r\n                d3.selectAll('path#bsasmap').style({\r\n                    'fill-opacity': 1\r\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n            })\r\n\r\n        function notify(selector, eventName) {\r\n            d3.selectAll(selector)[0].forEach(function(el, i) {\r\n                var shape = d3.select(el);\r\n                shape.on(eventName)(shape);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    var opChgScale = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\r\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313'])\r\n        .range(colors_5yr);\r\n    opChgScale.domainStrings = function() {\r\n        return (['0', '>0-2.1', '>2.1-6.1', '>6.1-17.1', '>17.1']);\r\n    };\r\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\r\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\r\n    generateLegend_map_sub(opChgScale, 'binaryMaps_legend', 'Average 5 year Opioid-Related Death Rate per 100,000 people');\r\n\r\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\r\n\r\n        var legendHeight = 60,\r\n            legendWidth = '90%';\r\n\r\n\r\n\r\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", legendWidth)\r\n            .attr(\"height\", legendHeight);\r\n\r\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        // legendData.push({\r\n        //     d: -9999,\r\n        //     r: '#f1f1f1',\r\n        //     s: 'N/A*'\r\n        // });\r\n        for (var i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n        var unitWidth = 100 / legendData.length;\r\n\r\n        $maps_sub_legends.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", legendHeight / 3)\r\n            .attr(\"width\", function(d, i) {\r\n                return unitWidth + '%';\r\n            })\r\n            .attr(\"x\", function(d, i) {\r\n                return (i * unitWidth) + '%';\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        $maps_sub_legends.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr('text-anchor', 'middle')\r\n            .attr(\"x\", function(d, i) {\r\n                return (i * unitWidth) + (unitWidth / 2) + '%';\r\n            })\r\n            .attr(\"y\", 55)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            });\r\n\r\n        $maps_sub_legends.append(\"text\")\r\n            .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    }\r\n\r\n\r\n\r\n    $('.js-toggle-binary-map').click(function() {\r\n        var date = $(this).data('date');\r\n        $('#binaryMaps').attr('data-active-date', date);\r\n        $('.js-toggle-binary-map').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n})(d3);\r\nconsole.log(\"file loaded - binary\")\r\n","var Vis = (function(d3) {\r\n    \"use strict\";\r\n\r\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\r\n\r\n    var geojson;\r\n    queue()\r\n        .defer(d3.json, 'js/data/TOWN.geo.json')\r\n        .defer(d3.json, 'js/data/maps_susbtance_data.json')\r\n        .await(visualize);\r\n\r\n    var width = 525,\r\n        height = 325;\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([7500])\r\n        .translate([280, 330]);\r\n\r\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n    var path = d3.geo.path().projection(projection),\r\n        palette = d3.scale.threshold().domain([-0.1, 0.01, 0.14, 0.24, 0.33, 0.46, 1.1])\r\n        .range(['#d1d1d1','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450']);\r\n        \r\n\r\n\r\n    function visualize(error, states, data) {\r\n\r\n\r\n\r\n        data.data.forEach(function(data, i) {\r\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\r\n\r\n            createMap(wrapper, states, data);\r\n        });\r\n    }\r\n\r\n    //console.log(geo.features)\r\n\r\n\r\n    function createMap(wrapper, geo, data) {\r\n\r\n        wrapper.append('span')\r\n            .text(data.key)\r\n            .attr('class', 'vis-title');\r\n        wrapper.append('span')\r\n            .text(\"\")\r\n            .attr('class', 'selection-label');\r\n\r\n        var $maps_sub = wrapper\r\n            .classed(\"svg-container\", true) //container class to make it responsive\r\n            .append(\"svg\")\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n            //class to make it responsive\r\n            .classed(\"svg-content-responsive\", true);\r\n\r\n        $maps_sub.selectAll('path')\r\n            .data(geo.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', path)\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"0.0px\")\r\n            .style('fill', function(d, i) {\r\n                var value = data.values[d.properties.TOWN];\r\n                return palette(value);\r\n            })\r\n            .on('mouseover', function(d, i) {\r\n\r\n            })\r\n            .on('mouseout', function(d, i) {\r\n\r\n            })\r\n            .attr('class', function(d) {\r\n                return d.properties.TOWN.toLowerCase()\r\n            })\r\n            .attr('id', 'bsasmap')\r\n            .on('mouseenter', function(d, i) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\r\n                // var currentState = this;\r\n                // console.log(this);\r\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('mouseleave', function(d) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\r\n\r\n            })\r\n            .on('select', function(self) {\r\n                var geoData = self.data();\r\n                var town_value\r\n\r\n                if (data.values[geoData[0].properties.TOWN] >= 0) {\r\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\r\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\r\n                } else {\r\n                    //console.log(data.values[geoData[0].properties.TOWN])\r\n                    town_value = \"N/A\";\r\n                };\r\n\r\n                //console.log(town_value);\r\n\r\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \":  \" + town_value);\r\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n                //console.log(geoData[0].properties);\r\n            })\r\n            .on('unselect', function(self) {\r\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\r\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\r\n                d3.selectAll('path#bsasmap').style({\r\n                    'fill-opacity': 1\r\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n            })\r\n\r\n        function notify(selector, eventName) {\r\n            d3.selectAll(selector)[0].forEach(function(el, i) {\r\n                var shape = d3.select(el);\r\n                shape.on(eventName)(shape);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(['#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'])\r\n    opChgScale.domainStrings = function() {\r\n        return (['0%', '>0-14%', '>14-24%', '>24-33%', '>33-46%', '>46-100%'\r\n        ]);\r\n    };\r\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\r\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\r\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\r\n\r\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 70;\r\n\r\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", \"100%\")\r\n            .attr(\"height\", height);\r\n\r\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#d1d1d1',\r\n            s: 'N/A*'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        $maps_sub_legends.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 60)\r\n            .attr(\"x\", function(d, i) {\r\n                return (i * (100 / legendData.length)) + \"%\";\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        $maps_sub_legends.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr('text-anchor', 'middle')\r\n            .attr(\"x\", function(d, i) {\r\n                return ((i * (100 / legendData.length)) + 7) + \"%\";\r\n            })\r\n            .attr(\"y\", 55)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            });\r\n\r\n        $maps_sub_legends.append(\"text\")\r\n            .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    }\r\n\r\n\r\n\r\n    $('.js-toggle-treatment-map').click(function() {\r\n        var date = $(this).data('date');\r\n        $('#treatmentMaps').attr('data-active-date', date);\r\n        $('.js-toggle-treatment-map').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n})(d3);","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    //var yScale = d3.scale.sqrt();\r\n    var yScale = d3.scale.linear();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", (dimensions.width - dimensions.margin.left)/2)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -(dimensions.height/2))\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(0, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", (dimensions.width - dimensions.margin.left)/2);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    var focus = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"focus\")\r\n        .classed(\"hidden\", true);\r\n\r\n    $lines_death\r\n        .on(\"mouseover\", mouseoverFunc)\r\n        .on(\"mouseout\", mouseoutFunc)\r\n        .on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n        //d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n        tooltip_death.classed(\"hidden\", true);\r\n    }\r\n    function mouseoverFunc(d, i) {\r\n\r\n        //d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n\r\n        //d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n        //d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1];\r\n        //console.log(y0);\r\n        var y1 = yScale.invert(y0);\r\n        var percentVal = d3.format(\".2f\")(y1)\r\n\r\n        tooltip_death.classed(\"hidden\", false)\r\n        .html(percentVal);\r\n        //console.log(d.rates[i]);\r\n        //console.log(d3.select(this).select(\"path.point\"));\r\n        //focus.classed(\"hidden\", false);\r\n    }\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n        console.log(\"events\", d3.event.offsetX, d3.event.layerY/2);\r\n        console.log(\"d3.events\", d3.event);\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1]\r\n        var y1 = yScale.invert(y0);\r\n        var percentVal = d3.format(\".2f\")(y1);\r\n\r\n       //focus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n\r\n\r\n        tooltip_death\r\n            .style(\"top\", (d3.event.offsetY+20) + \"px\")\r\n            .style(\"left\", (d3.event.offsetX) + \"px\")\r\n            .html(percentVal);\r\n    }\r\n\r\n    // function bindEvents() {\r\n    //     d3.selectAll(\"g.lines-death\")\r\n    //         .on(\"mouseover\", mouseoverFunc)\r\n    //         .on(\"mouseout\", mouseoutFunc)\r\n    //         .on(\"mousemove\", mousemoveFunc);\r\n\r\n    //     function mouseoutFunc() {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n    //         tooltip_death.classed(\"hidden\", true);\r\n    //     }\r\n\r\n    //     function mouseoverFunc(d, i) {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n    //         d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n    //         tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n    //     }\r\n\r\n    //     var coordinates = [0, 0];\r\n\r\n    //     function mousemoveFunc(d) {\r\n    //         coordinates = d3.mouse(this);\r\n\r\n    //         var x = coordinates[0];\r\n    //         var y = coordinates[1];\r\n    //         tooltip_death\r\n    //             .style(\"top\", y + \"px\")\r\n    //             .style(\"left\", x + \"px\")\r\n    //             .style('position', 'absolute')\r\n    //             .style('z-index', 1001);\r\n    //     }\r\n    // }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var rootSelector = '#fentanyl-lines';\r\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\r\n\r\n    var chartData = [{\r\n    \t\"date\": new Date(\"01/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.22\",\r\n    \t\"Heroin\": \"0.41\",\r\n    \t\"Methadone\": \"0.10\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"04/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.18\",\r\n    \t\"Fentanyl\": \"0.19\",\r\n    \t\"Heroin\": \"0.49\",\r\n    \t\"Methadone\": \"0.07\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"07/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.14\",\r\n    \t\"Fentanyl\": \"0.14\",\r\n    \t\"Heroin\": \"0.53\",\r\n    \t\"Methadone\": \"0.10\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"10/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.22\",\r\n    \t\"Fentanyl\": \"0.27\",\r\n    \t\"Heroin\": \"0.35\",\r\n    \t\"Methadone\": \"0.06\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"01/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.40\",\r\n    \t\"Heroin\": \"0.30\",\r\n    \t\"Methadone\": \"0.04\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"04/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.24\",\r\n    \t\"Fentanyl\": \"0.38\",\r\n    \t\"Heroin\": \"0.29\",\r\n    \t\"Methadone\": \"0.05\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"07/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.40\",\r\n    \t\"Heroin\": \"0.30\",\r\n    \t\"Methadone\": \"0.06\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"10/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.22\",\r\n    \t\"Fentanyl\": \"0.43\",\r\n    \t\"Heroin\": \"0.24\",\r\n    \t\"Methadone\": \"0.05\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"01/01/2016\"),\r\n    \t\"FentanylHeroin\": \"0.15\",\r\n    \t\"Fentanyl\": \"0.50\",\r\n    \t\"Heroin\": \"0.17\",\r\n    \t\"Methadone\": \"0.04\"\r\n   }];\r\n\r\n\r\n\r\n\r\n    var yearformat = d3.time.format(\"%Y\");\r\n\r\n    function quarter (date) {\r\n    \tvar date2 = new Date();\r\n    \tdate2.setMonth(date.getMonth() - 10);\r\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\r\n    \treturn \"Q\" + q;\r\n    }\r\n\r\n    var seriesColors = [\"#333333\", \"#b71c1c\", \"#0071bc\", \"#333333\"];\r\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\r\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\r\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\r\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\r\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\r\n    var xLabel = \"date\";\r\n\r\n\r\n\r\n\r\n    // Dimensions\r\n\r\n    var margin = {\r\n      top: 10, // space for the legend\r\n      right: 15,\r\n      bottom: 50,\r\n      left: 42\r\n    };\r\n\r\n    var wrapper_width = 540;\r\n    var wrapper_height = 400;\r\n    var width = wrapper_width - margin.left - margin.right;\r\n    var height = wrapper_height - margin.top - margin.bottom;\r\n\r\n\r\n    var x = d3.scale.ordinal().rangePoints([0, width]);\r\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\r\n\r\n    var y = d3.scale.linear().range([height, 0]);\r\n\r\n    var color = d3.scale.ordinal().range(seriesColors);\r\n\r\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\r\n\r\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\r\n\r\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\r\n\r\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\r\n\r\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\r\n\r\n    var xAxis_fent = d3.svg.axis()\r\n                    \t.scale(x)\r\n                    \t.orient(\"bottom\")\r\n                    \t.ticks(d3.time.months, 3)\r\n                    \t.tickFormat(quarter);\r\n\r\n\r\n    var xAxis2_fent = d3.svg.axis()\r\n                      \t.scale(x)\r\n                      \t.ticks(d3.time.years, 1)\r\n                      \t.tickFormat(yearformat)\r\n                      \t.tickSize(3, 0)\r\n                      \t.tickPadding(1)\r\n                      \t.orient(\"bottom\");\r\n\r\n    //percentage formatiing\r\n    var formatPercent = d3.format(\".0%\");\r\n\r\n    var yAxis_fent = d3.svg.axis()\r\n                    \t.scale(y)\r\n                    \t.orient(\"left\")\r\n                    \t.tickFormat(formatPercent)\r\n                    \t.ticks(5)\r\n                    \t.tickSize(3, 0)\r\n                    \t.tickPadding(1);\r\n\r\n    //create tooltipFent\r\n\r\n    // add a tooltipFent to the page - not to the svg itself!\r\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\r\n\r\n    var line = d3.svg.line()\r\n              \t.x(function(d) {\r\n              \t    return x(d.label);\r\n              \t})\r\n              \t.y(function(d) {\r\n              \t    return y(d.value);\r\n              \t});\r\n\r\n    var $svg = d3.select(document.querySelector(rootSelector))\r\n      .append(\"svg\");\r\n    var $lines_fent = $svg.append(\"g\")\r\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\r\n      return key !== xLabel;\r\n    });\r\n\r\n    color.domain(varSeries);\r\n    lineStroke.domain(varSeries);\r\n    lineDash.domain(varSeries);\r\n    pointShape.domain(varSeries);\r\n    pointWidth.domain(varSeries);\r\n    pointFill.domain(varSeries);\r\n\r\n    var seriesData = varSeries.map(function(name) {\r\n    \treturn {\r\n    \t    name: name,\r\n    \t    values: chartData.map(function(d) {\r\n        \t\treturn {\r\n        \t\t    name: name,\r\n        \t\t    label: d[xLabel],\r\n        \t\t    value: +d[name]\r\n        \t\t};\r\n    \t    })\r\n    \t};\r\n    });\r\n\r\n\r\n    x.domain(chartData.map(function(d) {\r\n      return d.date;\r\n    }));\r\n\r\n    x2.domain(chartData.map(function(d) {\r\n      return d.date;\r\n    }));\r\n\r\n    y.domain([\r\n      d3.min(seriesData, function(c) {\r\n          return d3.min(c.values, function(d) {\r\n      \t//return d.value;\r\n      \treturn 0;\r\n          });\r\n      }),\r\n      d3.max(seriesData, function(c) {\r\n          return d3.max(c.values, function(d) {\r\n      \treturn d.value;\r\n        //return 0.6\r\n          });\r\n      })\r\n    ]);\r\n\r\n    var x_axis = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-x-axis\")\r\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    \t.call(xAxis_fent);\r\n\r\n    var x_axis_lines = x_axis.append(\"path\")\r\n    \t.attr(\"class\", \"line\")\r\n    \t.style(\"stroke-width\", \"1.5px\")\r\n    \t.call(xAxis_fent);\r\n\r\n    var x_axis2 = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-axis\")\r\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\r\n    \t.call(xAxis2_fent);\r\n\r\n    var x_axis2_text = x_axis2\r\n    \t.append(\"text\")\r\n    \t.attr(\"x\", (width - margin.left)/2)\r\n    \t.attr(\"y\", margin.bottom - 32)\r\n    \t.attr(\"dy\", \"1em\")\r\n    \t.attr(\"class\", \"vis-x-axis-label\")\r\n    \t.text(\"Quarter\");\r\n\r\n\r\n    var y_axis = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-y-axis\")\r\n    \t.call(yAxis_fent)\r\n      //.append(\"tspan\")\r\n      .append(\"text\")\r\n    \t.attr(\"x\", -(height/2))\r\n    \t.attr(\"y\", -44)\r\n    \t.attr(\"dy\", \"1em\")\r\n    \t.attr(\"class\", \"vis-y-axis-label\")\r\n    \t.text(\"Percent Opioid Deaths\");\r\n      //.html(\"<sup>1</sup>\");\r\n\r\n    var series = $lines_fent.selectAll(\".series\")\r\n    \t.data(seriesData)\r\n    \t.enter().append(\"g\")\r\n    \t.attr(\"class\", \"seriesData\");\r\n\r\n\r\n    var $lines = series.append(\"path\")\r\n    \t.attr(\"class\", \"line\")\r\n    \t.attr(\"d\", function(d) {\r\n    \t    return line(d.values);\r\n    \t})\r\n    \t.style(\"stroke\", function(d) {\r\n    \t    return color(d.name);\r\n    \t})\r\n    \t.style(\"stroke-width\", function(d) {\r\n    \t    return lineStroke(d.name);\r\n    \t})\r\n    \t.style(\"stroke-dasharray\", function(d) {\r\n    \t    return lineDash(d.name);\r\n    \t})\r\n    \t.style(\"fill\", \"none\");\r\n\r\n\r\n    var $lines_hit_area = series.append(\"path\")\r\n    \t.attr(\"class\", \"hit-area-ext\")\r\n    \t.attr(\"d\", function(d) {\r\n    \t    return line(d.values);\r\n    \t})\r\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\r\n    \t.style(\"fill\", \"none\");\r\n\r\n\r\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    // \t.attr(\"x\", width + 5)\r\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\r\n    // \t.attr(\"dy\", \"1em\")\r\n    // \t.text(\"Fentanyl & Heroin\");\r\n\r\n    // var x_axis_label_m = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    // \t.attr(\"x\", width + 5)\r\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\r\n    // \t.attr(\"dy\", \"1em\")\r\n    // \t.text(\"Methadone\");\r\n\r\n    // var x_axis_label_h = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    //   .attr(\"x\", width + 5)\r\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\r\n    //   .attr(\"dy\", \"1em\")\r\n    //   .text(\"Heroin\");\r\n\r\n    // var x_axis_label_f = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    //   .attr(\"x\", width + 5)\r\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\r\n    //   .attr(\"dy\", \"1em\")\r\n    //   .text(\"Fentanyl\");\r\n\r\n\r\n\r\n    /*======================================================================\r\n     Mouse Functions\r\n    ======================================================================*/\r\n    var focus = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"focus\")\r\n    \t.classed(\"hidden\", true);\r\n\r\n    focus.append(\"circle\")\r\n    \t.style(\"stroke-width\", 1)\r\n    \t.attr(\"r\", 6)\r\n    \t.attr('pointer-events', 'none');\r\n\r\n    d3.selectAll(\"g.seriesData\")\r\n    \t.on(\"mouseover\", mouseoverFunc)\r\n    \t.on(\"mouseout\", mouseoutFunc)\r\n    \t.on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\r\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\r\n      \tfocus.classed(\"hidden\", true);\r\n    }\r\n\r\n    function mouseoverFunc(d, i) {\r\n\r\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\r\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\r\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\r\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\r\n    \t//         }\r\n\r\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\r\n    \tvar x0 = d3.mouse(this)[0];\r\n    \tvar y0 = d3.mouse(this)[1]\r\n    \tvar y1 = y.invert(y0);\r\n    \tvar percentVal = d3.format(\".0%\")(y1)\r\n\r\n    \ttooltipFent.classed(\"hidden\", false)\r\n    \t.html(percentVal);\r\n    \t//console.log(d.rates[i]);\r\n    \t//console.log(d3.select(this).select(\"path.point\"));\r\n    \tfocus.classed(\"hidden\", false);\r\n    }\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n    \t//console.log(\"events\", window.event, d3.event);\r\n    \tvar x0 = d3.mouse(this)[0];\r\n    \tvar y0 = d3.mouse(this)[1]\r\n    \tvar y1 = y.invert(y0);\r\n    \tvar percentVal = d3.format(\".0%\")(y1);\r\n\r\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n\r\n\r\n    \ttooltipFent\r\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\r\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n    \t    .html(percentVal);\r\n    }\r\n\r\n\r\n\r\n    function render () {\r\n      updateWidth(rootNode.clientWidth);\r\n\r\n      x.rangePoints([0, width]);\r\n      x2.rangePoints([0, width]);\r\n      y.range([height, 0]);\r\n      xAxis_fent.scale(x);\r\n      xAxis2_fent.scale(x);\r\n      yAxis_fent.scale(y);\r\n      // update lines\r\n      line.x(function(d) {\r\n          return x(d.label);\r\n        })\r\n        .y(function(d) {\r\n            return y(d.value);\r\n        });\r\n\r\n      x_axis\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(xAxis_fent);\r\n\r\n      x_axis2\r\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\r\n        .call(xAxis2_fent);\r\n\r\n      x_axis2_text\r\n      .attr(\"x\", (width - margin.left)/2)\r\n      .attr(\"y\", margin.bottom - 32);\r\n\r\n\r\n      y_axis.call(yAxis_fent);\r\n\r\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\r\n\r\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\r\n\r\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\r\n\r\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\r\n\r\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\r\n\r\n      $lines.attr(\"d\", function(d) {\r\n          return line(d.values);\r\n      });\r\n\r\n      $lines_hit_area.attr(\"d\", function(d) {\r\n        return line(d.values);\r\n      });\r\n\r\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-margin.right*10)+\",0)\");\r\n    }\r\n\r\n    function updateWidth(componentWidth) {\r\n      wrapper_width = componentWidth;\r\n      width = wrapper_width - margin.left - margin.right;\r\n      height = wrapper_height - margin.top - margin.bottom;\r\n    }\r\n\r\n    var $legend = $svg.append(\"g\");\r\n    var $item = $legend.append(\"g\");\r\n\r\n    function renderLegend() {\r\n\r\n\r\n      var legendItems = [\r\n        \"FentanylHeroin\",\r\n        \"Fentanyl\",\r\n        \"Heroin\",\r\n        \"Methadone\"\r\n      ];\r\n      var legendItemsTranslate = [\r\n        \"Both Fentanyl & Heroin\",\r\n        \"Only Fentanyl\",\r\n        \"Only Heroin\",\r\n        \"Only Methadone\"\r\n      ];\r\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-(margin.right*10))+\",0)\");\r\n      var lineHeight = 15;\r\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\r\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\r\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\r\n\r\n      legendItems.forEach(function(item, i) {\r\n      $item = $legend.append(\"g\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\r\n\r\n        $item.append(\"svg:line\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", 5)\r\n          .attr(\"x2\", 30)\r\n          .attr(\"y2\", 5)\r\n          .style(\"stroke\", seriesColors[i])\r\n          .style(\"stroke-dasharray\", seriesLineDash[i])\r\n          .style(\"stroke-width\", seriesLineStrokes[i]);\r\n\r\n        $item.append(\"text\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"x\", 40)\r\n          .attr(\"y\", 10)\r\n          .text(legendItemsTranslate[i]);\r\n      });\r\n    }\r\n\r\n\r\n    render();\r\n    renderLegend();\r\n\r\n    window.addEventListener('resize', render);\r\n    //window.addEventListener('resize', renderLegend);\r\n\r\n\r\n\r\n})();\r\n","$(document).ready(function() {\r\n    var prescription = [{\r\n            \"Yes\": 83,\r\n            \"No\": 17\r\n        }, {\r\n            \"Yes\": 57,\r\n            \"No\": 43\r\n        }, {\r\n            \"Yes\": 50,\r\n            \"No\": 50\r\n        }, {\r\n            \"Yes\": 37,\r\n            \"No\": 63\r\n        }],\r\n\r\n        heroin = [{\r\n            \"Yes\": 65,\r\n            \"No\": 35\r\n        }, {\r\n            \"Yes\": 28,\r\n            \"No\": 72\r\n        }, {\r\n            \"Yes\": 20,\r\n            \"No\": 80\r\n        }, {\r\n            \"Yes\": 13,\r\n            \"No\": 87\r\n        }],\r\n\r\n        fentanyl = [{\r\n            \"Yes\": 68,\r\n            \"No\": 32\r\n        }, {\r\n            \"Yes\": 30,\r\n            \"No\": 70\r\n        }, {\r\n            \"Yes\": 22,\r\n            \"No\": 78\r\n        }, {\r\n            \"Yes\": 17,\r\n            \"No\": 83\r\n        }],\r\n\r\n        both = [{\r\n            \"Yes\": 64,\r\n            \"No\": 36\r\n        }, {\r\n            \"Yes\": 24,\r\n            \"No\": 76\r\n        }, {\r\n            \"Yes\": 15,\r\n            \"No\": 85\r\n        }, {\r\n            \"Yes\": 9,\r\n            \"No\": 91\r\n        }],\r\n\r\n        methadone = [{\r\n            \"Yes\": 76,\r\n            \"No\": 24\r\n        }, {\r\n            \"Yes\": 46,\r\n            \"No\": 54\r\n        }, {\r\n            \"Yes\": 41,\r\n            \"No\": 59\r\n        }, {\r\n            \"Yes\": 27,\r\n            \"No\": 73\r\n        }],\r\n\r\n        buprenorphine = [{\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }],\r\n\r\n        dataset = [{\r\n                data: [{\r\n                    count: 867,\r\n                    name: 'Heroin'\r\n                }],\r\n                name: 'Heroin'\r\n            }, {\r\n                data: [{\r\n                    count: 288,\r\n                    name: 'Fentanyl'\r\n                }],\r\n                name: 'Fentanyl'\r\n            }, {\r\n                data: [{\r\n                    count: 249,\r\n                    name: 'Fentanyl & Heroin'\r\n                }],\r\n                name: 'Fentanyl & Heroin'\r\n            }, {\r\n                data: [{\r\n                    count: 154,\r\n                    name: 'Prescription Opioids'\r\n                }],\r\n                name: 'Prescription Opioids'\r\n            }, {\r\n                data: [{\r\n                    count: 84,\r\n                    name: 'Methadone'\r\n                }],\r\n                name: 'Methadone'\r\n            },\r\n            //  {\r\n            //     data: [{\r\n            //         count: 15,\r\n            //         name: 'Buprenorphine'\r\n            //     }],\r\n            //     name: 'Buprenorphine'\r\n            // }\r\n\r\n        ];\r\n\r\n\r\n    var data_substance = prescription;\r\n    var time = 0;\r\n    asignVal_substance(data_substance, time);\r\n\r\n    $(\".btn-substance\").on('click', function() {\r\n        var sub = parseInt($(this).val());\r\n        var substance;\r\n        $(\".btn-time\").removeClass('disableClick disabled');\r\n        switch (sub) {\r\n            case 0:\r\n                substance = prescription;\r\n                break;\r\n            case 1:\r\n                substance = heroin;\r\n                break;\r\n            case 2:\r\n                substance = fentanyl;\r\n                break;\r\n            case 3:\r\n                substance = both;\r\n                break;\r\n            case 4:\r\n                substance = methadone;\r\n                break;\r\n            case 5:\r\n                substance = buprenorphine;\r\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\r\n                $(\"#studyperiod\").addClass('active');\r\n                break;\r\n        }\r\n        data_substance = substance;\r\n        asignVal_substance(data_substance, time);\r\n    });\r\n\r\n\r\n    $(\".btn-time\").on('click', function() {\r\n        $('.btn-time').removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        time = parseInt($(this).val());\r\n        asignVal_substance(data_substance, time);\r\n        var time_period;\r\n        switch (time) {\r\n            case 0:\r\n                time_period = \"during 2011–2014\";\r\n                break;\r\n            case 1:\r\n                time_period = \"6 Months Before Death\";\r\n                break;\r\n            case 2:\r\n                time_period = \"3 Months Before Death\";\r\n                break;\r\n            case 3:\r\n                time_period = \"1 Month Before Death\";\r\n                break;\r\n        }\r\n        $(\"#time-period\").html(time_period.toLowerCase());\r\n        $(\"#label_blocks\").html(time_period);\r\n    });\r\n\r\n    function asignVal_substance(type, time) {\r\n        $('#percentage').html(type[time].Yes + '%');\r\n        $(\"#people\").empty();\r\n        $('#people').each(function() {\r\n            makeChart_substance(type, time);\r\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Had legal prescription</th><th>Did not have legal prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    function makeChart_substance(data_substance, i) {\r\n        var blockArray_substance = [];\r\n        var noOfBlocks_No = Math.round(data_substance[i].No);\r\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\r\n        var blocksAdded = 0;\r\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\r\n        addBlock_substance(\"#people\", blockArray_substance, 0);\r\n    }\r\n\r\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\r\n        var person_path = '<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\r\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/>';\r\n        var person_svg_No = '<svg class=\"block type_substance1\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\r\n\r\n        for (b = 0; b < noOfBlocks_No; b++) {\r\n            blockArray_substance.push(person_svg_No);\r\n\r\n            //blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\r\n        };\r\n        for (b = 0; b < noOfBlocks_Yes; b++) {\r\n            //$(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\r\n        var person_svg_Yes = '<svg class=\"block type_substance0\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\r\n            $(id).append(person_svg_Yes);\r\n        };\r\n        return blockArray_substance;\r\n\r\n    }\r\n\r\n    function addBlock_substance(id, blockArray_substance, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray_substance[i]);\r\n            i++;\r\n            addBlock_substance(id, blockArray_substance, i);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////\r\n    //BAR CHART\r\n    ///////////////////////\r\n\r\n    var width = '100%',\r\n        height = 30;\r\n    // series = dataset.map(function(d) {\r\n    //     return d.name;\r\n    // }),\r\n    dataset = dataset.map(function(d) {\r\n            return d.data.map(function(o, i) {\r\n                // Structure it so that your numeric\r\n                // axis (the stacked amount) is y\r\n                return {\r\n                    y: o.count,\r\n                    s: o.name,\r\n                };\r\n            });\r\n        }),\r\n        stack = d3.layout.stack();\r\n\r\n    stack(dataset);\r\n\r\n\r\n    var dataset = dataset.map(function(group) {\r\n            return group.map(function(d) {\r\n                // Invert the x and y values, and y0 becomes x0\r\n                return {\r\n                    x: d.y,\r\n                    n: d.s,\r\n                    y: d.x,\r\n                    x0: d.y0\r\n                };\r\n            });\r\n        }),\r\n        $bar = d3.select('#bar')\r\n        .append('svg')\r\n        .attr('id', 'bar_svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n    var color = [\"#b71c1c\", '#CFD8DC']\r\n    var colors;\r\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\r\n    draw(colors);\r\n    $(\".btn-substance\").on('click', function() {\r\n        $('#bar_svg').empty();\r\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\r\n        $('.btn-substance').removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        colors[$(this).val()] = color[0];\r\n        draw(colors);\r\n        var i = $(this).val(),\r\n            d = dataset[$(this).val()][0];\r\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\r\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand();\r\n        console.log(d);\r\n        console.log(d.n == 'Fentanyl & Heroin')\r\n\r\n        if (d.n == 'Fentanyl & Heroin') {\r\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-7\\\" class=\\\"page-scroll\\\"><sup>7</sup></a>\";\r\n        } else if (d.n == 'Prescription Opioids') {\r\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-8\\\" class=\\\"page-scroll\\\"><sup>8</sup></a>\";\r\n        } else {\r\n            substance_html = d.n.toLowerCase();\r\n        }\r\n\r\n        console.log(substance_html)\r\n        $('.substance-type').html(substance_html);\r\n        $('#total').html(d.x);\r\n\r\n    });\r\n\r\n    function draw(colors) {\r\n        $('#bar_svg')\r\n            .append('g')\r\n            .attr('class', 'bar_g')\r\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\r\n        xMax = d3.max(dataset, function(group) {\r\n                return d3.max(group, function(d) {\r\n                    return d.x + d.x0;\r\n                });\r\n            }),\r\n            xScale = d3.scale.linear()\r\n            .domain([0, xMax])\r\n            .range([0, width]),\r\n            // months = dataset[0].map(function(d) {\r\n            //     return d.y;\r\n            // }),\r\n            yScale = d3.scale.ordinal()\r\n            //.domain(months)\r\n            .rangeRoundBands([0, height], .1),\r\n\r\n            colours = d3.scale.ordinal()\r\n            .range(colors),\r\n\r\n            bar_groups = $bar.selectAll('.bar_g')\r\n            .data(dataset)\r\n            .enter()\r\n            .append('g')\r\n            .style('fill', function(d, i) {\r\n                return colours(i);\r\n            }),\r\n\r\n            rects = bar_groups.selectAll('rect')\r\n            .data(function(d) {\r\n                return d;\r\n            })\r\n            .enter()\r\n            .append('rect')\r\n            .style({ 'stroke': '#b71c1c', 'stroke-width': '1px' })\r\n            .attr('x', function(d) {\r\n                return xScale(d.x0);\r\n            })\r\n            .attr('y', function(d, i) {\r\n                return yScale(d.y);\r\n            })\r\n            .attr('height', function(d) {\r\n                return yScale.rangeBand();\r\n            })\r\n            .attr('width', function(d) {\r\n                return xScale(d.x);\r\n            })\r\n    };\r\n\r\n})\r\n","$(document).ready(function() {\r\n\r\n    var prescription = [\r\n        [0, 0],\r\n        [\"No\", 58],\r\n        [\"Yes\", 13],\r\n        [\"Yes\", 8],\r\n        [\"No\", 21],\r\n        [0, 0]\r\n    ];\r\n    var heroin = [\r\n        [0, 0],\r\n        [\"No\", 22],\r\n        [\"Yes\", 49],\r\n        [\"Yes\", 17],\r\n        [\"No\", 12],\r\n        [0, 0]\r\n    ];\r\n\r\n    var multi = [\r\n        [\"1\", 15],\r\n        [\"2\", 31],\r\n        [\"3\", 25],\r\n        [\"3\", 18],\r\n        [\"2\", 9],\r\n        [\"1\", 2]\r\n    ];\r\n\r\n\r\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\r\n    // console.log(person);\r\n    var table_html = [\r\n        '<div class=\"people-blocks\">Prescription Opioids in Toxicology Screen</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\r\n        '<div class=\"people-blocks\">Heroin in Toxicology Screen</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\r\n        '<div class=\"people-blocks\">Number of different prescribers</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\r\n    ];\r\n\r\n\r\n    var data_gender = prescription;\r\n    var value;\r\n    var option;\r\n\r\n    //Set initial values\r\n    makeChart_gender(prescription);\r\n    $('#table_gender').html(table_html[0]);\r\n    $(\"#prescription\").addClass(\"active\");\r\n\r\n    //Link text controls\r\n    $('.controls-block').click(function() {\r\n        $option = $(this).data('select');\r\n        //$value = eval($(this).val());\r\n        if ($option == 'multi') { $value = 2; } else if ($option == 'heroin') { $value = 1; } else if ($option = 'prescription') { $value = 0; }\r\n        console.log($value);\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n\r\n    //Link button controls\r\n    $('.btn-blocks').click(function() {\r\n        $option = $(this).attr('id');\r\n        $value = eval($(this).val());\r\n        //console.log($value);\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n\r\n    function asignVal_gender(option, value) {\r\n        $(\"#buttons-blocks button\").removeClass(\"active\");\r\n        $('#' + option).addClass('active');\r\n        $(\"#gender\").empty();\r\n        makeChart_gender(eval(option));\r\n        $('#table_gender').html(table_html[value]);\r\n        //console.log(value);\r\n    };\r\n\r\n\r\n    function makeChart_gender(data_gender) {\r\n\r\n        var blockArray = [];\r\n        if (data_gender == multi) {\r\n            var index = [0, 1, 2, 3, 4, 5];\r\n        } else {\r\n            var index = [0, 0, 2, 3, 5, 5];\r\n        };\r\n        for (i = 0; i < 6; i++) {\r\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\r\n            var blocksAdded = 0;\r\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\r\n        }\r\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\r\n    }\r\n\r\n    function addBlock_gender(id, blockArray, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray[i]);\r\n            i++;\r\n            //timeout += 1;\r\n            // setTimeout(function() {\r\n            addBlock_gender(id, blockArray, i);\r\n            //})\r\n        }\r\n    }\r\n\r\n\r\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\r\n        for (b = 0; b < noOfBlocks; b++) {\r\n            var person_svg = '<svg class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + ' width=\"25px\" height=\"25px\">'+'<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\r\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/></svg>';\r\n\r\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\r\n            //blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\r\n            blockArray.push(person_svg);\r\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\r\n        }\r\n        return blockArray;\r\n    }\r\n\r\n});\r\n\r\n\r\n// var $block = document.getElementByClassName('block');\r\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\r\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n        .text(\"Age\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .attr(\"y\", 10)\r\n        .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n    // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n            var selected = \"percentOpiodDeaths\";\r\n            //console.log(column);\r\n            var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n            //\r\n            // //console.log(column, dataset);\r\n            //\r\n\r\n\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n\r\n            window.addEventListener('resize', function() {\r\n                updateWidth();\r\n                redraw(dataset, selected);\r\n            });\r\n\r\n            d3.select(\"#POD\").classed(\"selected\", true);\r\n            $(\"#POD\").addClass(\"active\");\r\n\r\n            d3.select(\"#POD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"percentOpiodDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#DR\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"deathRate\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#NOD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"numberOpioidDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age18to24\")\r\n                .on(\"click\", function(d, i) {\r\n                    //selected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", true);    \r\n\r\n                    d3.selectAll(\".bar.malFocus.age18to24\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age18to24\")\r\n                        .classed(\"femSelector\", false);\r\n                    \r\n                     d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);  \r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age25to34\")\r\n                .on(\"click\", function(d, i) {\r\n                    //lected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                     \r\n\r\n                    d3.selectAll(\".bar.malFocus.age25to34\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age25to34\")\r\n                        .classed(\"femSelector\", false);\r\n\r\n                    d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);                    \r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n\r\n\r\n                });\r\n\r\n            //setup our ui -- requires access to data variable, so inside csv\r\n            // d3.select(\"#menu select\")\r\n            //     .on(\"change\", function() {\r\n            //         column = d3.select(\"#menu select\").property(\"value\");\r\n            //         dataset = drawGraph(data, column);\r\n            //         //console.log(column, dataset);\r\n            //         redraw(dataset, column);\r\n            // });\r\n\r\n        }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + (width - 10) + \",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female' && d.age === '35 to 49') {\r\n                    return \"bar femFocus age35to49\";\r\n                } else if (d.gender === 'Male' && d.age === '35 to 49') {\r\n                    return \"bar malFocus age35to49\";\r\n                } else if (d.gender === 'Female' && d.age === '50 to 64') {\r\n                    return \"bar femFocus age50to64\";\r\n                } else if (d.gender === 'Male' && d.age === '50 to 64') {\r\n                    return \"bar malFocus age50to64\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus age65plus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus age65plus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                //console.log(d.age)\r\n                return d.gender_age\r\n            });\r\n             // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            })\r\n            ;\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-axis lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-axis lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-axis\"\r\n                }\r\n            });\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-data-label lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-data-label lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-data-label\"\r\n                }\r\n            });\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent of Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();","$(document).ready(function() {\r\n\r\n    dataset = [{\r\n        raceth: \"All\",\r\n        \"2014\": 19.8,\r\n        \"2015\": 23.2\r\n    }, {\r\n        raceth: \"White non-Hispanic\",\r\n        \"2014\": 23.3,\r\n        \"2015\": 27.1\r\n    }, {\r\n        raceth: \"Black non-Hispanic\",\r\n        \"2014\": 11.1,\r\n        \"2015\": 13.6\r\n    }, {\r\n        raceth: \"Hispanic\",\r\n        \"2014\": 15.3,\r\n        \"2015\": 19.5\r\n    }];\r\n\r\n    var color = d3.scale.ordinal()\r\n        .range([\"rgb(211, 211, 211)\", \"#78909C\"]);\r\n\r\n    var width, height, margin = {};\r\n\r\n    updateWidth();\r\n\r\n    var x0 = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n\r\n    var x1 = d3.scale.ordinal().rangeBands([0, width], 0);\r\n\r\n    var y = d3.scale.linear()\r\n        .range([height, 0]);\r\n\r\n    var min2014 = [18.8, 21.9, 5.5, 12.4] \r\n    var max2014 = [20.8, 24.7, 16.7, 18.2]\r\n    var min2015 = [22.1, 25.6, 7.4, 16.2]\r\n    var max2015 = [24.3, 28.6, 19.8, 22.8] \r\n\r\n    var errorBarArea2014all = d3.svg.area()\r\n    var errorBarArea2015all = d3.svg.area()\r\n    var errorBarArea2014white = d3.svg.area()\r\n    var errorBarArea2015white = d3.svg.area()  \r\n    var errorBarArea2014black = d3.svg.area()\r\n    var errorBarArea2015black = d3.svg.area()\r\n    var errorBarArea2014hisp = d3.svg.area()\r\n    var errorBarArea2015hisp = d3.svg.area() \r\n\r\n    var errorBars2014all;\r\n    var errorBars2015all;\r\n    var errorBars2014white;\r\n    var errorBars2015white;\r\n    var errorBars2014black;\r\n    var errorBars2015black;\r\n    var errorBars2014hisp;\r\n    var errorBars2015hisp;        \r\n\r\n    var xAxis_bars = d3.svg.axis()\r\n        .scale(x0)\r\n        .orient(\"bottom\");\r\n\r\n    var yAxis_bars = d3.svg.axis()\r\n        .scale(y)\r\n        .orient(\"left\")\r\n        .tickFormat(d3.format(\".0f\"));\r\n\r\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\r\n\r\n\r\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\r\n    var $bars_race = $svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n    var options = d3.keys(dataset[0]).filter(function(key) {\r\n        return key !== \"raceth\";\r\n    });\r\n\r\n    dataset.forEach(function(d) {\r\n        d.values = options.map(function(name) {\r\n            return {\r\n                name: name,\r\n                value: +d[name]\r\n            };\r\n        });\r\n    });\r\n\r\n    x0.domain(dataset.map(function(d) {\r\n        return d.raceth;\r\n    }));\r\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\r\n    y.domain([0, d3.max(dataset, function(d) {\r\n        return d3.max(d.values, function(d) {\r\n            return d.value;\r\n        });\r\n    })]);\r\n\r\n    var xAxis = $bars_race.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\r\n\r\n    var yAxis = $bars_race.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\");\r\n\r\n    var yAxisLabel = yAxis.append(\"text\")\r\n        .attr(\"y\", -35)\r\n        .attr(\"dy\", \".71em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age Adjusted Rates per 100,000\");\r\n\r\n    var bar = $bars_race.selectAll(\".bar\")\r\n        .data(dataset)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"rect\")\r\n        .attr(\"transform\", function(d) {\r\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\r\n        });\r\n\r\n\r\n    var bars = bar.selectAll(\"rect\")\r\n        .data(function(d) {\r\n            return d.values;\r\n        })\r\n        .enter().append(\"rect\");\r\n\r\n    bars\r\n        .attr(\"width\", x1.rangeBand())\r\n        .attr(\"x\", function(d) {\r\n            return x1(d.name) + 5;\r\n        })\r\n        .attr(\"y\", function(d) {\r\n            //console.log(d.value + \": \" + y(d.value))\r\n            return y(d.value);\r\n        })\r\n        .attr(\"value\", function(d) {\r\n            return d.name;\r\n        })\r\n        .attr(\"height\", function(d) {\r\n            //console.log(height - y(9.7));\r\n            return height - y(d.value);\r\n        })\r\n        .style(\"fill\", function(d) {\r\n\r\n            return color(d.name);\r\n        });\r\n\r\n    //bar.on(\r\n    //\"mouseover\", function(){\r\n    //d3.select(this).attr(\"fill\",\"red !important\");\r\n    //});\r\n\r\n    bar\r\n        .on(\"mousemove\", function(d) {\r\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\r\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\r\n            divtooltip_raceeth.classed(\"hidden\", false);\r\n            var x = d3.event.pageX,\r\n                y = d3.event.pageY\r\n            var elements = document.querySelectorAll(':hover');\r\n            l = elements.length\r\n            l = l - 1\r\n            elementData = elements[l].__data__\r\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\r\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\r\n\r\n        });\r\n\r\n    bar\r\n        .on(\"mouseout\", function(d) {\r\n            divtooltip_raceeth.classed(\"hidden\", true);\r\n        });\r\n\r\n\r\n\r\n    var legend = $bars_race.selectAll(\".vis-legend\")\r\n        .data(options.slice())\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"vis-legend\")\r\n        .attr(\"transform\", function(d, i) {\r\n            return \"translate(0,\" + i * 20 + \")\";\r\n        });\r\n\r\n    var legendRect = legend.append(\"rect\")\r\n        .attr(\"x\", width - 24)\r\n        .attr(\"width\", 18)\r\n        .attr(\"height\", 18)\r\n        .style(\"fill\", color);\r\n\r\n    var legendText = legend.append(\"text\")\r\n        .attr(\"x\", width - 24)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".35em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .text(function(d) {\r\n            return d;\r\n        });\r\n   \r\n\r\n    errorBarArea2014all \r\n        .x(function(d) {return x0('All')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[0]); }) \r\n        .y1(function(d) {return y(max2014[0]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015all \r\n        .x(function(d) {return x0('All')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[0]); }) \r\n        .y1(function(d) {return y(max2015[0]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014white \r\n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[1]); }) \r\n        .y1(function(d) {return y(max2014[1]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015white \r\n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[1]); }) \r\n        .y1(function(d) {return y(max2015[1]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014black \r\n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[2]); }) \r\n        .y1(function(d) {return y(max2014[2]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015black \r\n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[2]); }) \r\n        .y1(function(d) {return y(max2015[2]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014hisp \r\n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[3]); }) \r\n        .y1(function(d) {return y(max2014[3]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015hisp \r\n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[3]); }) \r\n        .y1(function(d) {return y(max2015[3]); }) \r\n        .interpolate(\"linear\");\r\n\r\n    \r\n    //var errorBarSVG = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\r\n    errorBars2014all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2015all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2014white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2015white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2014black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2015black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2014hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n    errorBars2015hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\r\n\r\n    //\r\n    errorBars2014all.enter().append(\"path\");\r\n    errorBars2015all.enter().append(\"path\");\r\n    errorBars2014white.enter().append(\"path\");\r\n    errorBars2015white.enter().append(\"path\");\r\n    errorBars2014black.enter().append(\"path\");\r\n    errorBars2015black.enter().append(\"path\");\r\n    errorBars2014hisp.enter().append(\"path\");\r\n    errorBars2015hisp.enter().append(\"path\");\r\n\r\n    //\r\n    errorBars2014all\r\n        .attr(\"d\", function(d){return errorBarArea2014all([d]);}) \r\n        .attr(\"class\", \"bars_race_error\");\r\n    errorBars2015all\r\n        .attr(\"d\", function(d){return errorBarArea2015all([d]);})\r\n        .attr(\"class\", \"bars_race_error\"); \r\n    errorBars2014white\r\n        .attr(\"d\", function(d){return errorBarArea2014white([d]);}) \r\n        .attr(\"class\", \"bars_race_error\");    \r\n    errorBars2015white\r\n        .attr(\"d\", function(d){return errorBarArea2015white([d]);})\r\n        .attr(\"class\", \"bars_race_error\"); \r\n    errorBars2014black\r\n        .attr(\"d\", function(d){return errorBarArea2014black([d]);}) \r\n        .attr(\"class\", \"bars_race_error\");    \r\n    errorBars2015black\r\n        .attr(\"d\", function(d){return errorBarArea2015black([d]);})\r\n        .attr(\"class\", \"bars_race_error\"); \r\n    errorBars2014hisp\r\n        .attr(\"d\", function(d){return errorBarArea2014hisp([d]);}) \r\n        .attr(\"class\", \"bars_race_error\");    \r\n    errorBars2015hisp\r\n        .attr(\"d\", function(d){return errorBarArea2015hisp([d]);})\r\n        .attr(\"class\", \"bars_race_error\"); \r\n\r\n    \r\n\r\n    function wrap(text, width) {\r\n        text.each(function() {\r\n            var text = d3.select(this),\r\n                words = text.text().split(/\\s+/).reverse(),\r\n                word,\r\n                line = [],\r\n                lineNumber = 0,\r\n                lineHeight = 1.1, // ems\r\n                y = text.attr(\"y\"),\r\n                dy = parseFloat(text.attr(\"dy\")),\r\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n            while (word = words.pop()) {\r\n                line.push(word);\r\n                tspan.text(line.join(\" \"));\r\n                if (tspan.node().getComputedTextLength() > width) {\r\n                    line.pop();\r\n                    tspan.text(line.join(\" \"));\r\n                    line = [word];\r\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function render() {\r\n        updateWidth();\r\n\r\n        x1.rangeRoundBands([0, x0.rangeBand()]);\r\n\r\n        x0.rangeRoundBands([0, width], .1);\r\n        y.range([height, 0]);\r\n\r\n        xAxis_bars.scale(x0);\r\n        yAxis_bars.scale(y);\r\n\r\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n        xAxis\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(xAxis_bars)\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, x0.rangeBand());\r\n\r\n        yAxis.call(yAxis_bars);\r\n        yAxisLabel.attr(\"x\", -height/2);\r\n        legendRect.attr(\"x\", width - 18);\r\n        legendText.attr(\"x\", width - 24);\r\n\r\n        bar.attr(\"transform\", function(d) {\r\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\r\n        });\r\n\r\n        bars.attr(\"width\", x1.rangeBand())\r\n            .attr(\"x\", function(d) {\r\n\r\n                return x1(d.name) + 10;\r\n            })\r\n            .attr(\"y\", function(d) {\r\n\r\n                return y(d.value);\r\n            })\r\n            .attr(\"value\", function(d) {\r\n                return d.name;\r\n            })\r\n            .attr(\"height\", function(d) {\r\n                return height - y(d.value);\r\n            });\r\n\r\n\r\n    errorBarArea2014all \r\n        .x(function(d) {return x0('All')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[0]); }) \r\n        .y1(function(d) {return y(max2014[0]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015all \r\n        .x(function(d) {return x0('All')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[0]); }) \r\n        .y1(function(d) {return y(max2015[0]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014white \r\n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[1]); }) \r\n        .y1(function(d) {return y(max2014[1]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015white \r\n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[1]); }) \r\n        .y1(function(d) {return y(max2015[1]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014black \r\n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[2]); }) \r\n        .y1(function(d) {return y(max2014[2]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015black \r\n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[2]); }) \r\n        .y1(function(d) {return y(max2015[2]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2014hisp \r\n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2; }) \r\n        .y0(function(d) {return y(min2014[3]); }) \r\n        .y1(function(d) {return y(max2014[3]); }) \r\n        .interpolate(\"linear\");\r\n    errorBarArea2015hisp \r\n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \r\n        .y0(function(d) {return y(min2015[3]); }) \r\n        .y1(function(d) {return y(max2015[3]); }) \r\n        .interpolate(\"linear\");\r\n\r\n    errorBars2014all\r\n        .attr(\"d\", function(d){return errorBarArea2014all([d]); });\r\n    errorBars2015all\r\n        .attr(\"d\", function(d){return errorBarArea2015all([d]); }); \r\n    errorBars2014white\r\n        .attr(\"d\", function(d){return errorBarArea2014white([d]); });    \r\n    errorBars2015white\r\n        .attr(\"d\", function(d){return errorBarArea2015white([d]); }); \r\n    errorBars2014black\r\n        .attr(\"d\", function(d){return errorBarArea2014black([d]); });    \r\n    errorBars2015black\r\n        .attr(\"d\", function(d){return errorBarArea2015black([d]); }); \r\n    errorBars2014hisp\r\n        .attr(\"d\", function(d){return errorBarArea2014hisp([d]); });    \r\n    errorBars2015hisp\r\n        .attr(\"d\", function(d){return errorBarArea2015hisp([d]); }); \r\n\r\n    }\r\n\r\n    function updateWidth() {\r\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\r\n        margin = {\r\n                top: 50,\r\n                right: 10,\r\n                bottom: 60,\r\n                left: 50\r\n            },\r\n            width = w - margin.left - margin.right;\r\n\r\n        if (w < 500) {\r\n            height = 350 - margin.top - margin.bottom;\r\n            linemult = 1.4\r\n            linepad = 40\r\n        } else {\r\n            height = 500 - margin.top - margin.bottom;\r\n            linemult = 1.35\r\n            linepad = 30\r\n        }\r\n\r\n    }\r\n    render();\r\n    window.addEventListener('resize', render);\r\n});\r\n"],"sourceRoot":"/source/"}