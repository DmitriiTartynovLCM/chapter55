{"version":3,"sources":["custom.js","map-death.js","lines-bsas.js","bars-race.js","queue.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-substance-pie.js","blocks-gender.js","bars-age.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","console","log","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","type","keys","forEach","key","groups","age","value","values","wrap","each","word","words","split","reverse","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","join","getComputedTextLength","parallelism","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","$anchor","stop","animate","scrollTop","preventDefault","$id","$current","parent","find","location","pathname","hostname","target","hash","tab","$target","get","play","load","response","asignVal_svg","val_svg","initialize","mapWidth","mapHeight","transformX","transformY","legendWidth","legendHeight","unitWidth","Vis","visualize","states","visualizationWrapper","wrapper","createMap","selector","eventName","el","shape","$maps_sub","palette","self","town_value","geoData","parentNode","getElementsByTagName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","YlOrBr","margin","right","bottom","left","MDG","Massachusetts","UnitedStates","dateFormat","time","xScale","yScale","sqrt","xAxis_death","axis","orient","ticks","tickFormat","innerTickSize","yAxis_death","tooltip_death","line_death","x","parse","rate","defined","$lines_death","csv","mouseoutFunc","mouseoverFunc","FullName","mousemoveFunc","coordinates","years","dataset","OMRs","Geography","rates","extent","max","inArray","quarter","date","date2","Date","setMonth","getMonth","Math","ceil","symbol","size","tooltipFent","focus","y0","y1","invert","percentVal","x0","pageY","pageX","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesColors","seriesLineStrokes","seriesLineDash","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","rangePoints","x2","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","xAxis_fent","months","xAxis2_fent","tickSize","tickPadding","formatPercent","yAxis_fent","label","$lines_fent","querySelector","varSeries","filter","seriesData","name","min","c","series","town_names","current_town","margin_bsas","width_bsas","height_bsas","bisectAge","bisector","percent","category10","xAxis_bsas","outerTickSize","yAxis_bsas","$lines_bsas","update","delay","string_select","value_select","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","legend_pos_text","legend_pos_dot","y_circle_alcohol","autocomplete","source","request","matches","acItem","indexOf","term","ui","item","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","getParent","getValue","getSum","_sum","arcTween","toArc","arc","toEndAngle","endAngle","_current","interpolate","startAngle","labelAnimation","centroid","fill","selectArcAnimation","_d","dist","outerRadius","midAngle","sin","cos","updatePie","getPercent","sum","toFixed","getLegend","liveLarge","angle","arcLength","PI","onMouseIn","onClick","option","description","eval","explodedIndex","$pie_substance","_i","animateDuration","opacity","transform","labelHeight","stroke","x1","innerRadius","y2","onMouseOut","pie","arcs","isDelay","_duration","font-family","font-size","text-anchor","attrTween","class","exit","remove","legends","labelWidth","generatePie","prescription","heroin","fentanyl","both","methadone","buprenorphine","time_period","labelsWidth","layout","sort","alignment-baseline","data_pie","asignVal_gender","makeChart_gender","table_html","data_gender","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","multi","$option","$value","drawGraph","column","redraw","rangeBands","bars","$bars_age","gender_age","age_bar_color","age_bar_label","age_bars_legend","options","ease","rangeBand","gender","labels","labels2","numberFormat","percentageFormat","rateFormat","selected","thisButton","raceth","2014","2015","rangeRoundBands","xAxis_bars","yAxis_bars","divtooltip_raceeth","$bars_race","bar","elements","l","elementData","__data__","legend"],"mappings":"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A,KAAA,iBAAA,QAEAhC,GAAAgB,UAAA,gBACAR,GAAA,YAAA4N,GACA5N,GAAA,WAAA2N,GACA3N,GAAA,YAAA8N,KNzVA,IAAAsE,aAEA,WACA,QACA,WACA,QACA,SACA,SACA,WACA,UACA,UACA,WACA,YACA,aACA,QACA,WACA,UACA,QACA,YACA,SACA,OACA,OACA,aACA,QACA,SACA,UACA,cACA,aACA,UACA,UACA,SACA,cACA,UACA,YACA,aACA,YACA,SACA,SACA,SACA,aACA,UACA,WACA,YACA,WACA,cACA,YACA,WACA,aACA,WACA,cACA,YACA,WACA,aACA,YACA,WACA,aACA,YACA,SACA,WACA,SACA,aACA,WACA,UACA,aACA,UACA,WACA,UACA,eACA,WACA,WACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,SACA,UACA,YACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,YACA,UACA,kBACA,iBACA,iBACA,UACA,cACA,SACA,YACA,WACA,SACA,QACA,UACA,YACA,YACA,WACA,YACA,UACA,aACA,aACA,WACA,WACA,UACA,WACA,aACA,OACA,aACA,SACA,UACA,UACA,SACA,YACA,kBACA,aACA,SACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,UACA,YACA,UACA,WACA,YACA,cACA,SACA,OACA,aACA,UACA,WACA,YACA,YACA,eACA,WACA,MACA,YACA,QACA,aACA,WACA,YACA,SACA,UACA,YACA,aACA,SACA,SACA,YACA,OACA,YACA,SACA,aACA,YACA,aACA,SACA,cACA,aACA,UACA,eACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,gBACA,cACA,YACA,UACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,aACA,kBACA,SACA,YACA,SACA,UACA,aACA,aACA,eACA,iBACA,WACA,UACA,cACA,SACA,UACA,YACA,cACA,mBACA,iBACA,cACA,cACA,eACA,cACA,aACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,aACA,aACA,aACA,WACA,WACA,YACA,eACA,SACA,WACA,UACA,UACA,WACA,SACA,WACA,YACA,WACA,WACA,OACA,SACA,YACA,UACA,UACA,QACA,YACA,cACA,WACA,SACA,QACA,WACA,UACA,SACA,YACA,YACA,WACA,UACA,aACA,aACA,WACA,aACA,cACA,cACA,eACA,cACA,YACA,UACA,cACA,WACA,cACA,WACA,YACA,OACA,aACA,UACA,aACA,SACA,aACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,WACA,QACA,eACA,YACA,QACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,SACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,UACA,SACA,eACA,kBACA,iBACA,cACA,kBACA,kBACA,cACA,cACA,YACA,WACA,cACA,cACA,SACA,WACA,WACA,WACA,UACA,UACA,YACA,eACA,eACA,aACA,aACA,aACA,UACA,WACA,SACA,YACA,cACA,WACA,YAEAC,aAAA,gBAEAC,aACAzT,IAAA,EACAoN,MAAA,GACAC,OAAA,GACAC,KAAA,IAEAoG,WAAA,IAAAD,YAAAnG,KAAAmG,YAAArG,MACAuG,YAAA,IAAAF,YAAAzT,IAAAyT,YAAApG,OAEAuG,UAAAjT,GAAAkT,SAAA,SAAA/R,GACA,MAAAA,GAAA8E,MACA0G,KACAwG,QAAAnT,GAAAwE,OAAA,QACAiM,WAAAzQ,GAAAwE,OAAA,KAGAwB,UAEA6H,EAAA7N,GAAAyB,MAAA2P,SACA7O,OAAA,EAAAwQ,aAEAlM,EAAA7G,GAAAyB,MAAA2P,SACA7O,OAAAyQ,YAAA,IAGA3B,MAAArR,GAAAyB,MAAA2R,aAEAC,WAAArT,GAAA6B,IAAAwL,OACA5L,MAAAoM,GACAL,WAAAiD,YACAnD,OAAA,UACAgG,cAAA,GAEAC,WAAAvT,GAAA6B,IAAAwL,OACA5L,MAAAoF,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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n$('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\n\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n        if (target.length) {\n            $('html,body').animate({\n                scrollTop: target.offset().top\n            }, 500);\n            return false;\n        }\n    }\n    // });\n\n\n});\n\n\n/////////////////////////////Accordion\n// $(function() {\n//     var icons = {\n//         header: \"iconClosed\",\n//         activeHeader: \"iconOpen\",\n//         hoverHeader: 'iconHover'\n\n//     };\n//     $(\"#accordion\").accordion({\n//         icons: icons,\n//         heightStyle: \"content\"\n//     });\n// });\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$('.js-play-video').click(function() {\n    var $target = $($(this).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        //for (i = 0; i < usStates.features.length; i++) {  \r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n                //return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);    \r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n            console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n        console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n"," var town_names = [\n     //\"massachusetts\",\n     \"abington\",\n     \"acton\",\n     \"acushnet\",\n     \"adams\",\n     \"agawam\",\n     \"alford\",\n     \"amesbury\",\n     \"amherst\",\n     \"andover\",\n     \"aquinnah\",\n     \"arlington\",\n     \"ashburnham\",\n     \"ashby\",\n     \"ashfield\",\n     \"ashland\",\n     \"athol\",\n     \"attleboro\",\n     \"auburn\",\n     \"avon\",\n     \"ayer\",\n     \"barnstable\",\n     \"barre\",\n     \"becket\",\n     \"bedford\",\n     \"belchertown\",\n     \"bellingham\",\n     \"belmont\",\n     \"berkley\",\n     \"berlin\",\n     \"bernardston\",\n     \"beverly\",\n     \"billerica\",\n     \"blackstone\",\n     \"blandford\",\n     \"bolton\",\n     \"boston\",\n     \"bourne\",\n     \"boxborough\",\n     \"boxford\",\n     \"boylston\",\n     \"braintree\",\n     \"brewster\",\n     \"bridgewater\",\n     \"brimfield\",\n     \"brockton\",\n     \"brookfield\",\n     \"brewster\",\n     \"bridgewater\",\n     \"brimfield\",\n     \"brockton\",\n     \"brookfield\",\n     \"brookline\",\n     \"buckland\",\n     \"burlington\",\n     \"cambridge\",\n     \"canton\",\n     \"carlisle\",\n     \"carver\",\n     \"charlemont\",\n     \"charlton\",\n     \"chatham\",\n     \"chelmsford\",\n     \"chelsea\",\n     \"cheshire\",\n     \"chester\",\n     \"chesterfield\",\n     \"chicopee\",\n     \"chilmark\",\n     \"clarksburg\",\n     \"clinton\",\n     \"cohasset\",\n     \"colrain\",\n     \"concord\",\n     \"conway\",\n     \"cummington\",\n     \"dalton\",\n     \"danvers\",\n     \"dartmouth\",\n     \"dedham\",\n     \"deerfield\",\n     \"dennis\",\n     \"dighton\",\n     \"douglas\",\n     \"dover\",\n     \"dracut\",\n     \"dudley\",\n     \"dunstable\",\n     \"duxbury\",\n     \"eastbridgewater\",\n     \"eastbrookfield\",\n     \"eastlongmeadow\",\n     \"eastham\",\n     \"easthampton\",\n     \"easton\",\n     \"edgartown\",\n     \"egremont\",\n     \"erving\",\n     \"essex\",\n     \"everett\",\n     \"fairhaven\",\n     \"fallriver\",\n     \"falmouth\",\n     \"fitchburg\",\n     \"florida\",\n     \"foxborough\",\n     \"framingham\",\n     \"franklin\",\n     \"freetown\",\n     \"gardner\",\n     \"gay head\",\n     \"georgetown\",\n     \"gill\",\n     \"gloucester\",\n     \"goshen\",\n     \"gosnold\",\n     \"grafton\",\n     \"granby\",\n     \"granville\",\n     \"greatbarrington\",\n     \"greenfield\",\n     \"groton\",\n     \"groveland\",\n     \"hadley\",\n     \"halifax\",\n     \"hamilton\",\n     \"hampden\",\n     \"hancock\",\n     \"hanover\",\n     \"hanson\",\n     \"hardwick\",\n     \"harvard\",\n     \"harwich\",\n     \"hatfield\",\n     \"haverhill\",\n     \"hawley\",\n     \"heath\",\n     \"hingham\",\n     \"hinsdale\",\n     \"holbrook\",\n     \"holden\",\n     \"holland\",\n     \"holliston\",\n     \"holyoke\",\n     \"hopedale\",\n     \"hopkinton\",\n     \"hubbardston\",\n     \"hudson\",\n     \"hull\",\n     \"huntington\",\n     \"ipswich\",\n     \"kingston\",\n     \"lakeville\",\n     \"lancaster\",\n     \"lanesborough\",\n     \"lawrence\",\n     \"lee\",\n     \"leicester\",\n     \"lenox\",\n     \"leominster\",\n     \"leverett\",\n     \"lexington\",\n     \"leyden\",\n     \"lincoln\",\n     \"littleton\",\n     \"longmeadow\",\n     \"lowell\",\n     \"ludlow\",\n     \"lunenburg\",\n     \"lynn\",\n     \"lynnfield\",\n     \"malden\",\n     \"manchester\",\n     \"mansfield\",\n     \"marblehead\",\n     \"marion\",\n     \"marlborough\",\n     \"marshfield\",\n     \"mashpee\",\n     \"mattapoisett\",\n     \"maynard\",\n     \"medfield\",\n     \"medford\",\n     \"medway\",\n     \"melrose\",\n     \"mendon\",\n     \"merrimac\",\n     \"methuen\",\n     \"middleborough\",\n     \"middlefield\",\n     \"middleton\",\n     \"milford\",\n     \"millbury\",\n     \"millis\",\n     \"millville\",\n     \"milton\",\n     \"monroe\",\n     \"monson\",\n     \"montague\",\n     \"monterey\",\n     \"montgomery\",\n     \"mountwashington\",\n     \"nahant\",\n     \"nantucket\",\n     \"natick\",\n     \"needham\",\n     \"newashford\",\n     \"newbedford\",\n     \"newbraintree\",\n     \"newmarlborough\",\n     \"newsalem\",\n     \"newbury\",\n     \"newburyport\",\n     \"newton\",\n     \"norfolk\",\n     \"westadams\",\n     \"westandover\",\n     \"westattleborough\",\n     \"westbrookfield\",\n     \"westreading\",\n     \"northampton\",\n     \"northborough\",\n     \"northbridge\",\n     \"northfield\",\n     \"norton\",\n     \"norwell\",\n     \"norwood\",\n     \"oak bluffs\",\n     \"oakham\",\n     \"orange\",\n     \"orleans\",\n     \"otis\",\n     \"oxford\",\n     \"palmer\",\n     \"paxton\",\n     \"peabody\",\n     \"pelham\",\n     \"pembroke\",\n     \"pepperell\",\n     \"peru\",\n     \"petersham\",\n     \"phillipston\",\n     \"pittsfield\",\n     \"plainfield\",\n     \"plainville\",\n     \"plymouth\",\n     \"plympton\",\n     \"princeton\",\n     \"provincetown\",\n     \"quincy\",\n     \"randolph\",\n     \"raynham\",\n     \"reading\",\n     \"rehoboth\",\n     \"revere\",\n     \"richmond\",\n     \"rochester\",\n     \"rockland\",\n     \"rockport\",\n     \"rowe\",\n     \"rowley\",\n     \"royalston\",\n     \"russell\",\n     \"rutland\",\n     \"salem\",\n     \"salisbury\",\n     \"sandisfield\",\n     \"sandwich\",\n     \"saugus\",\n     \"savoy\",\n     \"scituate\",\n     \"seekonk\",\n     \"sharon\",\n     \"sheffield\",\n     \"shelburne\",\n     \"sherborn\",\n     \"shirley\",\n     \"shrewsbury\",\n     \"shutesbury\",\n     \"somerset\",\n     \"somerville\",\n     \"southhadley\",\n     \"southampton\",\n     \"southborough\",\n     \"southbridge\",\n     \"southwick\",\n     \"spencer\",\n     \"springfield\",\n     \"sterling\",\n     \"stockbridge\",\n     \"stoneham\",\n     \"stoughton\",\n     \"stow\",\n     \"sturbridge\",\n     \"sudbury\",\n     \"sunderland\",\n     \"sutton\",\n     \"swampscott\",\n     \"swansea\",\n     \"taunton\",\n     \"templeton\",\n     \"tewksbury\",\n     \"tisbury\",\n     \"tolland\",\n     \"topsfield\",\n     \"townsend\",\n     \"truro\",\n     \"tyngsborough\",\n     \"tyringham\",\n     \"upton\",\n     \"uxbridge\",\n     \"wakefield\",\n     \"wales\",\n     \"walpole\",\n     \"waltham\",\n     \"ware\",\n     \"wareham\",\n     \"warren\",\n     \"warwick\",\n     \"washington\",\n     \"watertown\",\n     \"wayland\",\n     \"webster\",\n     \"wellesley\",\n     \"wellfleet\",\n     \"wendell\",\n     \"wenham\",\n     \"westboylston\",\n     \"westbridgewater\",\n     \"westbrookfield\",\n     \"westnewbury\",\n     \"westspringfield\",\n     \"weststockbridge\",\n     \"westtisbury\",\n     \"westborough\",\n     \"westfield\",\n     \"westford\",\n     \"westhampton\",\n     \"westminster\",\n     \"weston\",\n     \"westport\",\n     \"westwood\",\n     \"weymouth\",\n     \"whately\",\n     \"whitman\",\n     \"wilbraham\",\n     \"williamsburg\",\n     \"williamstown\",\n     \"wilmington\",\n     \"winchendon\",\n     \"winchester\",\n     \"windsor\",\n     \"winthrop\",\n     \"woburn\",\n     \"worcester\",\n     \"worthington\",\n     \"wrentham\",\n     \"yarmouth\"\n ];\n var current_town = \"massachusetts\";\n\n var margin_bsas = {\n         top: 0,\n         right: 50,\n         bottom: 30,\n         left: 50\n     },\n     width_bsas = 650 - margin_bsas.left - margin_bsas.right,\n     height_bsas = 400 - margin_bsas.top - margin_bsas.bottom;\n\n var bisectAge = d3.bisector(function(d) {\n     return d.age;\n }).left;\n var percent = d3.format(',.1%');\n var yearformat = d3.format(\"d\");\n // var min_age = 2005;\n // var fields = ['emp', 'edu', 'race', 'orig'];\n var groups = {};\n\n var x = d3.scale.linear()\n     .range([0, width_bsas]);\n\n var y = d3.scale.linear()\n     .range([height_bsas, 0]);\n // .domain([0, 6]);\n\n var color = d3.scale.category10();\n\n var xAxis_bsas = d3.svg.axis()\n     .scale(x)\n     .tickFormat(yearformat)\n     .orient(\"bottom\")\n     .outerTickSize(0);\n\n var yAxis_bsas = d3.svg.axis()\n     .scale(y)\n     .tickSize(width_bsas)\n     .orient(\"right\")\n     .tickFormat(percent);\n\n var line = d3.svg.line()\n     .x(function(d) {\n         return x(d.age);\n     })\n     .y(function(d) {\n         return y(d.value);\n     })\n     .defined(function(d) {\n         return y(d.value);\n     }) // Omit empty values.;\n\n\n\n var $lines_bsas = d3.select(\"#lines-bsas\").append(\"svg\")\n     .attr(\"width\", width_bsas + margin_bsas.left + margin_bsas.right)\n     .attr(\"height\", height_bsas + margin_bsas.top + margin_bsas.bottom)\n     .append(\"g\")\n     .attr(\"transform\", \"translate(\" + margin_bsas.left + \",\" + margin_bsas.top + \")\");\n\n d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\n     if (error) throw error;\n     //console.log(groups);\n     // var marriages = groups[current_town];\n\n     x.domain([2005, d3.max(data, function(d) {\n         return d.age;\n     })]);\n     y.domain([0, .99]);\n\n     $lines_bsas.append(\"g\")\n         .attr(\"class\", \"x axis_bsas\")\n         .attr(\"transform\", \"translate(0,\" + height_bsas + \")\")\n         .call(xAxis_bsas)\n         .append(\"text\")\n         .attr(\"x\", 635)\n         .attr(\"y\", 15)\n         .attr(\"text-anchor\", \"middle\")\n         .text(\"Year\");\n\n     $lines_bsas.append(\"g\")\n         .attr(\"class\", \"y axis_bsas\")\n         .call(yAxis_bsas)\n         .append(\"text\")\n         // .attr(\"y\", -30)\n         .style(\"text-anchor\", \"start\")\n         // .text(\"Substance Abuse\");\n     $lines_bsas.selectAll(\".y.axis_bsas text\").attr(\"x\", -43).attr(\"dy\", 0);\n\n     var legend_pos_text = -40,\n         legend_pos_dot = -50;\n\n\n     $lines_bsas.append(\"circle\")\n         .attr(\"class\", \"circle opioids\")\n         .attr(\"cx\", width_bsas + legend_pos_dot)\n         .attr(\"cy\", 25)\n         .attr(\"r\", 3);\n     $lines_bsas.append(\"g\")\n         .append(\"text\")\n         .attr(\"class\", \"focus opioids\")\n         .attr(\"x\", width_bsas + legend_pos_text)\n         .attr(\"y\", 28)\n         .text(\"opioids\");\n\n     $lines_bsas.append(\"circle\")\n         .attr(\"class\", \"circle alcohol\")\n         .attr(\"cx\", width_bsas + legend_pos_dot)\n         .attr(\"cy\", 40)\n         .attr(\"r\", 3);\n     $lines_bsas.append(\"g\")\n         .append(\"text\")\n         .attr(\"class\", \"focus alcohol\")\n         .attr(\"x\", width_bsas + legend_pos_text)\n         .attr(\"y\", 43)\n         .text(\"alcohol\");\n\n\n     $lines_bsas.append(\"circle\")\n         .attr(\"class\", \"circle marijuana\")\n         .attr(\"cx\", width_bsas + legend_pos_dot)\n         .attr(\"cy\", 55)\n         .attr(\"r\", 3);\n     $lines_bsas.append(\"g\")\n         .append(\"text\")\n         .attr(\"class\", \"focus marijuana\")\n         .attr(\"x\", width_bsas + legend_pos_text)\n         .attr(\"y\", 58)\n         .text(\"marijuana\");\n\n\n     $lines_bsas.append(\"circle\")\n         .attr(\"class\", \"circle other\")\n         .attr(\"cx\", width_bsas + legend_pos_dot)\n         .attr(\"cy\", 70)\n         .attr(\"r\", 3);\n     $lines_bsas.append(\"g\")\n         .append(\"text\")\n         .attr(\"class\", \"focus other\")\n         .attr(\"x\", width_bsas + legend_pos_text)\n         .attr(\"y\", 73)\n         .text(\"other\");\n\n\n     $lines_bsas.append(\"circle\")\n         .attr(\"class\", \"circle none\")\n         .attr(\"cx\", width_bsas + legend_pos_dot)\n         .attr(\"cy\", 82)\n         .attr(\"r\", 3);\n     $lines_bsas.append(\"g\")\n         .append(\"text\")\n         .attr(\"class\", \"focus none\")\n         .attr(\"x\", width_bsas + legend_pos_text)\n         .attr(\"y\", 88)\n         .text(\"none\");\n\n     // Alcohol line\n     $lines_bsas.append(\"path\")\n         .attr(\"class\", \"line alcohol\")\n         .attr(\"d\", function(d) {\n             return line(groups[current_town + \"alcohol\"].values);\n         });\n\n     //alcohol circle\n     for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n         var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n         var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n         if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \n             //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n             $lines_bsas.append(\"circle\")\n                 .attr(\"class\", function(d) {\n                     return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                 })\n                 .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                 .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                 .attr(\"r\", 3)\n         }\n     }\n\n     // Marijuana line\n     $lines_bsas.append(\"path\")\n         .attr(\"class\", \"line marijuana\")\n         .attr(\"d\", function(d) {\n             return line(groups[current_town + \"marijuana\"].values);\n         });\n     // Marijuana circle\n     for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n         var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n         var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n         if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \n             //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n             $lines_bsas.append(\"circle\")\n                 .attr(\"class\", function(d) {\n                     return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                 })\n                 .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                 .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                 .attr(\"r\", 3)\n         }\n     }\n\n     // None line\n     $lines_bsas.append(\"path\")\n         .attr(\"class\", \"line none\")\n         .attr(\"d\", function(d) {\n             return line(groups[current_town + \"none\"].values);\n         });\n     // None circle\n     for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n         var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n         var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n         if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \n             //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n             $lines_bsas.append(\"circle\")\n                 .attr(\"class\", function(d) {\n                     return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n                 })\n                 .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n                 .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n                 .attr(\"r\", 3)\n         }\n     }\n\n     // Opioids line\n     $lines_bsas.append(\"path\")\n         .attr(\"class\", \"line opioids\")\n         .attr(\"d\", function(d) {\n             return line(groups[current_town + \"opioids\"].values);\n         });\n     // Opioids circle\n     for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n         var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n         var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n         if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \n             //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n             $lines_bsas.append(\"circle\")\n                 .attr(\"class\", function(d) {\n                     return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                 })\n                 .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                 .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                 .attr(\"r\", 3)\n         }\n     }\n\n     // Other line\n     $lines_bsas.append(\"path\")\n         .attr(\"class\", \"line other\")\n         .attr(\"d\", function(d) {\n             return line(groups[current_town + \"other\"].values);\n         });\n     // Other circle\n     for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n         var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n         var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n         if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \n             // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n             $lines_bsas.append(\"circle\")\n                 .attr(\"class\", function(d) {\n                     return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                 })\n                 .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                 .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                 .attr(\"r\", 3)\n         }\n     }\n\n     // Autocomplete\n\n     $(\".btn-bsas\").addClass('active');\n     d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n         current_town = d3.select(this).attr(\"data-val\");\n         update();\n         $(\"#tags\").val('');\n     });\n\n\n     $(\"#tags\").autocomplete({\n         source: function(request, response) {\n             var matches = $.map(town_names, function(acItem) {\n                 if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                     return acItem;\n                 }\n             });\n             response(matches);\n             //$(\"#tags\").focus(function() {\n                 // if (matches.length == 1) {\n                 //     current_town = matches[0];\n                 //     $(\".btn-bsas\").removeClass('active');\n                 //     update();\n                 // }\n             //});\n             //console.log(matches);\n         },\n         select: function(event, ui) {\n             current_town = ui.item.value;\n             $(\".btn-bsas\").removeClass('active');\n             update();\n         }\n     });\n\n     function update() {\n\n         // marriages = groups[current_town];\n         //update alcohol line\n         $lines_bsas.select(\".line.alcohol\")\n             .transition()\n             .duration(600)\n             .delay(180)\n             .attr(\"d\", function(d) {\n                 return line(groups[current_town + \"alcohol\"].values);\n             });\n\n         //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n         //update alcohol circles\n         for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n             var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                 // console.log(string_select);\n\n             if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"cx\", function(d) {\n                         return x(groups[current_town + \"alcohol\"].values[i].age)\n                     })\n                     .attr(\"cy\", function(d) {\n                         return y(groups[current_town + \"alcohol\"].values[i].value)\n                     })\n                     .attr(\"r\", 3)\n             } else {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"r\", 0)\n             }\n\n         }\n\n\n\n         //marijuana\n         $lines_bsas.select(\".line.marijuana\")\n             .transition()\n             .duration(600)\n             .attr(\"d\", function(d) {\n                 return line(groups[current_town + \"marijuana\"].values);\n             });\n         //update marijuana circles\n         for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n             var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                 //console.log(string_select);\n\n             if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"cx\", function(d) {\n                         return x(groups[current_town + \"marijuana\"].values[i].age)\n                     })\n                     .attr(\"cy\", function(d) {\n                         return y(groups[current_town + \"marijuana\"].values[i].value)\n                     })\n                     .attr(\"r\", 3)\n             } else {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"r\", 0)\n             }\n\n         }\n\n         //none\n         $lines_bsas.select(\".line.none\")\n             .transition()\n             .duration(600)\n             .attr(\"d\", function(d) {\n                 return line(groups[current_town + \"none\"].values);\n             });\n         //update none circles\n         for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n             var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n             var value_select = groups[current_town + \"none\"].values[i].value\n                 // console.log(string_select);\n                 // console.log(value_select);\n                 // console.log(value_select >= 0);\n\n             if (groups[current_town + \"none\"].values[i].value >= 0) {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"cx\", function(d) {\n                         return x(groups[current_town + \"none\"].values[i].age)\n                     })\n                     .attr(\"cy\", function(d) {\n                         return y(groups[current_town + \"none\"].values[i].value)\n                     })\n                     .attr(\"r\", 3);\n             } else {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"r\", 0);\n             }\n\n         }\n\n         //opioids\n         $lines_bsas.select(\".line.opioids\")\n             .transition()\n             .duration(600)\n             .attr(\"d\", function(d) {\n                 return line(groups[current_town + \"opioids\"].values);\n             });\n         //update opioids circles\n         for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n             var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n             var value_select = groups[current_town + \"opioids\"].values[i].value\n                 //console.log(string_select);\n                 //console.log(value_select);\n                 //console.log(value_select >= 0);\n\n             if (value_select >= 0) {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"cx\", function(d) {\n                         return x(groups[current_town + \"opioids\"].values[i].age)\n                     })\n                     .attr(\"cy\", function(d) {\n                         return y(groups[current_town + \"opioids\"].values[i].value)\n                     })\n                     .attr(\"r\", 3);\n             } else {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"r\", 0);\n             }\n\n         }\n\n         //other\n         $lines_bsas.select(\".line.other\")\n             .transition()\n             .duration(600)\n             .attr(\"d\", function(d) {\n                 return line(groups[current_town + \"other\"].values);\n             });\n         //update other circles\n         for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n             var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n             var value_select = groups[current_town + \"other\"].values[i].value\n                 // console.log(string_select);\n                 // console.log(value_select);\n                 // console.log(value_select >= 0);\n\n             if (value_select >= 0) {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"cx\", function(d) {\n                         return x(groups[current_town + \"other\"].values[i].age)\n                     })\n                     .attr(\"cy\", function(d) {\n                         return y(groups[current_town + \"other\"].values[i].value)\n                     })\n                     .attr(\"r\", 3);\n             } else {\n                 $lines_bsas.selectAll(string_select)\n                     .transition()\n                     .duration(600)\n                     .attr(\"r\", 0);\n             }\n\n         }\n\n     }\n\n\n\n\n     // alcohol\n     var focusalcohol = $lines_bsas.append(\"g\")\n         .attr(\"class\", \"focus alcohol\")\n         .style(\"display\", \"none\");\n     focusalcohol.append(\"circle\")\n         .attr(\"r\", 3);\n     focusalcohol.append(\"text\")\n         .attr(\"x\", 9)\n         .attr(\"dy\", \".35em\");\n\n     // marijuana\n     var focusmarijuana = $lines_bsas.append(\"g\")\n         .attr(\"class\", \"focus marijuana\")\n         .style(\"display\", \"none\");\n     focusmarijuana.append(\"circle\")\n         .attr(\"r\", 3);\n     focusmarijuana.append(\"text\")\n         .attr(\"x\", 9)\n         .attr(\"dy\", \".35em\");\n\n     // none\n     var focusnone = $lines_bsas.append(\"g\")\n         .attr(\"class\", \"focus none\")\n         .style(\"display\", \"none\");\n     focusnone.append(\"circle\")\n         .attr(\"r\", 3);\n     focusnone.append(\"text\")\n         .attr(\"x\", 9)\n         .attr(\"dy\", \".35em\");\n\n     // opioids\n     var focusopioids = $lines_bsas.append(\"g\")\n         .attr(\"class\", \"focus opioids\")\n         .style(\"display\", \"none\");\n     focusopioids.append(\"circle\")\n         .attr(\"r\", 3);\n     focusopioids.append(\"text\")\n         .attr(\"x\", 9)\n         .attr(\"dy\", \".35em\");\n\n     // none\n     var focusother = $lines_bsas.append(\"g\")\n         .attr(\"class\", \"focus other\")\n         .style(\"display\", \"none\");\n     focusother.append(\"circle\")\n         .attr(\"r\", 3);\n     focusother.append(\"text\")\n         .attr(\"x\", 9)\n         .attr(\"dy\", \".35em\");\n\n     // Events\n     $lines_bsas.append(\"rect\")\n         .attr(\"class\", \"overlay\")\n         .attr(\"width\", width_bsas)\n         .attr(\"height\", height_bsas)\n         .on(\"mouseover\", function() {\n             focusmarijuana.style(\"display\", null);\n             focusalcohol.style(\"display\", null);\n             focusnone.style(\"display\", null);\n             focusopioids.style(\"display\", null);\n             focusother.style(\"display\", null);\n             //focusage.style(\"display\", null);\n         })\n         .on(\"mouseout\", function() {\n             focusmarijuana.style(\"display\", \"none\");\n             focusalcohol.style(\"display\", \"none\");\n             focusnone.style(\"display\", \"none\");\n             focusopioids.style(\"display\", \"none\");\n             focusother.style(\"display\", \"none\");\n             //focusage.style(\"display\", \"none\");\n         })\n         .on(\"mousemove\", mousemove);\n\n     function mousemove() {\n\n\n\n         var x0 = x.invert(d3.mouse(this)[0])\n\n         // Alcohol\n         var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n             d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n             d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n             d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n         if (d_alcohol.value >= 0) {\n             focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n             focusalcohol.select(\"text\").text(percent(d_alcohol.value));\n             focusalcohol.select(\"circle\").attr(\"r\", 4);\n         } else {\n             focusalcohol.select(\"circle\").attr(\"r\", 0);\n             focusalcohol.select(\"text\").text(\"\");\n         }\n\n         // Marijuana\n\n         var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n             d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n             d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n             d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n         // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n         // console.log(d_marijuana.value >= 0);\n\n         if (d_marijuana.value >= 0) {\n             focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n             focusmarijuana.select(\"text\").text(percent(d_marijuana.value));\n             focusmarijuana.select(\"circle\").attr(\"r\", 4);\n         } else {\n             focusmarijuana.select(\"circle\").attr(\"r\", 0);\n             focusmarijuana.select(\"text\").text(\"\");\n         }\n\n         // None\n\n         var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n             d0_none = groups[current_town + \"none\"].values[i_none - 1],\n             d1_none = groups[current_town + \"none\"].values[i_none],\n             d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n         if (d_none.value >= 0) {\n             focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n             focusnone.select(\"text\").text(percent(d_none.value));\n             focusnone.select(\"circle\").attr(\"r\", 4);\n         } else {\n             focusnone.select(\"circle\").attr(\"r\", 0);\n             focusnone.select(\"text\").text(\"\");\n         }\n\n\n         // Opioids\n         var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n             d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n             d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n             d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n         if (d_opioids.value >= 0) {\n             focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n             focusopioids.select(\"text\").text(percent(d_opioids.value));\n             focusopioids.select(\"circle\").attr(\"r\", 4);\n         } else {\n             focusopioids.select(\"circle\").attr(\"r\", 0);\n             focusopioids.select(\"text\").text(\"\");\n         }\n\n\n         // other\n         var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n             d0_other = groups[current_town + \"other\"].values[i_other - 1],\n             d1_other = groups[current_town + \"other\"].values[i_other],\n             d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n         //console.log(d_other.value);\n\n         if (d_other.value >= 0) {\n             focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n             focusother.select(\"text\").text(percent(d_other.value));\n             focusother.select(\"circle\").attr(\"r\", 4);\n         } else {\n             focusother.select(\"circle\").attr(\"r\", 0);\n             focusother.select(\"text\").text(\"\");\n         }\n\n\n         // Adjust label horizontal positions.\n         if (x0 > 80) {\n             focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n         } else {\n             focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n         }\n\n\n\n     }\n\n }); // @end d3.tsv()\n\n\n function type(d, i) {\n\n     d3.keys(d).forEach(function(key) {\n         d[key] = +d[key];\n         if (key != 'age') {\n             if (!(key in groups)) {\n                 groups[key] = {\n                     'values': [{\n                         age: d.age,\n                         value: d[key]\n                     }]\n                 };\n             } else {\n                 groups[key]['values'].push({\n                     age: d.age,\n                     value: d[key]\n                 });\n             }\n         }\n     });\n\n     return d;\n\n }\n","dataset = [\n    { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\n    { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\n    { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\n    { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\n];\n\nvar color = d3.scale.ordinal()\n    .range([\"#2166ac\", \"#92c5de\"]);\nvar margin = { top: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10), right: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 20), bottom: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 5), left: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10) },\n    width = parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) - margin.left - margin.right,\n    height = parseInt(d3.select('#race_ethnicity_chart').style('height'), 10) - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\n//var colorRange = d3.scale.category20();\n//var color = d3.scale.ordinal()\n//.range(colorRange.range());\n\n\n\nvar xAxis_bars = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis_bars = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".0f\"));\n\nvar divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").attr(\"class\", \"tooltip_raceeth\");\n\n\nvar $bars_race = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n\n\nvar options = d3.keys(dataset[0]).filter(function(key) {\n    return key !== \"raceth\";\n});\n\ndataset.forEach(function(d) {\n    d.values = options.map(function(name) {\n        return { name: name, value: +d[name] };\n    });\n});\n\nx0.domain(dataset.map(function(d) {\n    return d.raceth;\n}));\nx1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\ny.domain([0, d3.max(dataset, function(d) {\n    return d3.max(d.values, function(d) {\n        return d.value;\n    });\n})]);\n\n$bars_race.append(\"g\")\n    .attr(\"class\", \"x axis-race\")\n    .attr(\"transform\", \"translate(10,\" + height + \")\")\n    .call(xAxis_bars)\n    .selectAll(\".tick text\")\n    .call(wrap, x0.rangeBand());\n\n$bars_race.append(\"g\")\n    .attr(\"class\", \"y axis-race\")\n    .call(yAxis_bars)\n    .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", -35)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Age Adjusted Rates per 100,000\");\n\nvar bar = $bars_race.selectAll(\".bar\")\n    .data(dataset)\n    .enter().append(\"g\")\n    .attr(\"class\", \"rect\")\n    .attr(\"transform\", function(d) {\n        return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n    });\n\n\nbar.selectAll(\"rect\")\n    .data(function(d) {\n        return d.values;\n    })\n    .enter().append(\"rect\")\n    .attr(\"width\", x1.rangeBand())\n    .attr(\"x\", function(d) {\n        return x1(d.name) + 5;\n    })\n    .attr(\"y\", function(d) {\n        return y(d.value);\n    })\n    .attr(\"value\", function(d) {\n        return d.name;\n    })\n    .attr(\"height\", function(d) {\n        return height - y(d.value);\n    })\n    .style(\"fill\", function(d) {\n        return color(d.name);\n    })\n    .style(\"fill\", function(d) {\n        return color(d.name);\n    });\n\n//bar.on(\n//\"mouseover\", function(){ \n//d3.select(this).attr(\"fill\",\"red !important\");\n//});\n\nbar\n    .on(\"mousemove\", function(d) {\n        divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n        divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n        divtooltip_raceeth.style(\"display\", \"inline-block\");\n        var x = d3.event.pageX,\n            y = d3.event.pageY\n        var elements = document.querySelectorAll(':hover');\n        l = elements.length\n        l = l - 1\n        elementData = elements[l].__data__\n            //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n        divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n    });\n\nbar\n    .on(\"mouseout\", function(d) {\n        divtooltip_raceeth.style(\"display\", \"none\");\n    });\n\n\n\nvar legend = $bars_race.selectAll(\".legend\")\n    .data(options.slice())\n    .enter().append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", function(d, i) {\n        return \"translate(0,\" + i * 20 + \")\";\n    });\n\nlegend.append(\"rect\")\n    .attr(\"x\", width - 18)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .style(\"fill\", color);\n\nlegend.append(\"text\")\n    .attr(\"x\", width - 24)\n    .attr(\"y\", 9)\n    .attr(\"dy\", \".35em\")\n    .style(\"text-anchor\", \"end\")\n    .text(function(d) {\n        return d;\n    });\n\nfunction wrap(text, width) {\n    text.each(function() {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n}\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","/* global d3, $, queue */\n// Dependency on queue.js\n\n(function() {\n    \"use strict\";\n\n    // Heights & Widths\n    var legendHeight = 60,\n\tlegendWidth = '100%',\n\tmapWidth = 600,\n\tmapHeight = 400;\n\n    var currentyear;\n    var svgContainer;\n    var opChgScale;\n\n    // Helper functions\n\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n\n\n    function initialize() {\n\tqueue()\n\t//should be town polym data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.json, \"us_states_5m.geo.json\")\n\t//should be opioid death data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.csv, \"us_pop.csv\")\n\t.awaitAll(generateMap);\n    }\n\n    function generateMap(error, results) {\n\n\tvar maTowns = results[0];\n\tvar maOpioid = results[1];\n\n\n\t$('.controls-map').click(function() {\n\t    $(\"#odMap_timeline\").val($(this).data('select'));\n\t    setSymbology($(this).data('select'));\n\t});\n\n\tfor (var i = 0; i < maTowns.features.length; i++) {\n\t    if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\n\t\tconsole.log('ASSERT failure for index: ' + i);\n\t\tconsole.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n\t\t// alert('Input data corrupted: generation of map terminated.');\n\t\treturn;\n            }\n\t    maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n\t}\n\n\tsvgContainer = d3.select(\"#odMap_map\")\n\t    .classed(\"svg-container\", true) //container class to make it responsive\n\t    .append(\"svg\")\n\t    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n\t    .attr(\"viewBox\", \"0 0 \"+mapWidth+\" \"+mapHeight)\n\t    //class to make it responsive\n\t    .classed(\"svg-content-responsive\", true)\n\t    .style(\"border\", \"0px solid steelblue\");\n\n\tvar tooltip = d3.select('#odMap_map').append('div')\n\t    .attr('class', 'hidden tooltip');\n\n\t//#eff3ff\n\n\topChgScale = d3.scale.threshold()\n\t    .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\n\t    .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\n\topChgScale.domainStrings = function() {\n\t    return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64'\n\t    ]);\n\t};\n\n\n\tvar projection = d3.geo.conicConformal()\n\t    .parallels([41 + 43 / 60, 42 + 41 / 60])\n\t    .rotate([71 + 30 / 60, -41])\n\t    .scale([10000])\n\t    .translate([mapWidth/1.8, mapHeight*1.1]);\n\n\tvar geoPath = d3.geo.path()\n\t    .projection(projection);\n\n\tsvgContainer.selectAll(\"path\")\n\t    .data(maTowns.features)\n\t    .enter()\n\t    .append(\"path\")\n\t    .classed(\"deathmap\", true)\n\t    .attr(\"d\", function(d, i) {\n\t\treturn geoPath(d);\n\t    })\n\t    .style(\"stroke\", \"#2f363d\")\n\t    .style(\"stroke-width\", \"0.1px\")\n\t    .style(\"fill\", \"white\")\n\t    .on('mousemove', function(d) {\n\t\tvar mouse = d3.mouse(svgContainer.node()).map(function(d) {\n\t\t    return parseInt(d);\n\t\t});\n\n\t\tvar style = 'left:'+((100*mouse[0]/mapWidth)+3)+'% !important;top:'+(100*mouse[1]/mapHeight)+'% !important;';\n\t\t// Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\n\t\tvar transformX= mouse[0] > mapWidth/2 ? '-160%' : 0,\n\t\t    transformY= mouse[1] > mapHeight/2 ? '-100%' : 0;\n\t\tstyle += 'transform: translate('+transformX+','+transformY+');white-space:nowrap;';\n\n\t\tvar string_base = \"yr\";\n\t\tvar currentvalue = string_base.concat(currentyear);\n\t\tvar currentrate;\n\n\t\tif (d.properties[currentvalue] > 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else if (d.properties[currentvalue] === 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else {\n\t\t    currentrate = \"N/A*\";\n\t\t}\n\n\t\ttooltip.classed('hidden', false)\n\t\t    .attr('style', style)\n\t\t    .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\n\t    })\n\n\t    .on('mouseover', function(d, i) {\n\t\td3.select(this).style('fill-opacity', 0.25)\n\t\t    .style(\"stroke\", \"white\")\n\t\t    .style(\"stroke-width\", \"2px\");\n\t    })\n\t    .on('mouseout', function(d, i) {\n\t\ttooltip.classed('hidden', true);\n\t\td3.selectAll('path.deathmap')\n\t\t    .style(\"fill-opacity\", 1)\n\t\t    .style(\"stroke\", \"#2f363d\")\n\t\t\t.style(\"stroke-width\", \"0.1px\");\n\t    });\n\n\n\tgetYear();\n\tgenerateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\n\n\n    } // generateMap\n\n    function getYear() {\n        setSymbology(2000);\n        $(\"#odMap_timeline\").on('input change', function() {\n            setSymbology($(this).val());\n        });\n    }\n\n    function setSymbology(year) {\n\n        var szAttr = 'yr' + year;\n        currentyear = year;\n        $('#odMap_titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\n        $('#odMap_fromYear').html(year);\n\n        $('#odMap_source').html('Sources: Massachusetts Department of Public Health,' +\n                             '<br>Massachusetts Registry of Vital Records and Statistics</>');\n\n        svgContainer.selectAll(\"path.deathmap\")\n            .transition()\n            .duration(500)\n            .style(\"fill\", function(d, i) {\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n            });\n    }\n\n    function generateLegend(scale, szDivId, szCaption) {\n\n        var svg = d3.select('#' + szDivId).append(\"svg\")\n\t    .attr(\"width\", legendWidth)\n\t    .attr(\"height\", legendHeight);\n\n        var g = svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        //legendData.push({\n            //d: -9999,\n            //r: '#f1f1f1',\n            //s: 'N/A'\n        //});\n\tfor (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n\tvar unitWidth = 100/legendData.length;\n\n        g.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n\t    .attr(\"height\", legendHeight/3)\n\t    .attr(\"width\", function(d, i) {\n\t\treturn unitWidth+'%';\n\t    })\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        g.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + (unitWidth/2) + '%';\n            })\n\t    .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            })\n            .style(\"font-size\", \"12px\");\n\n        g.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    } // generateLegend()\n\n\n    $(document).ready(initialize);\n})();\n\n\n\n\n\n\n\n// ///////////////////Map Composite\n\n\n\n\n\n\n\n\n\n\n// function app2() {\n//     queue()\n//     //should be town polym data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\n//     //should be opioid death data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.csv, \"us_pop.csv\")\n//     .awaitAll(generateMap2);\n// }\n\n// function generateMap2(error, results) {\n//     $('.controls-map').click(function() {\n//         $(\"#timeline\").val($(this).data('select'));\n//         setSymbology2($(this).data('select'));\n//     });\n\n//     var maTowns = results[0];\n//     var maOpioid = results[1];\n\n//     var currentyear\n\n//     var i;\n//     for (i = 0; i < maTowns.features.length; i++) {\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\n//             // console.log('ASSERT failure for index: ' + i);\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n//             alert('Input data corrupted: generation of map terminated.');\n//             return;\n//         }\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n//     }\n\n//     var width = 960,\n//         height = 450;\n\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"0px solid steelblue\");\n\n//     var tooltip2 = d3.select('#map2').append('div')\n//         .attr('class', 'hidden tooltip2');\n\n//     var opChgScale = d3.scale.threshold()\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\n//         .range(colorbrewer.RdPu[5]);\n//     opChgScale.domainStrings = function() {\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\n//             '15.9-31.5', '>31.5'\n//         ]);\n//     };\n\n//     function toTitleCase(str) {\n//         return str.replace(/\\w\\S*/g, function(txt) {\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n//         });\n//     }\n\n//     var projection = d3.geo.conicConformal()\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\n//         .rotate([71 + 30 / 60, -41])\n//         .scale([10000])\n//         .translate([330, 480]);\n\n//     var geoPath = d3.geo.path()\n//         .projection(projection);\n\n//     var map = svgContainer.selectAll(\"path\")\n//         .data(maTowns.features)\n//         .enter()\n//         .append(\"path\")\n//         .attr(\"d\", function(d, i) {\n//             return geoPath(d);\n//         })\n//         .on('mousemove', function(d) {\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\n//                 return parseInt(d);\n//             });\n//             var string_base = \"yr\"\n//             currentvalue = string_base.concat(currentyear);\n//             var currentrate\n\n//             if (d.properties[currentvalue] > 0) {\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\n//             } else if (d.properties[currentvalue] == 0) {\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n//             } else {\n//                 currentrate = \"N/A*\";\n//             }\n\n\n//             tooltip2.classed('hidden', false)\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\n//         })\n//         .on('mouseover', function(d, i) {\n\n//             var currentState = this;\n//             d3.select(this).style('fill-opacity', 0.25)\n//                 .style(\"stroke\", \"white\")\n//                 .style(\"stroke-width\", \"2px\");\n//         })\n//         .on('mouseout', function(d, i) {\n//             tooltip2.classed('hidden', true);\n//             d3.selectAll('path')\n//                 .style(\"fill-opacity\", 1)\n//                 .style(\"stroke\", \"#2f363d\")\n//                 .style(\"stroke-width\", \"0.1px\");\n//         })\n//         .style(\"stroke\", \"#2f363d\")\n//         .style(\"stroke-width\", \"0.1px\")\n//         .style(\"fill\", \"white\")\n//         .on('mouseenter', function(d, i) {\n\n//             //var string_base = \"yr\"\n//             //currentvalue = string_base.concat(currentyear);\n//             //console.log(d.properties[currentvalue]);\n//         })\n//         .on('mouseleave', function(d) {\n\n//         });\n\n//     var aYears = [\n//         [2000, 2001],\n//         [2001, 2002],\n//         [2002, 2003],\n//         [2003, 2004],\n//         [2004, 2005],\n//         [2005, 2006],\n//         [2006, 2007],\n//         [2007, 2008],\n//         [2008, 2009],\n//         [2010, 2011],\n//         [2011, 2012],\n//         [2012, 2013],\n//         [2013, 2014],\n//         [2014, 2014.5]\n//     ];\n\n//     var index = 0;\n//     getYear();\n\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\n\n//     function getYear() {\n//         setSymbology2(2000);\n//         $(\"#timeline\").on('input change', function() {\n//             var year = $(this).val()\n//             setSymbology2($(this).val());\n//         });\n//     };\n\n\n//     function setSymbology2(year) {\n\n//         var szAttr = 'yr' + year;\n//         currentyear = year\n//         var toyear = eval(year) + 1\n\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\n//         $('#fromYear2').html(year);\n//         $('#titleMidfix2').html('to');\n//         $('#toYear2').html(toyear).append('<span>*</span>');\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\n//                             '<br />Executive Office of Health and Human Services'+\n//                             '<br />(Registry of Vital Records and Statistics,' +\n//                             '<br />Massachusetts Department of Public Health)');\n\n\n\n//         svgContainer.selectAll(\"path\")\n//             .transition()\n//             .duration(500)\n//             .style(\"fill\", function(d, i) {\n\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n//             });\n//     }\n\n//     function generateLegend2(scale, szDivId, szCaption) {\n//         var width2 = 550,\n//             height2 = 80;\n\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\n//             .attr(\"width\", width2)\n//             .attr(\"height\", height2);\n\n//         var g = svg.append(\"g\");\n\n//         // Create data array.\n//         var legendData = [];\n//         legendData.push({\n//             d: -9999,\n//             r: '#f1f1f1',\n//             s: 'N/A'\n//         });\n//         var i;\n//         for (i = 0; i < scale.domain().length; i++) {\n//             legendData.push({\n//                 d: scale.domain()[i],\n//                 r: scale.range()[i],\n//                 s: scale.domainStrings()[i]\n//             });\n//         }\n\n//         g.selectAll(\"rect\")\n//             .data(legendData)\n//             .enter().append(\"rect\")\n//             .attr(\"height\", 20)\n//             .attr(\"width\", 50)\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 20)\n//             .style(\"stroke\", \"black\")\n//             .style(\"stroke-width\", \"0.25px\")\n//             .style(\"fill\", function(d, i) {\n//                 return d.r;\n//             });\n\n//         g.selectAll(\"text\")\n//             .data(legendData)\n//             .enter().append(\"text\")\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 60)\n//             .text(function(d, i) {\n//                 return d.s;\n//             })\n//             .style(\"font-size\", \"12px\");\n\n//         g.append(\"text\")\n//             .attr(\"class\", \"caption\")\n//             .attr(\"y\", 12)\n//             .text(szCaption);\n//     } // generateLegend2()\n// } // generateMap2\n","var Vis = (function(d3) {\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([7500])\n        .translate([250, 350]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6]);\n\n\n\n    function visualize(error, states, data) {\n\n        var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper\n                .append('div')\n                .style({\n                    width: width + 'px',\n                    height: height + 'px'\n                });\n\n            createMap(wrapper, states, data)\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('p')\n            .text(data.key)\n            .attr('class', 'legend');\n        wrapper.append('p2')\n            .text(\"\")\n            .attr('class', 'legend');\n\n        wrapper.append('y');\n\n        var $maps_sub = wrapper.append('svg')\n            .attr({\n                width: width,\n                height: height\n            });\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n                self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\n            '>35-60%', '>60-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n            .attr(\"width\", 50)\n            .attr(\"x\", function(d, i) {\n                return i * 55;\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr(\"x\", function(d, i) {\n                return i * 55;\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            })\n            .style(\"font-size\", \"12px\");\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n})(d3);\n","/*======================================================================\r\n MultiLines\r\n ======================================================================*/\r\nvar margin = {\r\n    top: 20,\r\n    right: 20,\r\n    bottom: 50,\r\n    left: 50,\r\n};\r\n\r\nvar width = 600;\r\nvar height = 400;\r\n\r\nvar MDG = 29;\r\n\r\nvar Massachusetts = [\"MA\"];\r\nvar UnitedStates = [\"USA\"];\r\n\r\n//Set up date formatting and years\r\nvar dateFormat = d3.time.format(\"%Y\");\r\n\r\n//Set up scales\r\nvar xScale = d3.time.scale()\r\n    .range([margin.left, width - margin.right - margin.left]);\r\n\r\nvar yScale = d3.scale.sqrt()\r\n    .range([margin.top, height - margin.bottom]);\r\n\r\n//Configure axis generators\r\nvar xAxis_death = d3.svg.axis()\r\n    .scale(xScale)\r\n    .orient(\"bottom\")\r\n    .ticks(15)\r\n    .tickFormat(function(d) {\r\n        return dateFormat(d);\r\n    })\r\n    .innerTickSize([8]);\r\n\r\nvar yAxis_death = d3.svg.axis()\r\n    .scale(yScale)\r\n    .orient(\"left\")\r\n    .innerTickSize([8]);\r\n\r\n//defines a function to be used to append the title to the tooltip.  you can set how you want it to display here.\r\n//var maketip = function(d) {\r\n//    var tip = '<p class=\"tip3\">' + d.name + '<p class=\"tip1\">' + NumbType(d.value) + '</p> <p class=\"tip3\">' + formatDate(d.date) + '</p>';\r\n//    return tip;\r\n//}\r\n\r\n// add a tooltip to the page - not to the svg itself!\r\nvar tooltip_death = d3.select(\"#deathLines\")\r\n    .append(\"div\")\r\n    .attr(\"class\", \"lines-tooltip\");\r\n\r\n//Configure line\r\n// each line dataset must have a d.year and a d.rate for this to work.\r\nvar line_death = d3.svg.line()\r\n    .x(function(d) {\r\n        return xScale(dateFormat.parse(d.year));\r\n    })\r\n    .y(function(d) {\r\n        return yScale(+d.rate)\r\n    })\r\n    .defined(function(d) {\r\n        return yScale(+d.rate); });\r\n\r\n//Create the empty SVG image\r\nvar $lines_death = d3.select(\"#deathLines\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height);\r\n\r\n/*======================================================================\r\n   Creating the Multiple Lines from the Data\r\n ======================================================================*/\r\n\r\n//Load data - first is opioid mortality rates.\r\nd3.csv(\"js/data/death_states.csv\", function(data) {\r\n    var years = d3.keys(data[0]).slice(1, 65); //\r\n    //console.log(years);\r\n\r\n    //Create a new, empty array to hold our restructured dataset\r\n    var dataset = [];\r\n\r\n    //Loop once for each row in data\r\n    data.forEach(function(d, i) {\r\n\r\n        var OMRs = [];\r\n\r\n        years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n\r\n\r\n            if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n\r\n                OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                    year: y,\r\n                    rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                    Geography: d.Geography,\r\n                    FullName: d.FullName\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n            Geography: d.Geography,\r\n            FullName: d.FullName,\r\n            rates: OMRs // we just built this from the current index.\r\n        });\r\n\r\n    });\r\n    //Set scale domains - max and min of the years\r\n    xScale.domain(\r\n        d3.extent(years, function(d) {\r\n            return dateFormat.parse(d);\r\n        }));\r\n\r\n    // max of rates to 0 (reversed, remember)\r\n    yScale.domain([\r\n        d3.max(dataset, function(d) {\r\n            return d3.max(d.rates, function(d) {\r\n                return +d.rate;\r\n            });\r\n        }),\r\n        0\r\n    ]);\r\n\r\n\r\n    //Make a group for each Geography\r\n    var groups = $lines_death.selectAll(\"g.lines-death\")\r\n        .data(dataset)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"lines-death\");\r\n\r\n    //Within each group, create a new line/path,\r\n    //binding just the rates data to each one\r\n    groups.selectAll(\"path\")\r\n        .data(function(d) { // because there's a group with data already...\r\n            return [d.rates]; // it has to be an array for the line function\r\n        })\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"class\", \"line-death\")\r\n        .classed(\"massachusetts\", function(d, i) {\r\n            //console.log(d[i].Geography);\r\n            if ($.inArray(d[i].Geography, Massachusetts) != -1) {\r\n                //console.log(\"true\");\r\n                return true;\r\n            } else {\r\n                //console.log(\"false\");\r\n                return false;\r\n            }\r\n        })\r\n        .classed(\"usa\", function(d, i) {\r\n            //console.log(d[i].Geography);\r\n            if ($.inArray(d[i].Geography, UnitedStates) != -1) {\r\n                //console.log(\"true\");\r\n                return true;\r\n            } else {\r\n                //console.log(\"false\");\r\n                return false;\r\n            }\r\n        })\r\n        .attr(\"d\", line_death);\r\n\r\n\r\n    /*======================================================================\r\n      Adding the Axes\r\n    ======================================================================*/\r\n\r\n\r\n    var margin = {\r\n        top: 20,\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 50,\r\n    };\r\n\r\n    var width = 600;\r\n    var height = 400;\r\n\r\n\r\n\r\n    $lines_death.append(\"g\")\r\n        .attr(\"class\", \"x axis-death\")\r\n        // .attr(\"transform\", \"translate(0,\" + (height - margin.bottom) + \")\")\r\n        .attr(\"transform\", \"translate(0,\" + (height - margin.bottom - margin.top - margin.top) + \")\")\r\n        .call(xAxis_death)\r\n        .append(\"text\")\r\n        .attr(\"x\", width - margin.left)\r\n        .attr(\"y\", margin.bottom+10)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"class\", \"label\")\r\n        .text(\"Year\");\r\n\r\n    $lines_death.append(\"g\")\r\n        .attr(\"class\", \"y axis-death\")\r\n        // .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + (-margin.top / 2) + ')')\r\n        .call(yAxis_death)\r\n        .append(\"text\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .attr(\"x\", -margin.top)\r\n        .attr(\"y\", -margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"class\", \"label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n    /*======================================================================\r\n      MDG line\r\n    ======================================================================*/\r\n\r\n    /*svg.append(\"line\")\r\n        .attr(\"class\", \"MDG\")\r\n        .attr(\"x1\", margin.left)\r\n        .attr(\"y1\", yScale(MDG))\r\n        .attr(\"x2\", width - margin.left - margin.right + 15)\r\n        .attr(\"y2\", yScale(MDG));*/\r\n    $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", width - margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", width - margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    /*======================================================================\r\n      Mouse Functions\r\n    ======================================================================*/\r\n    d3.selectAll(\"g.lines-death\")\r\n        .on(\"mouseover\", mouseoverFunc)\r\n        .on(\"mouseout\", mouseoutFunc)\r\n        .on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n        d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n        tooltip_death.style(\"display\", \"none\"); // this sets it to invisible!\r\n    }\r\n\r\n    function mouseoverFunc(d, i) {\r\n\r\n        d3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n        d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n        tooltip_death\r\n            .style(\"display\", \"block\") // this removes the display none setting from it\r\n            .html(\"<p><span class='lines-tooltipHeader sans'>\" + d.FullName + \"</span></p>\");\r\n        //console.log(d.FullName);\r\n        // console.log(d.rates[i]);\r\n\r\n    }\r\n\r\n     var coordinates = [0, 0];\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n        coordinates = d3.mouse(this);\r\n        var x = coordinates[0];\r\n        var y = coordinates[1];\r\n\r\n\r\n        tooltip_death\r\n            .style(\"top\", y + \"px\")\r\n            .style(\"left\", x + \"px\")\r\n            .style('position', 'absolute')\r\n            .style('z-index', 1001);\r\n    }\r\n\r\n\r\n\r\n}); // end of data csv\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n\n    var chartData = [{\n\t\"date\": new Date(\"01/01/2014\"),\n\t\"FentanylHeroin\": \"0.19\",\n\t\"Fentanyl\": \"0.22\",\n\t\"Heroin\": \"0.41\",\n\t\"Methadone\": \"0.10\"\n\t}, {\n\t\"date\": new Date(\"04/01/2014\"),\n\t\"FentanylHeroin\": \"0.18\",\n\t\"Fentanyl\": \"0.19\",\n\t\"Heroin\": \"0.49\",\n\t\"Methadone\": \"0.07\"\n\t}, {\n\t\"date\": new Date(\"07/01/2014\"),\n\t\"FentanylHeroin\": \"0.14\",\n\t\"Fentanyl\": \"0.14\",\n\t\"Heroin\": \"0.53\",\n\t\"Methadone\": \"0.10\"\n\t}, {\n\t\"date\": new Date(\"10/01/2014\"),\n\t\"FentanylHeroin\": \"0.22\",\n\t\"Fentanyl\": \"0.27\",\n\t\"Heroin\": \"0.35\",\n\t\"Methadone\": \"0.06\"\n\t}, {\n\t\"date\": new Date(\"01/01/2015\"),\n\t\"FentanylHeroin\": \"0.19\",\n\t\"Fentanyl\": \"0.40\",\n\t\"Heroin\": \"0.30\",\n\t\"Methadone\": \"0.04\"\n\t}, {\n\t\"date\": new Date(\"04/01/2015\"),\n\t\"FentanylHeroin\": \"0.24\",\n\t\"Fentanyl\": \"0.38\",\n\t\"Heroin\": \"0.29\",\n\t\"Methadone\": \"0.05\"\n\t}, {\n\t\"date\": new Date(\"07/01/2015\"),\n\t\"FentanylHeroin\": \"0.19\",\n\t\"Fentanyl\": \"0.40\",\n\t\"Heroin\": \"0.30\",\n\t\"Methadone\": \"0.06\"\n\t}, {\n\t\"date\": new Date(\"10/01/2015\"),\n\t\"FentanylHeroin\": \"0.22\",\n\t\"Fentanyl\": \"0.43\",\n\t\"Heroin\": \"0.24\",\n\t\"Methadone\": \"0.05\"\n\t}, {\n\t\"date\": new Date(\"01/01/2016\"),\n\t\"FentanylHeroin\": \"0.15\",\n\t\"Fentanyl\": \"0.50\",\n\t\"Heroin\": \"0.17\",\n\t\"Methadone\": \"0.04\"\n\t}];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n\tvar date2 = new Date();\n\tdate2.setMonth(date.getMonth() - 10);\n\tvar q = Math.ceil((date2.getMonth()) / 3);\n\treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"1.5px\"];\n    var seriesLineDash = [\"2,2,2,2\", \"0,0,0,0\", \"0,0,0,0\", \"1,1,1,1\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n\ttop: 30,\n\t   right: 150,\n\tbottom: 50,\n\tleft: 42\n    };\n\n    var width = 540;\n    var height = 300;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear()\n\t.range([height, 0]);\n\n    var color = d3.scale.ordinal()\n\t.range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal()\n\t.range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal()\n\t.range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal()\n\t.range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal()\n\t.range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal()\n\t.range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n\t.scale(x)\n\t.orient(\"bottom\")\n\t.ticks(d3.time.months, 3)\n\t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n\t.scale(x)\n\t.ticks(d3.time.years, 1)\n\t.tickFormat(yearformat)\n\t.tickSize(3, 0)\n\t.tickPadding(1)\n\t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n\t.scale(y)\n\t.orient(\"left\")\n\t.tickFormat(formatPercent)\n\t.ticks(5)\n\t.tickSize(3, 0)\n\t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\")\n\t.append(\"div\")\n\t.attr(\"class\", \"tooltipFent\");\n\n    var line = d3.svg.line()\n\t//.interpolate(\"monotone\")\n\t.x(function(d) {\n\t    return x(d.label);\n\t})\n\t.y(function(d) {\n\t    return y(d.value);\n\t});\n\n\n    var $lines_fent = d3.select(document.querySelector(rootSelector))\n\t.append(\"svg\")\n\t.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n\t.attr(\"viewBox\", \"0 0 \"+(width + margin.left + margin.right) +\" \"+(height + margin.top + margin.bottom))\n\t//class to make it responsive\n\t.classed(\"svg-content-responsive\", true)\n\t.append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n\treturn key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n\treturn {\n\t    name: name,\n\t    values: chartData.map(function(d) {\n\t\treturn {\n\t\t    name: name,\n\t\t    label: d[xLabel],\n\t\t    value: +d[name]\n\t\t};\n\t    })\n\t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n\treturn d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n\treturn d.date;\n    }));\n\n    y.domain([\n\td3.min(seriesData, function(c) {\n\t    return d3.min(c.values, function(d) {\n\t\t//return d.value;\n\t\treturn 0;\n\t    });\n\t}),\n\td3.max(seriesData, function(c) {\n\t    return d3.max(c.values, function(d) {\n\t\treturn d.value;\n\t    });\n\t})\n    ]);\n\n    $lines_fent.append(\"g\")\n\t.attr(\"class\", \"x axis_fent\")\n\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t.call(xAxis_fent)\n\t.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.style(\"stroke-width\", \"1.5px\")\n\t.call(xAxis_fent);\n\n    $lines_fent.append(\"g\")\n\t.attr(\"class\", \"x axis2_fent\")\n\t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n\t.call(xAxis2_fent)\n\t.append(\"text\")\n\t.attr(\"x\", width - margin.left)\n\t.attr(\"y\", margin.bottom - 32)\n\t.attr(\"dy\", \"1em\")\n\t.style(\"text-anchor\", \"end\")\n\t.attr(\"class\", \"label\")\n\t.text(\"Quarter\");\n\n\n    $lines_fent.append(\"g\")\n\t.attr(\"class\", \"y axis_fent\")\n\t.call(yAxis_fent)\n\t.append(\"text\")\n\t.attr(\"transform\", \"rotate(-90)\")\n\t.attr(\"x\", 0)\n\t.attr(\"y\", -44)\n\t.attr(\"dy\", \"1em\")\n\t.style(\"text-anchor\", \"end\")\n\t   .style(\"font\",\"13px sans-serif\")\n\t.style(\"font-weight\", \"normal\")\n\t//.attr(\"class\", \"label\")\n\t.text(\"Percent Opioid Deaths\");\n\n    var series = $lines_fent.selectAll(\".series\")\n\t.data(seriesData)\n\t.enter().append(\"g\")\n\t.attr(\"class\", \"seriesData\");\n\n\n    series.append(\"path\")\n\t.attr(\"class\", \"line\")\n\t.attr(\"d\", function(d) {\n\t    return line(d.values);\n\t})\n\t.style(\"stroke\", function(d) {\n\t    return color(d.name);\n\t})\n\t.style(\"stroke-width\", function(d) {\n\t    return lineStroke(d.name);\n\t})\n\t.style(\"stroke-dasharray\", function(d) {\n\t    return lineDash(d.name);\n\t})\n\t.style(\"fill\", \"none\");\n\n\n    series.append(\"path\")\n\t.attr(\"class\", \"hit-area-ext\")\n\t.attr(\"d\", function(d) {\n\t    return line(d.values);\n\t})\n\t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n\t.style(\"fill\", \"none\");\n\n\n    $lines_fent.append(\"text\")\n\t.attr(\"class\", \"aside-note\")\n\t.attr(\"x\", width + 5)\n\t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n\t.attr(\"dy\", \"1em\")\n\t.style(\"text-anchor\", \"start\")\n\t.style(\"font-size\", \"16px\")\n\t.text(\"Fentanyl & Heroin\")\n\t.style(\"font-weight\", \"normal\");\n\n    $lines_fent.append(\"text\")\n\t.attr(\"class\", \"aside-note\")\n\t.attr(\"x\", width + 5)\n\t.attr(\"y\", y(chartData[8].Methadone) - 7)\n\t.attr(\"dy\", \"1em\")\n\t.style(\"text-anchor\", \"start\")\n\t.style(\"font-size\", \"16px\")\n\t.text(\"Methadone\")\n\t.style(\"font-weight\", \"normal\");\n\n    $lines_fent.append(\"text\")\n        .attr(\"class\", \"aside-note\")\n        .attr(\"x\", width + 5)\n        .attr(\"y\", y(chartData[8].Heroin) - 10)\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .text(\"Heroin\")\n\t.style(\"font-size\", \"16px\");\n\n    $lines_fent.append(\"text\")\n        .attr(\"class\", \"aside-note\")\n        .attr(\"x\", width + 5)\n        .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"start\")\n        .text(\"Fentanyl\")\n\t.style(\"font-size\", \"16px\")\n\t.style(\"fill\", \"#fff\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n\t.attr(\"class\", \"focus\")\n\t.style(\"display\", \"none\");\n\n    focus.append(\"circle\")\n\t.style(\"stroke-width\", 1)\n\t.attr(\"r\", 6)\n\t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n\t.on(\"mouseover\", mouseoverFunc)\n\t.on(\"mouseout\", mouseoutFunc)\n\t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n\td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n\td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n\ttooltipFent.style(\"display\", \"none\"); // this sets it to invisible!\n\tfocus.style(\"display\", \"none\");\n    }\n\n    function mouseoverFunc(d, i) {\n\n\td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n\td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n\t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n\t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n\t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n\t//         }\n\n\td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n\t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n\tvar x0 = d3.mouse(this)[0];\n\tvar y0 = d3.mouse(this)[1]\n\tvar y1 = y.invert(y0);\n\tvar percentVal = d3.format(\".0%\")(y1)\n\n\ttooltipFent\n\t    .style(\"display\", null) // this removes the display none setting from it\n\t.html(\n\t    \"<p><span class='tooltipFentHeader sans'>\" + percentVal + \"</span></p>\"\n\t);\n\t//console.log(d.rates[i]);\n\t//console.log(d3.select(this).select(\"path.point\"));\n\tfocus.style(\"display\", null);\n    }\n\n    function mousemoveFunc(d) {\n\n\n\n\t//console.log(\"events\", window.event, d3.event);\n\tvar x0 = d3.mouse(this)[0];\n\tvar y0 = d3.mouse(this)[1]\n\tvar y1 = y.invert(y0);\n\tvar percentVal = d3.format(\".0%\")(y1);\n\n\tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n\ttooltipFent\n\t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n\t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n\t    .html(\n\t\t\"<p><span class='tooltipFentHeader sans'>\" + percentVal + \"</span></p>\"\n\t);\n    }\n})();\n","$(document).ready(function() {\n\n    var prescription = [{\n        \"Yes\": 83,\n        \"No\": 17\n    }, {\n        \"Yes\": 57,\n        \"No\": 43\n    }, {\n        \"Yes\": 50,\n        \"No\": 50\n    }, {\n        \"Yes\": 37,\n        \"No\": 63\n    }];\n\n    var heroin = [{\n        \"Yes\": 65,\n        \"No\": 35\n    }, {\n        \"Yes\": 28,\n        \"No\": 72\n    }, {\n        \"Yes\": 20,\n        \"No\": 80\n    }, {\n        \"Yes\": 13,\n        \"No\": 87\n    }];\n\n    var fentanyl = [{\n        \"Yes\": 68,\n        \"No\": 32\n    }, {\n        \"Yes\": 30,\n        \"No\": 70\n    }, {\n        \"Yes\": 22,\n        \"No\": 78\n    }, {\n        \"Yes\": 17,\n        \"No\": 83\n    }];\n\n    var both = [{\n        \"Yes\": 64,\n        \"No\": 36\n    }, {\n        \"Yes\": 24,\n        \"No\": 76\n    }, {\n        \"Yes\": 15,\n        \"No\": 85\n    }, {\n        \"Yes\": 9,\n        \"No\": 91\n    }];\n\n    var methadone = [{\n        \"Yes\": 76,\n        \"No\": 24\n    }, {\n        \"Yes\": 46,\n        \"No\": 54\n    }, {\n        \"Yes\": 41,\n        \"No\": 59\n    }, {\n        \"Yes\": 27,\n        \"No\": 73\n    }];\n\n    var buprenorphine = [{\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }, {\n        \"Yes\": 60,\n        \"No\": 40\n    }];\n\n\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n    $(\"#studyperiod\").addClass(\"active\");\n\n    // $(\"#options_substance\").on('input change', function() {\n    //     data_substance = eval(($(\"#options_substance option:selected\").val()));\n    //     asignVal_substance(data_substance, time);\n    // });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"During the Study Period\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-perioid\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n\n    function asignVal_substance(type, time) {\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Present</th><th>Not Present</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n        })\n\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //PIE CHART\n    ///////////////////////\n\n    var margin = {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 0\n    };\n    var width = 550 - margin.left - margin.right,\n        height = 300 - margin.top - margin.bottom;\n\n    var labelsWidth = width * 0.4;\n    var labelWidth = labelsWidth * 0.1;\n    var labelHeight = labelWidth * 0.6;\n\n    var animateDuration = 300;\n    var outerRadius = width - labelsWidth < height ? (width - labelsWidth) / 2 : height / 2;\n    var innerRadius = outerRadius * 0.5; // 40%\n\n    var arc = d3.svg.arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius);\n\n    var pie = d3.layout\n        .pie()\n        .sort(null)\n        .value(getValue)\n        .startAngle(1.1 * Math.PI)\n        .endAngle(3.1 * Math.PI);\n\n    var explodedIndex;\n    var color = d3.scale.ordinal()\n        .range([\"#b71c1c\", \"#d32f2f\", \"#f44336\", \"#ef5350\", \"#e57373\", \"#ef9a9a\"]);\n\n    var $pie_substance = d3.select('#piechart')\n        .attr({\n            width: width + margin.left + margin.right,\n            height: height + margin.top + margin.bottom\n        })\n        .append('g')\n        .attr({\n            class: 'labels',\n            transform: 'translate(' + (width - (labelsWidth + margin.right)) + ', ' + margin.top + ')'\n        })\n        .select(getParent)\n        .append('g')\n        .attr({\n            class: 'pie',\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (height / 2 + margin.top) + ')'\n        })\n        .select(getParent)\n        .append('g')\n        .attr({\n            class: 'main-legend',\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (outerRadius + margin.top) + ')'\n        })\n        .select(getParent);\n\n    $pie_substance.select('.main-legend')\n        .append('circle')\n        .attr({\n            class: 'border',\n            opacity: 0,\n            stroke: 'rgba(255,255,255,1)',\n            fill: 'rgba(0,0,0,0)',\n            r: innerRadius * 0.9\n        })\n        .select(getParent)\n        .append('circle')\n        .attr({\n            class: 'circle',\n            opacity: 0,\n            fill: 'rgba(255,255,255,1)',\n            r: innerRadius * 0.9\n        })\n        .select(getParent)\n        .append('line')\n        .attr({\n            opacity: 0,\n            stroke: 'rgba(255,255,255,1)',\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0\n        })\n        .select(getParent)\n        .append('text')\n        .attr({\n            class: 'legend-title',\n            'font-size': '18px',\n            y: -1 * innerRadius * 0.13,\n            'font-family': 'Arial',\n            'text-anchor': 'middle',\n            'alignment-baseline': 'middle',\n            fill: '#fff'\n        })\n\n    .select(getParent)\n        .append('text')\n        .attr({\n            class: 'description',\n            'font-size': '14px',\n            y: innerRadius * 0.13,\n            'font-family': 'Arial',\n            'text-anchor': 'middle',\n            'alignment-baseline': 'middle',\n            fill: '#fff'\n        });\n\n    function getParent() {\n        return this.parentNode;\n    }\n\n    function getValue(d) {\n        return d.value;\n    }\n\n\n    function getSum(data) {\n        var _sum = 0;\n        data.forEach(function addValue(item) {\n            _sum += item.value;\n        });\n        return _sum;\n    }\n\n    function arcTween(d) {\n        var i;\n\n        function toArc(t) {\n            return arc(i(t));\n        }\n\n        function toEndAngle(t) {\n            d.endAngle = i(t);\n            return arc(d);\n        }\n\n        if ('undefined' === typeof this._current) {\n            i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n            this._current = d;\n            return toEndAngle;\n        }\n        i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return toArc;\n    }\n\n    function labelAnimation(d) {\n        return 'translate (' + arc.centroid(d) + ')';\n    }\n\n    function fill(d, i) {\n        return color(i);\n    }\n\n    function selectArcAnimation(_d) {\n        var dist = outerRadius * 0.05;\n        _d.midAngle = ((_d.endAngle - _d.startAngle) / 2) + _d.startAngle;\n        var x = Math.sin(_d.midAngle) * dist;\n        var y = -Math.cos(_d.midAngle) * dist;\n        return 'translate(' + x + ',' + y + ')';\n    }\n\n    function updatePie(data) {\n        var sum = getSum(data);\n        data = pie(data);\n        var arcs = $pie_substance.select('.pie')\n            .selectAll('.arc')\n            .data(data);\n\n        var isDelay = arcs.selectAll('path').length;\n        var _duration = isDelay ? animateDuration : animateDuration / 2;\n\n        function getPercent(d) {\n            return ((d.value / sum) * 100).toFixed(1) + '%';\n        }\n\n        function getLegend(d) {\n            return d.data.name + ' Present | ' + d.data.value;\n        }\n\n        function liveLarge(d) {\n            var angle = 360 * (d.value / sum);\n            var arcLength = (Math.PI * (outerRadius / 2) * angle) / 180;\n            return arcLength > Math.PI * outerRadius * 0.01;\n        }\n\n        function onMouseIn(d, i) {\n            explodedIndex = i;\n            onClick(d, i);\n\n            function onClick(d, i) {\n\n                console.log(d.data.option);\n                $('.substance-type').html(d.data.description);\n                $('#total').html(d.data.value);\n                if (d.data.option == \"buprenorphine\") {\n                    $('#timeline_blocks').attr('max', 0);\n                } else {\n                    $('#timeline_blocks').attr('max', 3);\n                };\n                data_substance = eval(d.data.option);\n                asignVal_substance(data_substance, time);\n            };\n\n\n            var label = $pie_substance.selectAll('.legend')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                });\n            if (!label.attr('data-exit')) {\n                label.transition()\n                    .duration(animateDuration / 2)\n                    .attr({\n                        opacity: 1,\n                        transform: 'translate(10, ' + ((labelHeight + 5) * i) + ')'\n                    });\n            }\n\n\n            $pie_substance.selectAll('.arc')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                })\n                .transition()\n                .duration(animateDuration / 2)\n                .attr('transform', selectArcAnimation);\n\n            $pie_substance.select('.main-legend')\n                .select('.border')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    stroke: fill(null, i)\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.circle')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    fill: fill(null, i)\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('line')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 1,\n                    stroke: fill(null, i),\n                    x1: Math.sin(d.midAngle) * (innerRadius * 0.7),\n                    y1: -Math.cos(d.midAngle) * (innerRadius * 0.7),\n                    x2: Math.sin(d.midAngle) * innerRadius,\n                    y2: -Math.cos(d.midAngle) * innerRadius\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.legend-title')\n                .text(d.data.name)\n                // .append(d.data.name[1])\n                .select(getParent)\n                .select('.description')\n                .text(d.data.value)\n        }\n\n        function onMouseOut(d, i) {\n            $pie_substance.select('.main-legend')\n                .selectAll(['.circle', '.border'])\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 0\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('line')\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    opacity: 0\n                });\n\n            $pie_substance.select('.main-legend')\n                .select('.legend-title')\n                .text('')\n                .select(getParent)\n                .select('.description')\n                .text('');\n\n            if ('undefined' === typeof i) {\n                return;\n            }\n            var label = $pie_substance.selectAll('.legend')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                });\n\n            if (!label.attr('data-exit')) {\n                label.transition()\n                    .duration(animateDuration / 2)\n                    .attr({\n                        opacity: 1,\n                        transform: 'translate(0, ' + ((labelHeight + 5) * i) + ')'\n                    });\n            }\n\n            $pie_substance.selectAll('.arc')\n                .filter(function(_d, _i) {\n                    return i === _i;\n                })\n                .transition()\n                .duration(animateDuration / 2)\n                .attr({\n                    transform: 'translate(0,0)'\n                });\n        }\n\n        onMouseOut();\n        // update Pie\n\n        arcs.enter()\n            .append('g')\n            .attr('class', 'arc')\n\n        .on('click', function(d, i) {\n                // onMouseOut.call($(this).parent(), d, i);\n                // console.log($(this));\n                if (explodedIndex >= 0) {\n                    onMouseOut(null, explodedIndex);\n                }\n                onMouseIn(d, i);\n            })\n            //.on('mouseout', onMouseOut)\n            // .on('mouseout', onMouseOut)\n            .append('path')\n            .attr({\n                fill: fill\n            })\n            .attr(\"d\", arc).style('stroke', 'white')\n            .style('stroke-width', 2)\n            .select(getParent)\n            .filter(liveLarge)\n            .append('text')\n            .attr({\n                'font-family': 'Arial',\n                'font-size': '14px',\n                fill: '#fff',\n                'text-anchor': 'middle'\n            });\n\n\n        arcs.select('path')\n            .transition()\n            .delay(function delayFn(d, i) {\n                return isDelay ? 0 : _duration * i;\n            })\n            .duration(_duration)\n            .attrTween('d', arcTween);\n\n        arcs.select('text')\n            .text(getPercent)\n            .transition()\n            .duration(animateDuration)\n            .attr({\n                class: 'label-content',\n                transform: labelAnimation\n            });\n\n        arcs.exit()\n            .on('mouseenter', null)\n            .on('mouseout', null)\n            .remove();\n\n        // Update Legends\n\n        var legends = $pie_substance\n            .select('.labels')\n            .selectAll('.legend')\n            .data(data);\n\n        legends.enter()\n            .append('g')\n            .on('click', function(d, i) {\n                // onMouseOut.call($(this).parent(), d, i);\n                // console.log($(this));\n                if (explodedIndex >= 0) {\n                    onMouseOut(null, explodedIndex);\n                }\n                onMouseIn(d, i);\n            })\n            .attr('class', 'legend')\n            .append('rect')\n            .attr({\n                width: labelWidth,\n                height: labelHeight,\n                fill: fill\n            })\n            .select(getParent)\n            .append('text')\n            .attr({\n                'font-size': '14px',\n                'font-family': 'Arial',\n                fill: '#666',\n                x: labelWidth + 5,\n                y: labelHeight / 2 + 5\n            })\n            .select(getParent)\n            .attr({\n                opacity: 0,\n                transform: function(d, i) {\n                    return 'translate(15, ' + ((labelHeight + 5) * i) + ')';\n                }\n            })\n            .transition()\n            .duration(animateDuration)\n            .attr({\n                opacity: 1,\n                transform: function(d, i) {\n                    return 'translate(0, ' + ((labelHeight + 5) * i) + ')';\n                }\n            });\n\n        legends.exit()\n            .on('mouseenter', null)\n            .on('mouseout', null)\n            .attr('data-exit', true)\n            .transition()\n            .duration(animateDuration / 2)\n            .attr({\n                opacity: 0,\n                transform: function(d, i) {\n                    return 'translate(-15, ' + ((labelHeight + 5) * i) + ')';\n                }\n            })\n            .remove();\n\n\n\n        legends.select('text').html(getLegend);\n\n    }\n\n    var data_pie = [\n        { name: 'Heroin', value: 867, option: 'heroin', description: 'heroin' },\n        { name: 'Fentanyl', value: 288, option: 'fentanyl', description: 'fentanyl' },\n        { name: 'Fentanyl & Heroin', value: 249, option: 'both', description: 'both fentanyl and heroin' },\n        { name: 'Prescription Opioid', value: 154, option: 'prescription', description: 'prescription opioid' },\n        { name: 'Methadone', value: 84, option: 'methadone', description: 'methadone' },\n        { name: 'Buprenorphine', value: 15, option: 'buprenorphine', description: 'buprenorphine' },\n    ];\n\n    generatePie(data_pie);\n\n\n    function generatePie(data) {\n        updatePie(data);\n    }\n\n\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender1\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender4\">' + prescription[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender1\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender4\">' + heroin[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        var $option = $(this).data('select');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        var $option = $(this).attr('id');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray) {\n        for (b = 0; b < noOfBlocks; b++) {\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            blockArray.push('<div class=\"block type_gender' + i + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n        redraw(dataset, selected);\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n               \r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);    \r\n                    \r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([0, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n        var age_bar_color = d3.scale.ordinal()\r\n            .range([\"#64B5F6\", \"#FF80AB\"]);\r\n        var age_bar_label = d3.scale.ordinal()\r\n            .range([\"Male\", \"Female\"])\r\n\r\n        var age_bars_legend = $bars_age.selectAll(\".age_bars_legend\")\r\n            .data(options.slice())\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"age_bars_legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(0,\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n        age_bars_legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 20)\r\n            .attr(\"height\", 20)\r\n            .style(\"fill\", age_bar_color);\r\n\r\n\r\n        age_bars_legend.append(\"text\")\r\n            .attr(\"x\", width + 4)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \".35em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text(age_bar_label);\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            })\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var labels = $bars_age.selectAll(\"text.labels\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var labels2 = $bars_age.selectAll(\"text.labels2\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        labels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"labels\");\r\n        labels.exit()\r\n            .remove();\r\n\r\n        labels2.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"labels2\");\r\n        labels2.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".2f\");\r\n\r\n        labels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                console.log(xScale(+d[column]) + 50);\r\n                console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1.2em\")\r\n            .attr(\"dx\", \"5px\")\r\n            .attr(\"text-anchor\", \"start\");\r\n\r\n        labels2.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1.2em\")\r\n            .attr(\"dx\", \"5px\")\r\n            .attr(\"text-anchor\", \"start\");\r\n\r\n\r\n    } // end of draw function\r\n})();"],"sourceRoot":"/source/"}