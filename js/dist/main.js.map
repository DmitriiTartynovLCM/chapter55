<<<<<<< HEAD
{"version":3,"sources":["custom.js","map-death.js","queue.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","lines-bsas.js","bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","parallelism","pop","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","preventDefault","$anchor","stop","animate","scrollTop","each","$id","$current","parent","find","location","pathname","hostname","target","hash","tab","$target","get","play","load","response","asignVal_svg","val_svg","initialize","console","log","mapWidth","mapHeight","transformX","transformY","legendWidth","legendHeight","unitWidth","Vis","visualize","states","forEach","wrapper","visualizationWrapper","createMap","selector","eventName","el","shape","key","$maps_sub","value","values","palette","self","town_value","geoData","parentNode","getElementsByClassName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","PuBuGn","date","setupData","years","keys","dataset","OMRs","y","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","querySelector","time","sqrt","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","mouseoutFunc","symbol","type","size","tooltipFent","focus","mouseoverFunc","y0","y1","invert","percentVal","mousemoveFunc","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","componentWidth","renderLegend","legendItems","legendItemsTranslate","$legend","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","none","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","delay","string_select","value_select","town_names","abington","acton","acushnet","adams","agawam","alford","amesbury","amherst","andover","aquinnah","arlington","ashburnham","ashby","ashfield","ashland","athol","attleboro","auburn","avon","ayer","barnstable","barre","becket","bedford","belchertown","bellingham","belmont","berkley","berlin","bernardston","beverly","billerica","blackstone","blandford","bolton","boston","bourne","boxborough","boxford","boylston","braintree","brewster","bridgewater","brimfield","brockton","brookfield","brookline","buckland","burlington","cambridge","canton","carlisle","carver","charlemont","charlton","chatham","chelmsford","chelsea","cheshire","chester","chesterfield","chicopee","chilmark","clarksburg","clinton","cohasset","colrain","concord","conway","cummington","dalton","danvers","dartmouth","dedham","deerfield","dennis","dighton","douglas","dover","dracut","dudley","dunstable","duxbury","eastbridgewater","eastbrookfield","eastham","easthampton","eastlongmeadow","easton","edgartown","egremont","erving","essex","everett","fairhaven","fallriver","falmouth","fitchburg","florida","foxborough","framingham","franklin","freetown","gardner","georgetown","gill","gloucester","goshen","gosnold","grafton","granby","granville","greatbarrington","greenfield","groton","groveland","hadley","halifax","hamilton","hampden","hancock","hanover","hanson","hardwick","harvard","harwich","hatfield","haverhill","hawley","heath","hingham","hinsdale","holbrook","holden","holland","holliston","holyoke","hopedale","hopkinton","hubbardston","hudson","hull","huntington","ipswich","kingston","lakeville","lancaster","lanesborough","lawrence","lee","leicester","lenox","leominster","leverett","lexington","leyden","lincoln","littleton","longmeadow","lowell","ludlow","lunenburg","lynn","lynnfield","malden","manchester","mansfield","marblehead","marion","marlborough","marshfield","mashpee","mattapoisett","maynard","medfield","medford","medway","melrose","mendon","merrimac","methuen","middleborough","middlefield","middleton","milford","millbury","millis","millville","milton","monroe","monson","montague","monterey","montgomery","mountwashington","nahant","nantucket","natick","needham","newashford","newbedford","newbraintree","newbury","newburyport","newmarlborough","newsalem","newton","norfolk","northadams","northampton","northandover","northattleborough","northborough","northbridge","northbrookfield","northfield","northreading","norton","norwell","norwood","oakbluffs","oakham","orange","orleans","otis","oxford","palmer","paxton","peabody","pelham","pembroke","pepperell","peru","petersham","phillipston","pittsfield","plainfield","plainville","plymouth","plympton","princeton","provincetown","quincy","randolph","raynham","reading","rehoboth","revere","richmond","rochester","rockland","rockport","rowe","rowley","royalston","russell","rutland","salem","salisbury","sandisfield","sandwich","saugus","savoy","scituate","seekonk","sharon","sheffield","shelburne","sherborn","shirley","shrewsbury","shutesbury","somerset","somerville","southampton","southborough","southbridge","southhadley","southwick","spencer","springfield","sterling","stockbridge","stoneham","stoughton","stow","sturbridge","sudbury","sunderland","sutton","swampscott","swansea","taunton","templeton","tewksbury","tisbury","tolland","topsfield","townsend","truro","tyngsborough","tyringham","upton","uxbridge","wakefield","wales","walpole","waltham","ware","wareham","warren","warwick","washington","watertown","wayland","webster","wellesley","wellfleet","wendell","wenham","westborough","westboylston","westbridgewater","westbrookfield","westfield","westford","westhampton","westminster","westnewbury","weston","westport","westspringfield","weststockbridge","westtisbury","westwood","weymouth","whately","whitman","wilbraham","williamsburg","williamstown","wilmington","winchendon","winchester","windsor","winthrop","woburn","worcester","worthington","wrentham","yarmouth","bisectAge","bisector","category10","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","indexOf","term","ui","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","time_period","o","stack","layout","n","parseFloat","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","words","split","reverse","lineNumber","dy","tspan","join","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","legendRect","legendText","bar","raceth","2014","2015","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"AAQA,QAAAA,UAAAC,GAEA,GAAAD,GAAAE,SAAAC,iBAAA,YAGAC,QAAAC,SAAA,WACA,IAAA,GAAAC,GAAA,EAAAA,EAAAN,EAAAO,OAAAD,IAAA,CAIA,GAAAE,GAAAC,EAAAT,EAAAM,IAAAI,SAGAC,GADAP,OAAAQ,OACAR,OAAAS,YAAAL,EAAAM,KAMAC,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAEAC,IAEAA,GAAAV,GAAA,QAAAS,EAAAT,GAAAK,EAAAV,GAAA,IAIAD,EAAAM,GAAAW,MAAAC,mBAAAF,EAAAV,KAWA,QAAAa,kBACAV,EAAA,WAAAC,SAAAI,IAAA,GACAL,EAAA,qBAAAW,SAAA,oBAEAX,EAAA,qBAAAY,YAAA,oBC7CA,QAAAC,OACAC,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAAC,aAGA,QAAAA,aAAAC,EAAAC,GA6JA,QAAAC,KACAC,EAAA,KACAvB,EAAA,aAAAwB,GAAA,eAAA,WACAD,EAAAvB,EAAAyB,MAAAC,SAIA,QAAAH,GAAAI,GAEA,GAAAC,GAAA,KAAAD,CACA3B,GAAA,gBAAA6B,KAAA,6DACA7B,EAAA,cAAA6B,KAAAF,GACA3B,EAAA,iBAAA6B,KAAA,QACA7B,EAAA,WAAA6B,KAAAC,SAAAH,GAAA,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EAEA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAKA,QAAAI,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,IACAzC,EAAA,GAEA0C,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEA8C,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,OACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GArOA,GAQA9C,GARA+D,EAAAvC,EAAA,GAGAwC,EAAAxC,EAAA,EAMA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CAGA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAMA,WADAC,OAAA,sDAGAL,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAIA,GAAAO,GAAA,IACAzC,EAAA,IAEA4B,EAAAf,GAAA8B,OAAA,cAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEA+B,EAAAvB,GAAAyB,MAAAyB,YAEAZ,QAAA,IAAA,IAAA,KAAA,KAAAa,EAAAA,IACAZ,MAAAa,YAAAC,MAAA,GAEA9B,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAIA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAKAC,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAIAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAGA8C,EAAA,IACAC,cAAAD,EAAAE,OAAAC,YAEA,IAAAC,EAGAA,GADAlD,EAAAE,WAAA6C,cAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eACA,GAAA/C,EAAAE,WAAA6C,cACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eAEA,OAGAK,QAAAC,QAAA,UAAA,GACAxC,KAAA,QAAA,SAAA8B,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,IAAA,iBACAjD,KAAA,MAAA4D,YAAAtD,EAAAE,WAAA2B,MAAA,UAAAqB,KAGA7D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA0F,QAAAC,QAAA,UAAA,GACAxE,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,QAsBAc,KACAkB,EAAAD,EAAA,eAAA,kDAsBAvC,EAAA,iBAAA0F,MAAA,WACA1F,EAAA,aAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,EAAAvB,EAAAyB,MAAAgC,KAAA,aAmFA,QAAAkC,QACA7E,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAA0E,cAGA,QAAAA,cAAAxE,EAAAC,GAyCA,QAAAoE,GAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBA6FA,QAAA7E,KACA8E,EAAA,KACApG,EAAA,aAAAwB,GAAA,eAAA,WACAxB,EAAAyB,MAAAC,KAGA0E,GAAApG,EAAAyB,MAAAC,SAKA,QAAA0E,GAAAzE,GAEA,GAAAC,GAAA,KAAAD,CACAyD,GAAAzD,EAEA3B,EAAA,iBAAA6B,KAAA,mFACA7B,EAAA,cAAA6B,KAAAF,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EACA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAIA,QAAAiE,GAAA5D,EAAAC,EAAAC,GACA,GAAA2D,GAAA,IACAC,EAAA,GAEA1D,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAsD,GACAtD,KAAA,SAAAuD,GAEAtD,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MACAhB,GAAA,KACAiB,EAAA,UACAC,EAAA,OAEA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GA1NA,GAGAyC,GAEAvF,EALA+D,EAAAvC,EAAA,GACAwC,EAAAxC,EAAA,EAKA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAIA,WADAC,OAAA,sDAGAL,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAGA,GAAAO,GAAA,IACAzC,EAAA,IAIA4B,EAAAf,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEAgG,EAAAxF,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAA,mBAEAT,EAAAvB,GAAAyB,MAAAyB,YACAZ,QAAA,IAAA,IAAA,KAAA,KAAAa,EAAAA,IACAZ,MAAAa,YAAAqC,KAAA,GACAlE,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAUA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAEAC,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAEAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAEA8C,EAAA,IACAC,cAAAD,EAAAE,OAAAC,EACA,IAAAC,EAIAA,GADAlD,EAAAE,WAAA6C,cAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eACA,GAAA/C,EAAAE,WAAA6C,cACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eAEA,OAKAsB,EAAAhB,QAAA,UAAA,GACAxC,KAAA,QAAA,SAAA8B,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,KAAA,iBACAjD,KAAA,MAAA4D,EAAAtD,EAAAE,WAAA2B,MAAA,UAAAqB,KAEA7D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA2G,EAAAhB,QAAA,UAAA,GACAxE,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SACAgB,GAAA,aAAA,SAAAW,EAAAtC,MAMA2B,GAAA,aAAA,SAAAW,KAsBAb,KAEA+E,EAAA9D,EAAA,UAAA,2BC9YA,WAGA,QAAAzB,GAAA4F,GAaA,QAAAC,KACA,KAAAC,EAAAC,EAAAC,EAAAhH,QAAAiH,EAAAL,GAAA,CACA,GAAA7G,GAAAgH,IACAG,EAAAF,EAAAjH,GACAoH,EAAAC,EAAAC,KAAAH,EAAA,EACAC,GAAA9D,KAAAiE,EAAAvH,MACAkH,EACAC,EAAA,GAAAK,MAAA,KAAAJ,IAIA,QAAAG,GAAAvH,GACA,MAAA,UAAAyH,EAAAlE,KACA2D,EACA,MAAA3F,IACA,MAAAkG,GACAlG,EAAAkG,EACAT,EAAAU,EAAAC,IACAC,MAEAX,EAAAjH,GAAAuD,IACAmE,EAAAX,GAAAD,IACAc,OAKA,QAAAA,KACA,MAAArG,EAAAsG,EAAAtG,GACAuG,EAAAD,EAAAtG,EAAA0F,GACAY,EAAAL,MAAA,MAAAjG,GAAA+D,OAAA2B,IA1CA,GAAAc,GAKAhB,EAGAe,EAPAb,KACAD,EAAA,EACAE,EAAA,EACAQ,EAAA,EAEAnG,EAAA,KACAsG,EAAAG,CAsCA,OAnCAnB,KAAAA,EAAAvC,EAAAA,GAmCAyD,GACA7G,MAAA,WAMA,MALAK,KACA0F,EAAA3D,KAAA2E,aACAP,EACAZ,KAEAiB,GAEAF,MAAA,SAAAK,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAJ,GAAAE,IACAG,GAEA1G,SAAA,SAAA6G,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAJ,GAAAE,IACAG,IAKA,QAAAC,MAxEA,GAAAX,MAAAA,KA0EApG,GAAAkH,QAAA,QACA,kBAAAC,SAAAA,OAAAC,IAAAD,OAAA,WAAA,MAAAnH,KACA,gBAAAqH,SAAAA,OAAAC,QAAAD,OAAAC,QAAAtH,EACAW,KAAAX,MAAAA,KF5EArB,SAAA4I,cAAA,WACA5I,SAAA4I,cAAA,UAEA,IAAA7I,QAAA,EACAD,UAAAC,OAgDAQ,EAAAL,QAAA2I,OAAA5H,gBACAV,EAAAP,UAAA8I,MAAA7H,gBAGAV,EAAA,WACAA,EAAA,iBAAAwI,KAAA,QAAA,SAAAC,GACAA,EAAAC,gBACA,IAAAC,GAAA3I,EAAAyB,KACAzB,GAAA,cAAA4I,OAAAC,SACAC,UAAA9I,EAAA2I,EAAA3F,KAAA,SAAA/C,SAAAI,KACA,KAAA,iBACAoI,EAAAC,qBAKA1I,EAAA,4BAAA0F,MAAA,WACA,0BAAA1F,EAAAyB,MAAAuB,KAAA,UAAA,mBAAAhD,EAAAyB,MAAAuB,KAAA,UACAhD,EAAA,0BAAA0F,UAMA1F,EAAAL,QAAA2I,OAAA,WACAtI,EAAAL,QAAAmJ,aAAA,IACA9I,EAAA,eAAAW,SAAA,oBAEAX,EAAA,eAAAY,YAAA,oBAIAZ,EAAA,WAAA+I,KAAA,WACA,GAAA/I,EAAAL,QAAAmJ,aAAA9I,EAAAyB,MAAAxB,SAAA,IAAA,GAAA,CACA,GAAA+I,GAAAhJ,EAAAyB,MAAAuB,KAAA,KACAhD,GAAA,kBAAAY,YAAA,UACAZ,EAAA,qBAAAgJ,EAAA,MAAArI,SAAA,SAEA,IAAAsI,GAAAjJ,EAAAyB,MAAAuB,KAAA,aAEAhD,GAAA,oBAAA6B,KAAAoH,QAMAjJ,EAAA,kBAAAwB,GAAA,QAAA,WACAxB,EAAAyB,MAAAyH,SAAAC,KAAA,MAAAvI,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,YAKAX,EAAA,4BAAA0F,MAAA,WACA,GAAA0D,SAAAC,SAAAvD,QAAA,MAAA,KAAArE,KAAA4H,SAAAvD,QAAA,MAAA,KAAAsD,SAAAE,UAAA7H,KAAA6H,SAAA,CAEA,GAAAC,GAAAvJ,EAAAyB,KAAA+H,KAEA,IADAD,EAAAA,EAAAzJ,OAAAyJ,EAAAvJ,EAAA,SAAAyB,KAAA+H,KAAAtC,MAAA,GAAA,KACAqC,EAAAzJ,OAIA,MAHAE,GAAA,aAAA6I,SACAC,UAAAS,EAAAtJ,SAAAI,KACA,MACA,KAyBAL,EAAA,kBAAA0F,MAAA,SAAA4B,GACAA,EAAAoB,iBACA1I,EAAAyB,MAAAgI,IAAA,UAMAzJ,EAAA,kBAAA0F,MAAA,WACA,GAAAgE,GAAA1J,EAAAA,EAAAyB,MAAAgC,KAAA,UACAiG,GAAAC,IAAA,IACAD,EAAAC,IAAA,GAAAC,SAKA5J,EAAA,WACAA,EAAA,kBAAA6J,KAAA,iBAAA,SAAAC,GAMA,QAAAC,GAAArI,GACA1B,EAAA,YAAAY,YAAA,UACAZ,EAAA,mBAAA0B,EAAA,MAAAf,SAAA,UACA,QAAAe,GACA1B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,iBAAAgD,KAAA,UAAA,GACAhD,EAAA,0BAAA6B,KAAA,iIAEA7B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,0BAAA6B,KAAA,iIAdA,GAEAmI,IAFAhK,EAAAyB,MAAA0H,KAAA,OAEA,MACAY,GAAAC,GAeAhK,EAAA,YAAAwB,GAAA,QAAA,WACAuI,EAAA/J,EAAAyB,MAAAC,SAGA1B,EAAA,iBAAAwB,GAAA,QAAA,WACAuI,EAAA/J,EAAAyB,MAAAgC,KAAA,iBCtLAzD,EAAAP,UAAA8I,MAAA,WACA1H,MACA8E,SECA,WACA,YAcA,SAAAF,GAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBAMA,QAAA8D,KACAnJ,QAEAC,MAAAC,GAAAC,KAAA,yCAGAF,MAAAC,GAAAC,KAAA,yCAEAC,SAAAC,GAGA,QAAAA,GAAAC,EAAAC,GAEA,GAAAuC,GAAAvC,EAAA,GACAwC,EAAAxC,EAAA,EAGArB,GAAA,iBAAA0F,MAAA,WACA1F,EAAA,mBAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,EAAAvB,EAAAyB,MAAAgC,KAAA,YAGA,KAAA,GAAA5D,GAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,OAAAF,EAAAC,SAAAjE,GAAAmE,KAIA,MAHAkG,SAAAC,IAAA,6BAAAtK,OACAqK,SAAAC,IAAAvG,EAAAE,SAAAjE,GAAAwC,WAAA0B,KAAA,kBAAAF,EAAAC,SAAAjE,GAAAmE,KAIAJ,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAGAN,EAAAf,GAAA8B,OAAA,cACA0C,QAAA,iBAAA,GACAzC,OAAA,OACAC,KAAA,sBAAA,iBACAA,KAAA,UAAA,OAAAoH,EAAA,IAAAC,GAEA7E,QAAA,0BAAA,GACAhF,MAAA,SAAA,sBAEA,IAAA+E,GAAAvE,GAAA8B,OAAA,cAAAC,OAAA,OACAC,KAAA,QAAA,qBAIAT,GAAAvB,GAAAyB,MAAAyB,YACAZ,QAAA,IAAA,KAAA,KAAA,MAAA,MAAA,MAAAa,EAAAA,IACAZ,OAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,YACAhB,EAAAiB,cAAA,WACA,OAAA,IAAA,IAAA,MAAA,OAAA,QAAA,QAAA,OAKA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,MACAkC,WAAAyF,EAAA,IAAA,IAAAC,IAEAzF,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAEAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAyC,QAAA,YAAA,GACAxC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEA3B,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SACAgB,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAGA3B,EAAA,SAAA,IAAAsE,EAAA,GAAAsF,EAAA,GAAA,oBAAA,IAAAtF,EAAA,GAAAuF,EAAA,gBAEAC,EAAAxF,EAAA,GAAAsF,EAAA,EAAA,QAAA,EACAG,EAAAzF,EAAA,GAAAuF,EAAA,EAAA,QAAA,CACA7J,IAAA,wBAAA8J,EAAA,IAAAC,EAAA,IAEA,IAEAlF,GAFAJ,EAAA,KACAC,EAAAD,EAAAE,OAAAC,EAIAC,GADAlD,EAAAE,WAAA6C,GAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,IACA,IAAA/C,EAAAE,WAAA6C,GACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,IAEA,OAGAK,EAAAC,QAAA,UAAA,GACAxC,KAAA,QAAAxC,GACAqB,KAAA,WAAA4D,EAAAtD,EAAAE,WAAA2B,MAAA,eAAAqB,KAGA7D,GAAA,YAAA,SAAAW,EAAAtC,GACAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA0F,EAAAC,QAAA,UAAA,GACAxE,GAAAgB,UAAA,iBACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAIAc,IACAkB,EAAAD,EAAA,eAAA,kDAKA,QAAAjB,KAEAtB,EAAA,mBAAA0B,IAAA,MACAH,EAAA,MACAvB,EAAA,mBAAAwB,GAAA,eAAA,WACAD,EAAAvB,EAAAyB,MAAAC,SAIA,QAAAH,GAAAI,GAEA,GAAAC,GAAA,KAAAD,CACAyD,GAAAzD,EACA3B,EAAA,sBAAA6B,KAAA,qDACA7B,EAAA,mBAAA6B,KAAAF,GAEA3B,EAAA,iBAAA6B,KAAA,2SAGAE,EAAAC,UAAA,iBACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GACA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EACA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAIA,QAAAI,GAAAC,EAAAC,EAAAC,GAeA,IAAA,GAbAE,GAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAwH,GACAxH,KAAA,SAAAyH,GAEAxH,EAAAJ,EAAAE,OAAA,KAGAG,KAMArD,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIA,IAAA6K,GAAA,IAAAxH,EAAApD,MAEAmD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAAyH,EAAA,GACAzH,KAAA,QAAA,SAAAb,EAAAtC,GACA,MAAA6K,GAAA,MAEA1H,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,GAAA6K,EAAA,MAEA1H,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,cAAA,UACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,GAAA6K,EAAAA,EAAA,EAAA,MAEA1H,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAGAJ,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GAnOA,GAKAyC,GACArD,EACAQ,EAPAkI,EAAA,GACAD,EAAA,OACAJ,EAAA,IACAC,EAAA,GAoOArK,GAAAP,UAAA8I,MAAA0B,KC9OA,IAAAU,KAAA,SAAA3J,GACA,YA4BA,SAAA4J,GAAAxJ,EAAAyJ,EAAApH,GAIAA,EAAAA,KAAAqH,QAAA,SAAArH,EAAA5D,GACA,GAAAkL,GAAAC,EAAAjI,OAAA,OAAAC,KAAA,QAAA,eAAAD,OAAA,MAEAkI,GAAAF,EAAAF,EAAApH,KAMA,QAAAwH,GAAAF,EAAAxG,EAAAd,GAuEA,QAAAgE,GAAAyD,EAAAC,GACAnK,EAAAgB,UAAAkJ,GAAA,GAAAJ,QAAA,SAAAM,EAAAvL,GACA,GAAAwL,GAAArK,EAAA8B,OAAAsI,EACAC,GAAA7J,GAAA2J,GAAAE,KAxEAN,EAAAhI,OAAA,QACAY,KAAAF,EAAA6H,KACAtI,KAAA,QAAA,aACA+H,EAAAhI,OAAA,QACAY,KAAA,IACAX,KAAA,QAAA,kBAEA,IAAAuI,GAAAR,EACAvF,QAAA,iBAAA,GACAzC,OAAA,OACAC,KAAA,sBAAA,iBACAA,KAAA,UAAA,OAAAJ,EAAA,IAAAzC,GAEAqF,QAAA,0BAAA,EAEA+F,GAAAvJ,UAAA,QACAyB,KAAAc,EAAAT,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA6B,GACArE,MAAA,SAAA,SACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,GAAA2L,GAAA/H,EAAAgI,OAAAtJ,EAAAE,WAAA2B,KACA,OAAA0H,GAAAF,KAEAhK,GAAA,YAAA,SAAAW,EAAAtC,MAGA2B,GAAA,WAAA,SAAAW,EAAAtC,MAGAmD,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAAE,WAAA2B,KAAAmC,gBAEAnD,KAAA,KAAA,WACAxB,GAAA,aAAA,SAAAW,EAAAtC,GACA4H,EAAA,IAAAtF,EAAAE,WAAA2B,KAAAmC,cAAA,YAKA3E,GAAA,aAAA,SAAAW,GACAsF,EAAA,IAAAtF,EAAAE,WAAA2B,KAAAmC,cAAA,cAGA3E,GAAA,SAAA,SAAAmK,GACA,GACAC,GADAC,EAAAF,EAAAlI,MAKAmI,GAFA,SAAAnI,EAAAgI,OAAAI,EAAA,GAAAxJ,WAAA2B,MAEAhD,EAAAsE,OAAA,SAAA7B,EAAAgI,OAAAI,EAAA,GAAAxJ,WAAA2B,OAEA,MAKA2H,EAAA5G,OAAA+G,WAAAA,WAAAC,uBAAA,mBAAA,GAAAC,UAAAH,EAAA,GAAAxJ,WAAA2B,KAAA,MAAA4H,EACA5K,EAAA8B,OAAA6I,EAAA5G,QAAAvE,MAAA,eAAA,IAAAA,MAAA,SAAA,SAAAA,MAAA,eAAA,WAEAgB,GAAA,WAAA,SAAAmK,GAGAA,EAAA5G,OAAA+G,WAAAA,WAAAC,uBAAA,mBAAA,GAAAC,UAAA,GACAhL,EAAAgB,UAAA,gBAAAxB,OAAAyL,eAAA,IAAAzL,MAAA,SAAA,SAAAA,MAAA,eAAA,WAsBA,QAAA0L,GAAAzJ,EAAAC,EAAAC,GACA,GACAxC,GAAA,GAEAgM,EAAAnL,EAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAA,QACAA,KAAA,SAAA7C,GAEAiM,EAAAD,EAAApJ,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,QACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAuM,GAAApK,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,IAAA,IAAAqD,EAAApD,QAAA,MAEAkD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAgJ,EAAApK,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,cAAA,UACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,IAAA,IAAAqD,EAAApD,QAAA,EAAA,MAEAkD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAGA+I,EAAArJ,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GAjLA,GAAAqI,GAAAhK,EAAA8B,OAAA,sBAGAhC,SACAC,MAAAC,EAAAC,KAAA,yBACAF,MAAAC,EAAAC,KAAA,qBACAyG,MAAAkD,EAEA,IAAAhI,GAAA,IACAzC,EAAA,IAEAmE,EAAAtD,EAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAMAE,GAJA7D,EAAA8B,OAAA,UAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEAa,EAAAuD,IAAAM,OAAAP,WAAAA,IACAoH,EAAA1K,EAAAyB,MAAAyB,YAAAZ,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAa,YAAAiI,OAAA,IAiGA9J,EAAAvB,EAAAyB,MAAAyB,YAAAZ,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAa,YAAAiI,OAAA,GACA9J,GAAAiB,cAAA,WACA,OAAA,KAAA,SAAA,UAAA,UACA,UAAA,aAKA0I,EAAA3J,EAAA,uBAAA,gEAuDAvC,EAAA,4BAAA0F,MAAA,WACA,GAAA4G,GAAAtM,EAAAyB,MAAAgC,KAAA,OACAzD,GAAA,kBAAAgD,KAAA,mBAAAsJ,GACAtM,EAAA,4BAAAY,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,aAGAK,KC9LA,WACA,YAyGA,SAAAuL,GAAA9I,GACA,GAAA+I,GAAAxL,GAAAyL,KAAAhJ,EAAA,IAAAyD,MAAA,EAAA,IAEAwF,IAGAjJ,GAAAqH,QAAA,SAAA3I,EAAAtC,GACA,GAAA8M,KACAH,GAAA1B,QAAA,SAAA8B,GACAzK,EAAAyK,IACAD,EAAAxJ,MACAxB,KAAAiL,EACAC,KAAA1K,EAAAyK,GACAE,UAAA3K,EAAA2K,UACAC,SAAA5K,EAAA4K,aAIAL,EAAAvJ,MACA2J,UAAA3K,EAAA2K,UACAC,SAAA5K,EAAA4K,SACAC,MAAAL,MAIAlJ,EAAAiJ,QAAAA,EAGAO,EAAA3J,OACAtC,GAAAkM,OAAAV,EAAA,SAAArK,GACA,MAAAgL,GAAAC,MAAAjL,MAIAkL,EAAA/J,QACAtC,GAAAsM,IAAAZ,EAAA,SAAAvK,GACA,MAAAnB,IAAAsM,IAAAnL,EAAA6K,MAAA,SAAA7K,GACA,OAAAA,EAAA0K,SAGA,GAGA,IAAAU,GAAAC,EAAAxL,UAAA,iBACAyB,KAAAiJ,GACAhJ,QACAX,OAAA,KACAC,KAAA,QAAA,cAEAyK,GAAAF,EAAAvL,UAAA,QACAyB,KAAA,SAAAtB,GACA,OAAAA,EAAA6K,SAEAtJ,QACAX,OAAA,QACAC,KAAA,QAAA,cACAwC,QAAA,gBAAA,SAAArD,EAAAtC,GAEA,MAAAG,GAAA0N,QAAAvL,EAAAtC,GAAAiN,UAAAa,MAAA,IAQAnI,QAAA,MAAA,SAAArD,EAAAtC,GAEA,MAAAG,GAAA0N,QAAAvL,EAAAtC,GAAAiN,UAAAc,MAAA,IAYA,QAAAC,KACAC,EAAAlL,MAAAmL,EAAAC,YACAF,EAAAlL,MAAA,IACAkL,EAAAG,OAAAC,KAAA,GAEAJ,EAAAG,OAAAC,KAAA,GASA,QAAAC,KACAN,IAEAL,EAAAxK,KAAA,QAAA8K,EAAAlL,OAEAqK,EAAA1J,OAAAuK,EAAAG,OAAAC,KAAAJ,EAAAlL,MAAAkL,EAAAG,OAAAG,MAAAN,EAAAG,OAAAC,OACAb,EAAA9J,OAAAuK,EAAAG,OAAA5N,IAAAyN,EAAA3N,OAAA2N,EAAAG,OAAAI,OAAAP,EAAAG,OAAA5N,MAGAiO,EAAA7L,MAAAwK,GACAsB,OAAA,UACAC,MAAAV,EAAAlL,MAAA,IAAA,EAAA,IACA6L,WAAA,SAAAtM,GACA,MAAAgL,GAAAhL,KAEAuM,eAAA,IAEAC,EAAAlM,MAAA4K,GACAkB,OAAAT,EAAAlL,MAAA,IAAA,QAAA,QACA8L,eAAA,IAEAE,EACA5L,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,MAEAW,EACA7L,KAAA,KAAA8K,EAAAG,OAAAC,MAEAJ,EAAAlL,MAAA,IACAkM,EACA9L,KAAA,YAAA,aAAA8K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA5N,IAAA,EAAA,KAEAyO,EACA9L,KAAA,YAAA,aAAA8K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA5N,IAAA,EAAA,KAKA0O,EAAAC,EAAA,SAAA7M,GACA,MAAA8K,GAAAE,EAAAC,MAAAjL,EAAAR,SAEAiL,EAAA,SAAAzK,GACA,MAAAkL,IAAAlL,EAAA0K,QAEAoC,QAAA,SAAA9M,GACA,MAAAkL,IAAAlL,EAAA0K,QAIAqC,EACA/H,KAAAmH,GAEAQ,EACA3H,KAAAwH,GAGAQ,EACAnM,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,KAAA,IACAlL,KAAA,IAAAqK,EAAA,MAAA,GAEA+B,EACApM,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,KAAA,IACAlL,KAAA,IAAAqK,EAAA,IAAA,GAEAI,EAAAzK,KAAA,IAAA+L,GApQA,GAqBAtB,GArBAvC,EAAA,cACA6C,EAAAtO,SAAA4P,cAAAnE,GAGA4C,GACAG,QACA5N,IAAA,GACA+N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEAtL,MAAAmL,EAAAC,YACA7N,OAAA,KAMAwN,GAAA,MACAC,GAAA,OAQAT,EAAAnM,GAAAsO,KAAAhK,OAAA,MAEA2H,EAAAjM,GAAAsO,KAAA7M,QACA4K,EAAArM,GAAAyB,MAAA8M,OACAjB,EAAAtN,GAAA6B,IAAA2M,OACAb,EAAA3N,GAAA6B,IAAA2M,OACAT,EAAA/N,GAAA6B,IAAA4M,OAGAjC,EAAAxM,GAAA8B,OAAAoI,GACAnI,OAAA,OACAC,KAAA,QAAA8K,EAAAlL,OACAI,KAAA,SAAA8K,EAAA3N,QAGA+O,EAAA1B,EAAAzK,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,gBAAA8K,EAAA3N,OAAA2N,EAAAG,OAAAI,OAAAP,EAAAG,OAAA5N,KAAA,KACA8G,KAAAmH,GAEAM,EAAAM,EACAnM,OAAA,QACAC,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,MACAlL,KAAA,IAAA8K,EAAAG,OAAAI,QACArL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,QAEAmL,EAAAtB,EAAAzK,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,aAAA8K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA5N,IAAA,EAAA,KACA8G,KAAAwH,GAEAE,EAAAC,EACA/L,OAAA,QACAC,KAAA,KAAA8K,EAAAG,OAAA5N,KACA2C,KAAA,KAAA8K,EAAAG,OAAAC,MACAlL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,qDAGAwL,EAAA3B,EAAAzK,OAAA,QACAC,KAAA,QAAA,YACAA,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,KAAA,IACAlL,KAAA,IAAAqK,EAAA,MAAA,GACArK,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,MAEAyL,EAAA5B,EAAAzK,OAAA,QACAC,KAAA,QAAA,aACAA,KAAA,IAAA8K,EAAAlL,MAAAkL,EAAAG,OAAAC,KAAA,IACAlL,KAAA,IAAAqK,EAAA,IAAA,GACArK,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,MAGA3C,IAAA8B,OAAA,eACAC,OAAA,OACAC,KAAA,QAAA,qBAOAhC,IAAA0O,IAAA,2BAAA,SAAAjM,GACA8I,EAAA9I,GACA0K,IAEAxO,OAAAgQ,iBAAA,SAAAxB,QCvGA,WACA,YAkEA,SAAAyB,GAAAtD,GACA,GAAAuD,GAAA,GAAAC,KACAD,GAAAE,SAAAzD,EAAA0D,WAAA,GACA,IAAApI,GAAAqI,KAAAC,KAAAL,EAAAG,WAAA,EACA,OAAA,IAAApI,EAyPA,QAAAuI,KAEAnP,GAAAgB,UAAA,aAAAwD,QAAA,aAAA,GAAAA,QAAA,WAAA,GACAxE,GAAAgB,UAAA,cAAAwD,QAAA,aAAA,GAAAA,QAAA,WAAA,GAAAxC,KAAA,IAAAhC,GAAA6B,IAAAuN,SAAAC,KAAA,UAAAC,KAAA,KAAA9P,MAAA,eAAA,KACA+P,EAAA/K,QAAA,UAAA,GACAgL,EAAAhL,QAAA,UAAA,GAGA,QAAAiL,GAAAtO,EAAAtC,GAEAmB,GAAAgB,UAAA,aAAAwD,QAAA,aAAA,GACAxE,GAAAgB,UAAA,cAAAwD,QAAA,aAAA,GAAAxC,KAAA,IAAAhC,GAAA6B,IAAAuN,SAAAC,KAAA,UAAAC,KAAA,KAAA9P,MAAA,eAAA,KAMAQ,GAAA8B,OAAArB,MAAAqB,OAAA,aAAA0C,QAAA,aAAA,GAAAA,QAAA,WAAA,EAEA,IACAkL,IADA1P,GAAA8D,MAAArD,MAAA,GACAT,GAAA8D,MAAArD,MAAA,IACAkP,EAAA/D,EAAAgE,OAAAF,GACAG,EAAA7P,GAAAsE,OAAA,OAAAqL,EAEAJ,GAAA/K,QAAA,UAAA,GACA3D,KAAAgP,GAGAL,EAAAhL,QAAA,UAAA,GAGA,QAAAsL,GAAA3O,GAGA,GAAA4O,GAAA/P,GAAA8D,MAAArD,MAAA,GACAiP,EAAA1P,GAAA8D,MAAArD,MAAA,GACAkP,EAAA/D,EAAAgE,OAAAF,GACAG,EAAA7P,GAAAsE,OAAA,OAAAqL,EAEAH,GAAAxN,KAAA,YAAA,aAAA+N,EAAA,IAAAL,EAAA,KAIAH,EACA/P,MAAA,MAAAQ,GAAAyH,MAAAuI,MAAA,GAAA,MACAxQ,MAAA,OAAAQ,GAAAyH,MAAAwI,MAAA,EAAA,MACApP,KAAAgP,GAKA,QAAA1C,KACA+C,EAAAnD,EAAAC,aAEAgB,EAAAmC,aAAA,EAAAvO,IACAwO,EAAAD,aAAA,EAAAvO,IACAgK,EAAArJ,OAAApD,EAAA,IACAkR,EAAA5O,MAAAuM,GACAsC,EAAA7O,MAAAuM,GACAuC,EAAA9O,MAAAmK,GAEA6C,EAAAT,EAAA,SAAA7M,GACA,MAAA6M,GAAA7M,EAAAqP,SAEA5E,EAAA,SAAAzK,GACA,MAAAyK,GAAAzK,EAAAqJ,SAGAiG,EACAzO,KAAA,YAAA,eAAA7C,EAAA,KACAgH,KAAAkK,GAEAK,EACA1O,KAAA,YAAA,gBAAA7C,EAAA,IAAA,KACAgH,KAAAmK,GAEAK,EACA3O,KAAA,IAAAJ,EAAAqL,EAAAC,MACAlL,KAAA,IAAAiL,EAAAI,OAAA,IAGAuD,EAAAzK,KAAAoK,GAEAM,EAAA7O,KAAA,QAAA8O,GAAA9O,KAAA,SAAA+O,GAUAC,EAAAhP,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAtN,EAAAsJ,UAGAwG,EAAAjP,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAtN,EAAAsJ,UAKA,QAAAyF,GAAAgB,GACAJ,EAAAI,EACAtP,EAAAkP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAjO,EAAA4R,EAAA9D,EAAA5N,IAAA4N,EAAAI,OAGA,QAAA8D,KACA,GAAAC,IACA,iBACA,WACA,SACA,aAEAC,GACA,oBACA,WACA,SACA,aAEAC,EAAAT,EAAA9O,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,aAAAiL,EAAAC,KAAA,OACAqE,EAAA,EAKAH,GAAAtH,QAAA,SAAA0H,EAAA3S,GACA,GAAA4S,GAAAH,EAAAvP,OAAA,KACAC,KAAA,QAAA,eAAAwP,GACAxP,KAAA,YAAA,eAAAnD,EAAA0S,EAAA,IAEAE,GAAA1P,OAAA,YACAC,KAAA,QAAA,eAAAwP,GACAxP,KAAA,KAAA,GACAA,KAAA,KAAA,GACAA,KAAA,KAAA,IACAA,KAAA,KAAA,GACAxC,MAAA,SAAAkS,EAAA7S,IACAW,MAAA,mBAAAmS,EAAA9S,IACAW,MAAA,eAAAoS,EAAA/S,IAEA4S,EAAA1P,OAAA,QACAC,KAAA,QAAA,eAAAwP,GACAxP,KAAA,IAAA,IACAA,KAAA,IAAA,IACAW,KAAA0O,EAAAxS,MAldA,GAAAgT,GAAA,kBACA9E,EAAAtO,SAAA4P,cAAA,mBAEAyD,IACAxG,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAMAC,EAAAnS,GAAAsO,KAAAhK,OAAA,MASAoN,GAAA,UAAA,UAAA,UAAA,WACAE,GAAA,QAAA,QAAA,QAAA,OACAD,GAAA,cAAA,UAAA,UAAA,WACAS,GAAA,SAAA,SAAA,SAAA,UACAC,GAAA,MAAA,QAAA,QAAA,OACAC,GAAA,UAAA,UAAA,UAAA,WACAC,EAAA,OAOAtF,GACA5N,IAAA,GACA+N,MAAA,GACAC,OAAA,GACAH,KAAA,IAGA4D,EAAA,IACAC,EAAA,IACAnP,EAAAkP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAjO,EAAA4R,EAAA9D,EAAA5N,IAAA4N,EAAAI,OAGAW,EAAAhO,GAAAyB,MAAA+Q,UAAArC,aAAA,EAAAvO,IACAwO,EAAApQ,GAAAyB,MAAA+Q,UAAArC,aAAA,EAAAvO,IAEAgK,EAAA5L,GAAAyB,MAAAgR,SAAAlQ,OAAApD,EAAA,IAEAuT,EAAA1S,GAAAyB,MAAA+Q,UAAAjQ,MAAAmP,GAEAiB,EAAA3S,GAAAyB,MAAA+Q,UAAAjQ,MAAAqP,GAEAgB,EAAA5S,GAAAyB,MAAA+Q,UAAAjQ,MAAAoP,GAEAkB,EAAA7S,GAAAyB,MAAA+Q,UAAAjQ,MAAA6P,GAEAU,EAAA9S,GAAAyB,MAAA+Q,UAAAjQ,MAAA8P,GAEAU,EAAA/S,GAAAyB,MAAA+Q,UAAAjQ,MAAA+P,GAEAjC,EAAArQ,GAAA6B,IAAA2M,OACA/M,MAAAuM,GACAT,OAAA,UACAC,MAAAxN,GAAAsO,KAAA0E,OAAA,GACAvF,WAAAmB,GAGA0B,EAAAtQ,GAAA6B,IAAA2M,OACA/M,MAAAuM,GACAR,MAAAxN,GAAAsO,KAAA9C,MAAA,GACAiC,WAAA0E,GACAc,SAAA,EAAA,GACAC,YAAA,GACA3F,OAAA,UAGA4F,EAAAnT,GAAAsE,OAAA,OAEAiM,EAAAvQ,GAAA6B,IAAA2M,OACA/M,MAAAmK,GACA2B,OAAA,QACAE,WAAA0F,GACA3F,MAAA,GACAyF,SAAA,EAAA,GACAC,YAAA,GAKA3D,EAAAvP,GAAA8B,OAAA,QAAAC,OAAA,OAAAC,KAAA,QAAA,eAEAyM,EAAAzO,GAAA6B,IAAA4M,OACAT,EAAA,SAAA7M,GACA,MAAA6M,GAAA7M,EAAAqP,SAEA5E,EAAA,SAAAzK,GACA,MAAAyK,GAAAzK,EAAAqJ,SAGAqG,EAAA7Q,GAAA8B,OAAArD,SAAA4P,cAAAwD,IACA9P,OAAA,OACAqR,EAAAvC,EAAA9O,OAAA,KACAC,KAAA,YAAA,aAAAiL,EAAAC,KAAA,IAAAD,EAAA5N,IAAA,KAEAgU,EAAArT,GAAAyL,KAAAqG,EAAA,IAAAwB,OAAA,SAAAhJ,GACA,MAAAA,KAAAiI,GAGAG,GAAApQ,OAAA+Q,GACAV,EAAArQ,OAAA+Q,GACAT,EAAAtQ,OAAA+Q,GACAR,EAAAvQ,OAAA+Q,GACAP,EAAAxQ,OAAA+Q,GACAN,EAAAzQ,OAAA+Q,EAEA,IAAAE,GAAAF,EAAArP,IAAA,SAAAwP,GACA,OACAA,KAAAA,EACA/I,OAAAqH,EAAA9N,IAAA,SAAA7C,GACA,OACAqS,KAAAA,EACAhD,MAAArP,EAAAoR,GACA/H,OAAArJ,EAAAqS,QAOAxF,GAAA1L,OAAAwP,EAAA9N,IAAA,SAAA7C,GACA,MAAAA,GAAAmK,QAGA8E,EAAA9N,OAAAwP,EAAA9N,IAAA,SAAA7C,GACA,MAAAA,GAAAmK,QAGAM,EAAAtJ,QACAtC,GAAAyT,IAAAF,EAAA,SAAAG,GACA,MAAA1T,IAAAyT,IAAAC,EAAAjJ,OAAA,SAAAtJ,GAEA,MAAA,OAGAnB,GAAAsM,IAAAiH,EAAA,SAAAG,GACA,MAAA1T,IAAAsM,IAAAoH,EAAAjJ,OAAA,SAAAtJ,GACA,MAAAA,GAAAqJ,WAKA,IAAAiG,GAAA2C,EAAArR,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,eAAA7C,EAAA,KACAgH,KAAAkK,GAOAK,GALAD,EAAA1O,OAAA,QACAC,KAAA,QAAA,QACAxC,MAAA,eAAA,SACA2G,KAAAkK,GAEA+C,EAAArR,OAAA,KACAC,KAAA,QAAA,YACAA,KAAA,YAAA,gBAAA7C,EAAA,IAAA,KACAgH,KAAAmK,IACAK,EAAAD,EACA3O,OAAA,QACAC,KAAA,IAAAJ,EAAAqL,EAAAC,MACAlL,KAAA,IAAAiL,EAAAI,OAAA,IACArL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,WAGAiO,EAAAwC,EAAArR,OAAA,KACAC,KAAA,QAAA,cACAmE,KAAAoK,GACAxO,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,IACAA,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,yBAEAgR,EAAAP,EAAApS,UAAA,WACAyB,KAAA8Q,GACA7Q,QAAAX,OAAA,KACAC,KAAA,QAAA,cAGAgP,EAAA2C,EAAA5R,OAAA,QACAC,KAAA,QAAA,QACAA,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAtN,EAAAsJ,UAEAjL,MAAA,SAAA,SAAA2B,GACA,MAAAuR,GAAAvR,EAAAqS,QAEAhU,MAAA,eAAA,SAAA2B,GACA,MAAAwR,GAAAxR,EAAAqS,QAEAhU,MAAA,mBAAA,SAAA2B,GACA,MAAAyR,GAAAzR,EAAAqS,QAEAhU,MAAA,OAAA,QAGAyR,EAAA0C,EAAA5R,OAAA,QACAC,KAAA,QAAA,gBACAA,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAtN,EAAAsJ,UAEAzI,KAAA,QAAA,wCACAxC,MAAA,OAAA,QAoCAgQ,EAAA4D,EAAArR,OAAA,KACAC,KAAA,QAAA,SACAwC,QAAA,UAAA,EAEAgL,GAAAzN,OAAA,UACAvC,MAAA,eAAA,GACAwC,KAAA,IAAA,GACAA,KAAA,iBAAA,QAEAhC,GAAAgB,UAAA,gBACAR,GAAA,YAAAiP,GACAjP,GAAA,WAAA2O,GACA3O,GAAA,YAAAsP,GA4JA3C,IACAgE,IAEAxS,OAAAgQ,iBAAA,SAAAxB,MC7dA,WA2aA,QAAAA,KACA+C,EAAAnD,EAAAC,aAEA6D,EAAA7O,KAAA,QAAA8O,GAAA9O,KAAA,SAAA+O,GACA/C,EAAAzL,OAAA,EAAAX,IACAgK,EAAArJ,OAAApD,EAAA,IAEAyU,EACAnS,MAAAuM,GACAP,WAAA0E,GACA3E,MAAA5L,EAAA,IAAA,EAAA,IACA2L,OAAA,UACAsG,cAAA,GAEAC,EACArS,MAAAmK,GACAqH,SAAArR,GACA2L,OAAA,SACAE,WAAAsG,GAGAtF,EAAAT,EAAA,SAAA7M,GACA,MAAA6M,GAAA7M,EAAA6S,OAEApI,EAAA,SAAAzK,GACA,MAAAyK,GAAAzK,EAAAqJ,SAEAyD,QAAA,SAAA9M,GACA,MAAAyK,GAAAzK,EAAAqJ,SAGAyJ,EAAAjS,KAAA,YAAA,eAAA7C,EAAA,KAAAgH,KAAAyN,GACAM,EAAA/N,KAAA2N,GACAK,EAAAnT,UAAA,oBAAAgB,KAAA,KAAA,GAAAA,KAAA,KAAA,GAAAxC,MAAA,cAAA,OACA4U,EAAApS,KAAA,QAAAJ,GAAAI,KAAA,SAAA7C,GAGAgS,IACAkD,IACAC,IAIA,QAAApE,GAAAqE,GACAzD,EAAAyD,EACA3S,EAAAkP,EAAA7D,EAAAC,KAAAD,EAAAG,MAGA,QAAAoH,KACAlD,EAAAmD,QAAAC,OAAAP,EAAApS,OAAA,UAAAC,KAAA,QAAA,kBAAAA,KAAA,IAAA,GACAsP,EAAAmD,QAAA9R,KAAAwR,EAAApS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,iBAAAW,KAAA,WACA2O,EAAAqD,QAAAD,OAAAP,EAAApS,OAAA,UAAAC,KAAA,QAAA,kBAAAA,KAAA,IAAA,GACAsP,EAAAqD,QAAAhS,KAAAwR,EAAApS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,iBAAAW,KAAA,WACA2O,EAAAsD,UAAAF,OAAAP,EAAApS,OAAA,UAAAC,KAAA,QAAA,oBAAAA,KAAA,IAAA,GACAsP,EAAAsD,UAAAjS,KAAAwR,EAAApS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,mBAAAW,KAAA,aACA2O,EAAAuD,MAAAH,OAAAP,EAAApS,OAAA,UAAAC,KAAA,QAAA,gBAAAA,KAAA,IAAA,GACAsP,EAAAuD,MAAAlS,KAAAwR,EAAApS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,eAAAW,KAAA,SACA2O,EAAAwD,KAAAJ,OAAAP,EAAApS,OAAA,UAAAC,KAAA,QAAA,eAAAA,KAAA,IAAA,GACAsP,EAAAwD,KAAAnS,KAAAwR,EAAApS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,cAAAW,KAAA,QAGA,QAAAwO,KACA,GAAA4D,GAAA,EACAC,EAAA,EACA1D,GAAAmD,QAAAC,OAAA1S,KAAA,KAAAJ,EAAAqT,GAAAjT,KAAA,KAAA+S,EAAA,EAAAC,GACA1D,EAAAmD,QAAA9R,KAAAX,KAAA,IAAAJ,EAAAsT,GAAAlT,KAAA,IAAA+S,EAAA,EAAAC,EAAA,GACA1D,EAAAqD,QAAAD,OAAA1S,KAAA,KAAAJ,EAAAqT,GAAAjT,KAAA,KAAA+S,EAAA,EAAAC,GACA1D,EAAAqD,QAAAhS,KAAAX,KAAA,IAAAJ,EAAAsT,GAAAlT,KAAA,IAAA+S,EAAA,EAAAC,EAAA,GACA1D,EAAAsD,UAAAF,OAAA1S,KAAA,KAAAJ,EAAAqT,GAAAjT,KAAA,KAAA+S,EAAA,EAAAC,GACA1D,EAAAsD,UAAAjS,KAAAX,KAAA,IAAAJ,EAAAsT,GAAAlT,KAAA,IAAA+S,EAAA,EAAAC,EAAA,GACA1D,EAAAuD,MAAAH,OAAA1S,KAAA,KAAAJ,EAAAqT,GAAAjT,KAAA,KAAA+S,EAAA,EAAAC,GACA1D,EAAAuD,MAAAlS,KAAAX,KAAA,IAAAJ,EAAAsT,GAAAlT,KAAA,IAAA+S,EAAA,EAAAC,EAAA,GACA1D,EAAAwD,KAAAJ,OAAA1S,KAAA,KAAAJ,EAAAqT,GAAAjT,KAAA,KAAA+S,EAAA,EAAAC,GACA1D,EAAAwD,KAAAnS,KAAAX,KAAA,IAAAJ,EAAAsT,GAAAlT,KAAA,IAAA+S,EAAA,EAAAC,EAAA,GAGA,QAAAG,KAEA,IADAnE,EAAA2D,QAAAR,EAAApS,OAAA,QAAAC,KAAA,QAAA,gBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,WAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GACAwW,IADA9I,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,IACAzH,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,MAEA6K,IAAA,GAKAlB,EAAApS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAoL,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,MAEAhS,KAAA,KAAAgM,EAAAzB,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,MACAhS,KAAA,KAAA4J,EAAAW,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADAgP,EAAA4D,UAAAT,EAAApS,OAAA,QAAAC,KAAA,QAAA,kBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,aAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GACAwW,IADA9I,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAAmV,IACAzH,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAA2L,MAEA6K,IAAA,GAKAlB,EAAApS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,qBAAAoL,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAAmV,MAEAhS,KAAA,KAAAgM,EAAAzB,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAAmV,MACAhS,KAAA,KAAA4J,EAAAW,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADAgP,EAAA8D,KAAAX,EAAApS,OAAA,QAAAC,KAAA,QAAA,aAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,QAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GACAwW,IADA9I,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAAmV,IACAzH,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAA2L,MAEA6K,IAAA,GAKAlB,EAAApS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,gBAAAoL,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAAmV,MAEAhS,KAAA,KAAAgM,EAAAzB,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAAmV,MACAhS,KAAA,KAAA4J,EAAAW,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADAgP,EAAAyD,QAAAN,EAAApS,OAAA,QAAAC,KAAA,QAAA,gBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,WAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GACAwW,IADA9I,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,IACAzH,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,MAEA6K,IAAA,GAKAlB,EAAApS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAoL,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,MAEAhS,KAAA,KAAAgM,EAAAzB,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,MACAhS,KAAA,KAAA4J,EAAAW,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADAgP,EAAA6D,MAAAV,EAAApS,OAAA,QAAAC,KAAA,QAAA,cAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,SAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GACAwW,IADA9I,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAAmV,IACAzH,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAA2L,MAEA6K,IAAA,GAKAlB,EAAApS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,iBAAAoL,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAAmV,MAEAhS,KAAA,KAAAgM,EAAAzB,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAAmV,MACAhS,KAAA,KAAA4J,EAAAW,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,SAMA,QAAAqS,KACArD,EAAA2D,QAAA3S,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,WAAA3K,UAEAuG,EAAAyD,QAAAzS,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,WAAA3K,UAEAuG,EAAA4D,UAAA5S,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,aAAA3K,UAEAuG,EAAA6D,MAAA7S,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,SAAA3K,UAEAuG,EAAA8D,KAAA9S,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,QAAA3K,UAQA,QAAA6J,KAeA,IAXAH,EAAArS,OAAA,iBACAb,aACAC,SAAA,KACAoU,MAAA,KACAtT,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,WAAA3K,UAMA5L,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,WAAA3K,OAAA3L,OAAAD,IAAA,CACA,GAAA0W,GAAA,oBAAAhJ,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,GAGAzH,GAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,OAAA,EACA2J,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA6M,GAAAzB,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,OAEAhS,KAAA,KAAA,SAAAb,GACA,MAAAyK,GAAAW,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAmS,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,IAAA,GAeA,IAPAmS,EAAArS,OAAA,mBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,aAAA3K,UAGA5L,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,aAAA3K,OAAA3L,OAAAD,IAAA,CACA,GAAA0W,GAAA,sBAAAhJ,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAAmV,GAGAzH,GAAA6I,EAAA,aAAA3K,OAAA5L,GAAA2L,OAAA,EACA2J,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA6M,GAAAzB,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAAmV,OAEAhS,KAAA,KAAA,SAAAb,GACA,MAAAyK,GAAAW,EAAA6I,EAAA,aAAA3K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAmS,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPAmS,EAAArS,OAAA,cACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,QAAA3K,UAGA5L,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,QAAA3K,OAAA3L,OAAAD,IAAA,CAGA,GAAA0W,GAAA,iBAAAhJ,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAAmV,IACAwB,EAAAjJ,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAA2L,KAKA+B,GAAA6I,EAAA,QAAA3K,OAAA5L,GAAA2L,OAAA,EACA2J,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA6M,GAAAzB,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAAmV,OAEAhS,KAAA,KAAA,SAAAb,GACA,MAAAyK,GAAAW,EAAA6I,EAAA,QAAA3K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAmS,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,IAAA;CAaA,IAPAmS,EAAArS,OAAA,iBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,WAAA3K,UAGA5L,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,WAAA3K,OAAA3L,OAAAD,IAAA,CAGA,GAAA0W,GAAA,oBAAAhJ,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,IACAwB,EAAAjJ,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,KAKAgL,IAAA,EACArB,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA6M,GAAAzB,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAAmV,OAEAhS,KAAA,KAAA,SAAAb,GACA,MAAAyK,GAAAW,EAAA6I,EAAA,WAAA3K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAmS,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPAmS,EAAArS,OAAA,eACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAsN,GAAAlC,EAAA6I,EAAA,SAAA3K,UAGA5L,EAAA,EAAAA,EAAA0N,EAAA6I,EAAA,SAAA3K,OAAA3L,OAAAD,IAAA,CAEA,GAAA0W,GAAA,kBAAAhJ,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAAmV,IACAwB,EAAAjJ,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAA2L,KAKAgL,IAAA,EACArB,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA6M,GAAAzB,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAAmV,OAEAhS,KAAA,KAAA,SAAAb,GACA,MAAAyK,GAAAW,EAAA6I,EAAA,SAAA3K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAmS,EAAAnT,UAAAuU,GACAtU,aACAC,SAAA,KACAc,KAAA,IAAA,IA2QA,QAAAqN,GAAAlO,EAAAtC,GAqBA,MAnBAmB,IAAAyL,KAAAtK,GAAA2I,QAAA,SAAAQ,GACAnJ,EAAAmJ,IAAAnJ,EAAAmJ,GACA,OAAAA,IACAA,IAAAiC,GAQAA,EAAAjC,GAAA,OAAAnI,MACA6R,IAAA7S,EAAA6S,IACAxJ,MAAArJ,EAAAmJ,KATAiC,EAAAjC,IACAG,SACAuJ,IAAA7S,EAAA6S,IACAxJ,MAAArJ,EAAAmJ,SAYAnJ,EA/kCA,GAAA4L,GAAAtO,SAAA4P,cAAA,eACAoH,GAEAC,SAAA,WACAC,MAAA,QACAC,SAAA,WACAC,MAAA,QACAC,OAAA,SACAC,OAAA,SACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,SAAA,WACAC,UAAA,YACAC,WAAA,aACAC,MAAA,QACAC,SAAA,WACAC,QAAA,UACAC,MAAA,QACAC,UAAA,YACAC,OAAA,SACAC,KAAA,OACAC,KAAA,OACAC,WAAA,aACAC,MAAA,QACAC,OAAA,SACAC,QAAA,UACAC,YAAA,cACAC,WAAA,aACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,QAAA,UACAC,UAAA,YACAC,WAAA,aACAC,UAAA,YACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,WAAA,aACAC,QAAA,UACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,YAAA,cACAC,UAAA,YACAC,SAAA,WACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,WAAA,aACAC,UAAA,YACAC,OAAA,SACAC,SAAA,WACAC,OAAA,SACAC,WAAA,aACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,QAAA,UACAC,SAAA,WACAC,QAAA,UACAC,aAAA,eACAC,SAAA,WACAC,SAAA,WACAC,WAAA,aACAC,QAAA,UACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,WAAA,aACAC,OAAA,SACAC,QAAA,UACAC,UAAA,YACAC,OAAA,SACAC,UAAA,YACAC,OAAA,SACAC,QAAA,UACAC,QAAA,UACAC,MAAA,QACAC,OAAA,SACAC,OAAA,SACAC,UAAA,YACAC,QAAA,UACAC,gBAAA,mBACAC,eAAA,kBACAC,QAAA,UACAC,YAAA,cACAC,eAAA,kBACAC,OAAA,SACAC,UAAA,YACAC,SAAA,WACAC,OAAA,SACAC,MAAA,QACAC,QAAA,UACAC,UAAA,YACAC,UAAA,aACAC,SAAA,WACAC,UAAA,YACAC,QAAA,UACAC,WAAA,aACAC,WAAA,aACAC,SAAA,WACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,KAAA,OACAC,WAAA,aACAC,OAAA,SACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,UAAA,YACAC,gBAAA,mBACAC,WAAA,aACAC,OAAA,SACAC,UAAA,YACAC,OAAA,SACAC,QAAA,UACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,SAAA,WACAC,UAAA,YACAC,OAAA,SACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,SAAA,WACAC,OAAA,SACAC,QAAA,UACAC,UAAA,YACAC,QAAA,UACAC,SAAA,WACAC,UAAA,YACAC,YAAA,cACAC,OAAA,SACAC,KAAA,OACAC,WAAA,aACAC,QAAA,UACAC,SAAA,WACAC,UAAA,YACAC,UAAA,YACAC,aAAA,eACAC,SAAA,WACAC,IAAA,MACAC,UAAA,YACAC,MAAA,QACAC,WAAA,aACAC,SAAA,WACAC,UAAA,YACAC,OAAA,SACAC,QAAA,UACAC,UAAA,YACAC,WAAA,aACAC,OAAA,SACAC,OAAA,SACAC,UAAA,YACAC,KAAA,OACAC,UAAA,YACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,WAAA,aACAC,OAAA,SACAC,YAAA,cACAC,WAAA,aACAC,QAAA,UACAC,aAAA,eACAC,QAAA,UACAC,SAAA,WACAC,QAAA,UACAC,OAAA,SACAC,QAAA,UACAC,OAAA,SACAC,SAAA,WACAC,QAAA,UACAC,cAAA,gBACAC,YAAA,cACAC,UAAA,YACAC,QAAA,UACAC,SAAA,WACAC,OAAA,SACAC,UAAA,YACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,SAAA,WACAC,SAAA,WACAC,WAAA,aACAC,gBAAA,mBACAC,OAAA,SACAC,UAAA,YACAC,OAAA,SACAC,QAAA,UACAC,WAAA,cACAC,WAAA,cACAC,aAAA,gBACAC,QAAA,UACAC,YAAA,cACAC,eAAA,kBACAC,SAAA,YACAC,OAAA,SACAC,QAAA,UACAC,WAAA,cACAC,YAAA,cACAC,aAAA,gBACAC,kBAAA,qBACAC,aAAA,eACAC,YAAA,cACAC,gBAAA,mBACAC,WAAA,aACAC,aAAA,gBACAC,OAAA,SACAC,QAAA,UACAC,QAAA,UACAC,UAAA,aACAC,OAAA,SACAC,OAAA,SACAC,QAAA,UACAC,KAAA,OACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,UACAC,OAAA,SACAC,SAAA,WACAC,UAAA,YACAC,KAAA,OACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,WAAA,aACAC,WAAA,aACAC,SAAA,WACAC,SAAA,WACAC,UAAA,YACAC,aAAA,eACAC,OAAA,SACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,SAAA,WACAC,OAAA,SACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,SAAA,WACAC,KAAA,OACAC,OAAA,SACAC,UAAA,YACAC,QAAA,UACAC,QAAA,UACAC,MAAA,QACAC,UAAA,YACAC,YAAA,cACAC,SAAA,WACAC,OAAA,SACAC,MAAA,QACAC,SAAA,WACAC,QAAA,UACAC,OAAA,SACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,WAAA,aACAC,SAAA,WACAC,WAAA,aACAC,YAAA,cACAC,aAAA,eACAC,YAAA,cACAC,YAAA,eACAC,UAAA,YACAC,QAAA,UACAC,YAAA,cACAC,SAAA,WACAC,YAAA,cACAC,SAAA,WACAC,UAAA,YACAC,KAAA,OACAC,WAAA,aACAC,QAAA,UACAC,WAAA,aACAC,OAAA,SACAC,WAAA,aACAC,QAAA,UACAC,QAAA,UACAC,UAAA,YACAC,UAAA,YACAC,QAAA,UACAC,QAAA,UACAC,UAAA,YACAC,SAAA,WACAC,MAAA,QACAC,aAAA,eACAC,UAAA,YACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,MAAA,QACAC,QAAA,UACAC,QAAA,UACAC,KAAA,OACAC,QAAA,UACAC,OAAA,SACAC,QAAA,UACAC,WAAA,aACAC,UAAA,YACAC,QAAA,UACAC,QAAA,UACAC,UAAA,YACAC,UAAA,YACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,aAAA,gBACAC,gBAAA,mBACAC,eAAA,kBACAC,UAAA,YACAC,SAAA,WACAC,YAAA,cACAC,YAAA,cACAC,YAAA,eACAC,OAAA,SACAC,SAAA,WACAC,gBAAA,mBACAC,gBAAA,mBACAC,YAAA,eACAC,SAAA,WACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAC,UAAA,YACAC,aAAA,eACAC,aAAA,eACAC,WAAA,aACAC,WAAA,aACAC,WAAA,aACAC,QAAA,UACAC,SAAA,WACAC,OAAA,SACAC,UAAA,YACAC,YAAA,cACAC,SAAA,WACAC,SAAA,YAEApW,EAAA,gBAEAnI,GACA5N,IAAA,EACA+N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEA4D,EAAA/D,EAAAC,YACA+D,EAAA,IACAnP,EAAAkP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAjO,EAAA4R,EAAA9D,EAAA5N,IAAA4N,EAAAI,OAEAoe,EAAAzrB,GAAA0rB,SAAA,SAAAvqB,GACA,MAAAA,GAAA6S,MACA9G,KACA6G,EAAA/T,GAAAsE,OAAA,QACA6N,EAAAnS,GAAAsE,OAAA,KAGAiI,KAEAyB,EAAAhO,GAAAyB,MAAAgR,SAEA7G,EAAA5L,GAAAyB,MAAAgR,SAIAmB,GAFA5T,GAAAyB,MAAAkqB,aAEA3rB,GAAA6B,IAAA2M,QAEAsF,EAAA9T,GAAA6B,IAAA2M,OAEAC,EAAAzO,GAAA6B,IAAA4M,OAGAoC,EAAA7Q,GAAA8B,OAAA,eAAAC,OAAA,OAEAoS,EAAAtD,EACA9O,OAAA,KACAC,KAAA,YAAA,aAAAiL,EAAAC,KAAA,IAAAD,EAAA5N,IAAA,KAGA4U,EAAAE,EAAApS,OAAA,KAAAC,KAAA,QAAA,aACAiS,GACAlS,OAAA,QACAC,KAAA,IAAA,KACAA,KAAA,IAAA,IACAA,KAAA,cAAA,UACAW,KAAA,OAEA,IAAAuR,GAAAC,EAAApS,OAAA,KAAAC,KAAA,QAAA,aACAkS,GAAAnS,OAAA,OAGA,IAAAmT,IAAA,GACAD,GAAA,GACA3D,GACAmD,WACAE,WACAC,aACAC,SACAC,QAGAN,IAEA,IAAAxD,MAEAoD,EAAAD,EAAApS,OAAA,QAAAC,KAAA,QAAA,UAmZAhC,IAAA0O,IAAA,wBAAAW,EAAA,SAAAjP,EAAAqC,GA6IA,QAAAmpB,KAIA,GAAA7b,GAAA/B,EAAA4B,OAAA5P,GAAA8D,MAAArD,MAAA,IAGAorB,EAAAJ,EAAAlf,EAAA6I,EAAA,WAAA3K,OAAAsF,EAAA,GACA+b,EAAAvf,EAAA6I,EAAA,WAAA3K,OAAAohB,EAAA,GACAE,EAAAxf,EAAA6I,EAAA,WAAA3K,OAAAohB,GACAG,EAAAjc,EAAA+b,EAAA9X,IAAA+X,EAAA/X,IAAAjE,EAAAgc,EAAAD,CAEAE,GAAAxhB,OAAA,GACAyhB,EAAAjqB,KAAA,YAAA,aAAAgM,EAAAge,EAAAhY,KAAA,IAAApI,EAAAogB,EAAAxhB,OAAA,KACAyhB,EAAAnqB,OAAA,QAAAa,KAAAoR,EAAAiY,EAAAxhB,QAAAxI,KAAA,YAAA,oBACAiqB,EAAAnqB,OAAA,UAAAE,KAAA,IAAA,KAEAiqB,EAAAnqB,OAAA,UAAAE,KAAA,IAAA,GACAiqB,EAAAnqB,OAAA,QAAAa,KAAA,IAKA,IAAAupB,GAAAT,EAAAlf,EAAA6I,EAAA,aAAA3K,OAAAsF,EAAA,GACAoc,EAAA5f,EAAA6I,EAAA,aAAA3K,OAAAyhB,EAAA,GACAE,EAAA7f,EAAA6I,EAAA,aAAA3K,OAAAyhB,GACAG,EAAAtc,EAAAoc,EAAAnY,IAAAoY,EAAApY,IAAAjE,EAAAqc,EAAAD,CAMAE,GAAA7hB,OAAA,GACA8hB,EAAAtqB,KAAA,YAAA,aAAAgM,EAAAqe,EAAArY,KAAA,IAAApI,EAAAygB,EAAA7hB,OAAA,KACA8hB,EAAAxqB,OAAA,QAAAa,KAAAoR,EAAAsY,EAAA7hB,QAAAxI,KAAA,YAAA,oBACAsqB,EAAAxqB,OAAA,UAAAE,KAAA,IAAA,KAEAsqB,EAAAxqB,OAAA,UAAAE,KAAA,IAAA,GACAsqB,EAAAxqB,OAAA,QAAAa,KAAA,IAKA,IAAA4pB,GAAAd,EAAAlf,EAAA6I,EAAA,QAAA3K,OAAAsF,EAAA,GACAyc,EAAAjgB,EAAA6I,EAAA,QAAA3K,OAAA8hB,EAAA,GACAE,EAAAlgB,EAAA6I,EAAA,QAAA3K,OAAA8hB,GACAG,EAAA3c,EAAAyc,EAAAxY,IAAAyY,EAAAzY,IAAAjE,EAAA0c,EAAAD,CAEAE,GAAAliB,OAAA,GACAmiB,EAAA3qB,KAAA,YAAA,aAAAgM,EAAA0e,EAAA1Y,KAAA,IAAApI,EAAA8gB,EAAAliB,OAAA,KACAmiB,EAAA7qB,OAAA,QAAAa,KAAAoR,EAAA2Y,EAAAliB,QACAmiB,EAAA7qB,OAAA,UAAAE,KAAA,IAAA,KAEA2qB,EAAA7qB,OAAA,UAAAE,KAAA,IAAA,GACA2qB,EAAA7qB,OAAA,QAAAa,KAAA,IAKA,IAAAiqB,GAAAnB,EAAAlf,EAAA6I,EAAA,WAAA3K,OAAAsF,EAAA,GACA8c,EAAAtgB,EAAA6I,EAAA,WAAA3K,OAAAmiB,EAAA,GACAE,EAAAvgB,EAAA6I,EAAA,WAAA3K,OAAAmiB,GACAG,EAAAhd,EAAA8c,EAAA7Y,IAAA8Y,EAAA9Y,IAAAjE,EAAA+c,EAAAD,CAEAE,GAAAviB,OAAA,GACAwiB,EAAAhrB,KAAA,YAAA,aAAAgM,EAAA+e,EAAA/Y,KAAA,IAAApI,EAAAmhB,EAAAviB,OAAA,KACAwiB,EAAAlrB,OAAA,QAAAa,KAAAoR,EAAAgZ,EAAAviB,QACAwiB,EAAAlrB,OAAA,UAAAE,KAAA,IAAA,KAEAgrB,EAAAlrB,OAAA,UAAAE,KAAA,IAAA,GACAgrB,EAAAlrB,OAAA,QAAAa,KAAA,IAKA,IAAAsqB,GAAAxB,EAAAlf,EAAA6I,EAAA,SAAA3K,OAAAsF,EAAA,GACAmd,EAAA3gB,EAAA6I,EAAA,SAAA3K,OAAAwiB,EAAA,GACAE,EAAA5gB,EAAA6I,EAAA,SAAA3K,OAAAwiB,GACAG,EAAArd,EAAAmd,EAAAlZ,IAAAmZ,EAAAnZ,IAAAjE,EAAAod,EAAAD,CAIAE,GAAA5iB,OAAA,GACA6iB,EAAArrB,KAAA,YAAA,aAAAgM,EAAAof,EAAApZ,KAAA,IAAApI,EAAAwhB,EAAA5iB,OAAA,KACA6iB,EAAAvrB,OAAA,QAAAa,KAAAoR,EAAAqZ,EAAA5iB,QACA6iB,EAAAvrB,OAAA,UAAAE,KAAA,IAAA,KAEAqrB,EAAAvrB,OAAA,UAAAE,KAAA,IAAA,GACAqrB,EAAAvrB,OAAA,QAAAa,KAAA,KAKAoN,EAAA,IACAkc,EAAAnqB,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACAsqB,EAAAxqB,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACA2qB,EAAA7qB,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACAgrB,EAAAlrB,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACAqrB,EAAAvrB,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,eAEAiqB,EAAAnqB,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACAsqB,EAAAxqB,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACA2qB,EAAA7qB,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACAgrB,EAAAlrB,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACAqrB,EAAAvrB,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,cApPA,GAAA5B,EAAA,KAAAA,EAIA4N,GAAA1L,QAAA,KAAAtC,GAAAsM,IAAA7J,EAAA,SAAAtB,GACA,MAAAA,GAAA6S,QAEApI,EAAAtJ,QAAA,EAAA,MAEA6S,IACAhI,IACAxO,OAAAgQ,iBAAA,SAAAxB,GAMAnO,EAAA,aAAAW,SAAA,UACAK,GAAAgB,UAAA,aAAAR,GAAA,QAAA,WACA4U,EAAApV,GAAA8B,OAAArB,MAAAuB,KAAA,YACAsS,IACAtU,GAAA8B,OAAArB,MAAA+D,QAAA,UAAA,GACAxF,EAAA,SAAA0B,IAAA,MAIA1B,EAAA,SAAAsuB,cACAC,OAAA,SAAAC,EAAA1kB,GACAI,QAAAC,IAAAsM,EACA,IAAAgY,GAAAzuB,EAAAgF,IAAAyR,EAAA,SAAAiY,GACA,GAAA,IAAAA,EAAAzoB,cAAA0oB,QAAAH,EAAAI,KAAA3oB,eACA,MAAAyoB,IAGA5kB,GAAA2kB,IAUA3rB,OAAA,SAAA2F,EAAAomB,GACA7uB,EAAA+I,KAAA0N,EAAA,SAAAnL,EAAAE,GACAA,IAAAqjB,EAAArc,KAAAhH,QACA4K,EAAA9K,KAKAtL,EAAA,aAAAY,YAAA,UACA0U,MAQA,IAAA2X,GAAA9X,EAAApS,OAAA,KACAC,KAAA,QAAA,iBACAxC,MAAA,UAAA,OACAysB,GAAAlqB,OAAA,UACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAiqB,EAAAlqB,OAAA,QACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAAsqB,GAAAnY,EAAApS,OAAA,KACAC,KAAA,QAAA,mBACAxC,MAAA,UAAA,OACA8sB,GAAAvqB,OAAA,UACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAsqB,EAAAvqB,OAAA,QACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAA2qB,GAAAxY,EAAApS,OAAA,KACAC,KAAA,QAAA,cACAxC,MAAA,UAAA,OACAmtB,GAAA5qB,OAAA,UACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACA2qB,EAAA5qB,OAAA,QACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAAgrB,GAAA7Y,EAAApS,OAAA,KACAC,KAAA,QAAA,iBACAxC,MAAA,UAAA,OACAwtB,GAAAjrB,OAAA,UACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAgrB,EAAAjrB,OAAA,QACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAAqrB,GAAAlZ,EAAApS,OAAA,KACAC,KAAA,QAAA,eACAxC,MAAA,UAAA,OACA6tB,GAAAtrB,OAAA,UACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAqrB,EAAAtrB,OAAA,QACAC,KAAA,iBAAA,QACAA,KAAA,IAAA,GACAA,KAAA,KAAA,SAGAoS,EACA5T,GAAA,YAAA,WACA8rB,EAAA9sB,MAAA,UAAA,MACAysB,EAAAzsB,MAAA,UAAA,MACAmtB,EAAAntB,MAAA,UAAA,MACAwtB,EAAAxtB,MAAA,UAAA,MACA6tB,EAAA7tB,MAAA,UAAA,QAGAgB,GAAA,WAAA,WACA8rB,EAAA9sB,MAAA,UAAA,QACAysB,EAAAzsB,MAAA,UAAA,QACAmtB,EAAAntB,MAAA,UAAA,QACAwtB,EAAAxtB,MAAA,UAAA,QACA6tB,EAAA7tB,MAAA,UAAA,UAGAgB,GAAA,YAAAorB,QCv8BA5sB,EAAAP,UAAA8I,MAAA,WAyLA,QAAAumB,GAAAze,EAAAf,GACAtP,EAAA,WAAA+uB,QACA/uB,EAAA,WAAA+I,KAAA,WACAimB,EAAA3e,EAAAf,GACAtP,EAAA,oBAAA6B,KAAA,iJAAAwO,EAAAf,GAAA2f,IAAA,qCAAA5e,EAAAf,GAAA4f,GAAA,yBAOA,QAAAF,GAAAG,EAAAtvB,GACA,GAAAuvB,MACAC,EAAApf,KAAAqf,MAAAH,EAAAtvB,GAAAqvB,IACAK,EAAAtf,KAAAqf,MAAAH,EAAAtvB,GAAAovB,IAEAO,YAAAC,EAAA,UAAAF,EAAAF,EAAAF,EAAAC,EAAAvvB,GACA6vB,EAAA,UAAAN,EAAA,GAGA,QAAAK,GAAAE,EAAAJ,EAAAF,EAAAF,EAAAC,EAAAvvB,GACA,IAAA+vB,EAAA,EAAAA,EAAAP,EAAAO,IACAR,EAAAjsB,KAAA,gDAAAgsB,EAAAtvB,GAAAqvB,GAAA,WAEA,KAAAU,EAAA,EAAAA,EAAAL,EAAAK,IACA5vB,EAAA2vB,GAAA5sB,OAAA,gDAAAosB,EAAAtvB,GAAAovB,IAAA,WAEA,OAAAG,GAIA,QAAAM,GAAAC,EAAAP,EAAAvvB,GACAA,EAAA2vB,WAAA1vB,SACAE,EAAA2vB,GAAA5sB,OAAAqsB,EAAAvvB,IACAA,IACA6vB,EAAAC,EAAAP,EAAAvvB,IAgEA,QAAAgwB,GAAAC,GACA9vB,EAAA,YACA+C,OAAA,KACAC,KAAA,QAAA,SAEA+sB,KAAA/uB,GAAAsM,IAAAZ,EAAA,SAAAsjB,GACA,MAAAhvB,IAAAsM,IAAA0iB,EAAA,SAAA7tB,GACA,MAAAA,GAAA6M,EAAA7M,EAAA4O,OAGA9D,OAAAjM,GAAAyB,MAAAgR,SACAnQ,QAAA,EAAAysB,OACAxsB,OAAA,EAAAX,IAIAyK,OAAArM,GAAAyB,MAAA+Q,UAEAyc,iBAAA,EAAA9vB,GAAA,IAEA+vB,QAAAlvB,GAAAyB,MAAA+Q,UACAjQ,MAAAusB,GAEAK,WAAAC,EAAApuB,UAAA,UACAyB,KAAAiJ,GACAhJ,QACAX,OAAA,KACAvC,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAqwB,SAAArwB,KAGAwwB,MAAAF,WAAAnuB,UAAA,QACAyB,KAAA,SAAAtB,GACA,MAAAA,KAEAuB,QACAX,OAAA,QACAvC,MAAA,SAAA,WACAwC,KAAA,IAAA,SAAAb,GACA,MAAA8K,QAAA9K,EAAA4O,MAEA/N,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAwN,QAAAlL,EAAAyK,KAEA5J,KAAA,SAAA,SAAAb,GACA,MAAAkL,QAAAijB,cAEAttB,KAAA,QAAA,SAAAb,GACA,MAAA8K,QAAA9K,EAAA6M,KA3UA,GAAAuhB,KACAtB,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGAsB,IACAvB,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGAuB,IACAxB,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGAwB,IACAzB,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,EACAC,GAAA,KAGAyB,IACA1B,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGA0B,IACA3B,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGAxiB,IACAjJ,OACAotB,MAAA,IACArc,KAAA,WAEAA,KAAA,WAEA/Q,OACAotB,MAAA,IACArc,KAAA,aAEAA,KAAA,aAEA/Q,OACAotB,MAAA,IACArc,KAAA,sBAEAA,KAAA,sBAEA/Q,OACAotB,MAAA,IACArc,KAAA,yBAEAA,KAAA,yBAEA/Q,OACAotB,MAAA,GACArc,KAAA,cAEAA,KAAA,cAEA/Q,OACAotB,MAAA,GACArc,KAAA,kBAEAA,KAAA,kBAMA2a,EAAAoB,EACAjhB,EAAA,CACAwf,GAAAK,EAAA7f,GAEAtP,EAAA,kBAAAwB,GAAA,QAAA,WACA,GACAsvB,GADAC,EAAAjvB,SAAA9B,EAAAyB,MAAAC,MAGA,QADA1B,EAAA,aAAAY,YAAA,yBACAmwB,GACA,IAAA,GACAD,EAAAP,CACA,MACA,KAAA,GACAO,EAAAN,CACA,MACA,KAAA,GACAM,EAAAL,CACA,MACA,KAAA,GACAK,EAAAJ,CACA,MACA,KAAA,GACAI,EAAAH,CACA,MACA,KAAA,GACAG,EAAAF,EACA5wB,EAAA,aAAAY,YAAA,UAAAD,SAAA,yBACAX,EAAA,gBAAAW,SAAA,UAGAwuB,EAAA2B,EACAhC,EAAAK,EAAA7f,KAIAtP,EAAA,aAAAwB,GAAA,QAAA,WACAxB,EAAA,aAAAY,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,UACA2O,EAAAxN,SAAA9B,EAAAyB,MAAAC,OACAotB,EAAAK,EAAA7f,EACA,IAAA0hB,EACA,QAAA1hB,GACA,IAAA,GACA0hB,EAAA,yBACA,MACA,KAAA,GACAA,EAAA,uBACA,MACA,KAAA,GACAA,EAAA,uBACA,MACA,KAAA,GACAA,EAAA,uBAGAhxB,EAAA,iBAAA6B,KAAAmvB,EAAA7qB,eACAnG,EAAA,iBAAA6B,KAAAmvB,IA+CA,IAAApuB,GAAA,OACAzC,EAAA,EAIAuM,GAAAA,EAAA1H,IAAA,SAAA7C,GACA,MAAAA,GAAAsB,KAAAuB,IAAA,SAAAisB,EAAApxB,GAGA,OACA+M,EAAAqkB,EAAAJ,MACAxtB,EAAA4tB,EAAAzc,UAIA0c,MAAAlwB,GAAAmwB,OAAAD,QAEAA,MAAAxkB,EAGA,IAiBAojB,GAjBApjB,EAAAA,EAAA1H,IAAA,SAAAgrB,GACA,MAAAA,GAAAhrB,IAAA,SAAA7C,GAEA,OACA6M,EAAA7M,EAAAyK,EACAwkB,EAAAjvB,EAAAkB,EACAuJ,EAAAzK,EAAA6M,EACA+B,GAAA5O,EAAAuO,QAIA0f,EAAApvB,GAAA8B,OAAA,QACAC,OAAA,OACAC,KAAA,KAAA,WACAA,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAuT,GAAA,UAAA,UAEAoc,IAAApc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAmc,EAAAC,GACA9vB,EAAA,kBAAAwB,GAAA,QAAA,WACAxB,EAAA,YAAA+uB,QACAe,GAAApc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA1T,EAAA,kBAAAY,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,UACAmvB,EAAA9vB,EAAAyB,MAAAC,OAAAgS,EAAA,GACAmc,EAAAC,EACA,IAAAjwB,GAAAG,EAAAyB,MAAAC,MACAS,EAAAuK,EAAA1M,EAAAyB,MAAAC,OAAA,EACA2vB,YAAApkB,OAAA9K,EAAA4O,IAAA,KAAAlR,EAAA,IACAwxB,WAAArwB,GAAA8B,OAAArB,MAAAuB,KAAA,MAAAqK,OAAAijB,YAAA,CACApmB,SAAAC,IAAAhI,OCxRAnC,EAAAP,UAAA8I,MAAA,WA6DA,QAAA+oB,iBAAAC,OAAA/lB,OACAxL,EAAA,0BAAAY,YAAA,UACAZ,EAAA,IAAAuxB,QAAA5wB,SAAA,UACAX,EAAA,WAAA+uB,QACAyC,iBAAAC,KAAAF,SACAvxB,EAAA,iBAAA6B,KAAA6vB,WAAAlmB,QAIA,QAAAgmB,kBAAAG,GAEA,GAAAnC,KACA,IAAAmC,GAAAC,MACA,GAAAC,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAEA,IAAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,KAAAhyB,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACA,GAAAiyB,GAAA7hB,KAAAqf,MAAAqC,EAAA9xB,GAAA,GAEAkyB,mBAAAC,iBAAA,UAAAF,EAAAH,EAAAnC,EAAAqC,GAEAI,gBAAA,UAAAF,kBAAA,GAGA,QAAAE,iBAAAtC,EAAAH,EAAA3vB,GACAA,EAAA2vB,EAAA1vB,SACAE,EAAA2vB,GAAA5sB,OAAAysB,EAAA3vB,IACAA,IAGAoyB,gBAAAtC,EAAAH,EAAA3vB,IAMA,QAAAmyB,kBAAArC,EAAAuC,EAAAP,EAAAnC,EAAAqC,GACA,IAAAjC,EAAA,EAAAA,EAAAsC,EAAAtC,IAEAJ,EAAArsB,KAAA,gCAAA0uB,EAAAhyB,GAAA,eAAA8xB,EAAA9xB,GAAA,GAAA,WAGA,OAAA2vB,GAtGA,GAAAe,gBACA,EAAA,IACA,KAAA,KACA,MAAA,KACA,MAAA,IACA,KAAA,KACA,EAAA,IAEAC,SACA,EAAA,IACA,KAAA,KACA,MAAA,KACA,MAAA,KACA,KAAA,KACA,EAAA,IAGAoB,QACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IAMAF,YACA,0IAAAnB,aAAA,GAAA,GAAA,kCAAAA,aAAA,GAAA,GAAA,0DAAAA,aAAA,GAAA,GAAA,kCAAAA,aAAA,GAAA,GAAA,sBACA,0IAAAC,OAAA,GAAA,GAAA,kCAAAA,OAAA,GAAA,GAAA,0DAAAA,OAAA,GAAA,GAAA,kCAAAA,OAAA,GAAA,GAAA,sBACA,8KAAAoB,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,6DAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,uBAIAD,YAAApB,YAIAiB,kBAAAjB,cACAvwB,EAAA,iBAAA6B,KAAA6vB,WAAA,IACA1xB,EAAA,iBAAAW,SAAA,UAGAX,EAAA,mBAAA0F,MAAA,WACA,GAAAysB,SAAAnyB,EAAAyB,MAAAgC,KAAA,UACA2uB,OAAAX,KAAAzxB,EAAAyB,MAAAC,MACA4vB,iBAAAa,QAAAC,UAIApyB,EAAA,eAAA0F,MAAA,WACA,GAAAysB,SAAAnyB,EAAAyB,MAAAuB,KAAA,MACAovB,OAAAX,KAAAzxB,EAAAyB,MAAAC,MACA4vB,iBAAAa,QAAAC,YCzDA,WAqLA,QAAAlhB,KACAtO,EAAAnD,SAAA4P,cAAA,kBAAArB,YAAA,IACA7N,EAAA,IACA8N,EAAA,GAEAokB,EACArvB,KAAA,QAAAJ,EAAA,KACAI,KAAA,SAAA7C,EAAA,IAKA,QAAAmyB,GAAA7uB,EAAA8uB,GAEA,MAAA9uB,GAAA+uB,KAAA,SAAAvrB,EAAA2oB,GACA,MAAAA,GAAA2C,GAAAtrB,EAAAsrB,KAOA,QAAAE,GAAAhvB,EAAA8uB,GAEAG,EAAA/uB,KAAAgvB,EAAAJ,IACAvvB,KAAA,QAAA,aACAxC,MAAA,cAAA,OACAwC,KAAA,IAAA,IACAA,KAAA,IAAAJ,EAAAqL,EAAAA,EAEA,IAAAX,GAAAtM,GAAAsM,IAAA7J,EAAA,SAAAtB,GACA,OAAAA,EAAAowB,IAGAtlB,QAAAjM,GAAAyB,MAAAgR,SACAnQ,QAAA,EAAAgK,IACA/J,OAAA,EAAAX,IAEAyK,OAAArM,GAAAyB,MAAA+Q,UACAlQ,OAAAtC,GAAAuC,MAAAE,EAAA3D,SACA8yB,YAAA,GAAAzyB,GAAA,GAKA,IAAA0yB,GAAAR,EAAArwB,UAAA,YACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA2wB,YAKAC,GACA/vB,KAAA,QAAA,cACAA,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,cAAA+C,EAAA,IAAA,KAAAzC,EAAA,EAAA8N,EAAA,GAAApO,GAAA,MASAgzB,EAAAnvB,QACAX,OAAA,QACAC,KAAA,QAAA,OAIA6vB,EAAAG,OACA/wB,aACAC,SAAA,KACA+wB,KAAA,OACAjwB,KAAA,QAAA,GACAkwB,SAIAL,EACA5wB,aACAC,SAAA,KACA+wB,KAAA,QACAjwB,KAAA,QAAA,SAAAb,GACA,MAAA8K,SAAA9K,EAAAowB,MAEAvvB,KAAA,SAAAqK,OAAAijB,aACAttB,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,cAAA,EAAAoO,EAAAZ,OAAAxN,IAAA,MAEAmD,KAAA,QAAA,SAAAb,EAAAtC,GACA,MAAA,SAAAsC,EAAAgxB,QAAA,aAAAhxB,EAAA6S,IACA,yBACA,WAAA7S,EAAAgxB,QAAA,aAAAhxB,EAAA6S,IACA,yBACA,WAAA7S,EAAAgxB,QAAA,aAAAhxB,EAAA6S,IACA,yBACA,SAAA7S,EAAAgxB,QAAA,aAAAhxB,EAAA6S,IACA,yBACA,WAAA7S,EAAAgxB,OACA,eACA,SAAAhxB,EAAAgxB,OACA,eADA,QAmBA,IAAAC,GAAAf,EAAArwB,UAAA,uBACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA2wB,aAGAO,EAAAhB,EACArwB,UAAA,iBACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA2wB,YAKAO,GAAA3vB,QACAX,OAAA,QACAC,KAAA,QAAA,YACAqwB,EAAAL,OACAE,SAEAE,EAAA1vB,QACAX,OAAA,QACAC,KAAA,QAAA,kBACAowB,EAAAJ,OACAE,SAEAI,aAAAtyB,GAAAsE,OAAA,OACAiuB,iBAAAvyB,GAAAsE,OAAA,OACAkuB,WAAAxyB,GAAAsE,OAAA,OAEA8tB,EAAAnxB,aACAC,SAAA,KACAc,KAAA,YAAA,SAAAb,EAAAtC,GAGA,MAAA,cAAAoN,QAAA9K,EAAAowB,IAAAtkB,GAAA,KAAAZ,OAAAxN,GAAA,GAAA,MAEA8D,KAAA,SAAAxB,GAEA,MAAA,sBAAAowB,GAAA,OAAApwB,EAAA6S,IACA,MAEA,sBAAAud,GAAA,OAAApwB,EAAA6S,IACAue,iBAAApxB,EAAAowB,IAAA,IAEA,sBAAAA,EACAe,aAAAnxB,EAAAowB,IAEAiB,WAAArxB,EAAAowB,MAGAvvB,KAAA,KAAA,OACAA,KAAA,KAAA,OAEAqwB,EAAApxB,aACAC,SAAA,KACAc,KAAA,YAAA,SAAAb,EAAAtC,GAEA,MAAA,gBAAAwN,OAAAxN,GAAA,GAAA,MAEA8D,KAAA,SAAAxB,GACA,MAAAA,GAAA6S,MAEAhS,KAAA,KAAA,OACAA,KAAA,KAAA,QAMA,QAAA2vB,GAAArnB,GACA,GAAAmoB,IACAC,mBAAA,yCACAC,UAAA,gDACAC,mBAAA,0BAEA,OAAAH,GAAAnoB,GAtXA,GAAA1I,GAAA,IACAzC,EAAA,IACA8N,EAAA,GAOAokB,EAAArxB,GAAA8B,OAAA,kBAAAC,OAAA,OACAC,KAAA,QAAAJ,EAAA,KACAI,KAAA,SAAA7C,EAAA,GACAkyB,GAAAtvB,OAAA,QACAC,KAAA,QAAA,QACAA,KAAA,SAAA,QACAA,KAAA,OAAA,OAEA,IAAA6wB,GAAA7yB,GAAAyB,MAAA+Q,UACAjQ,OAAA,WAAA,aACAuwB,EAAA9yB,GAAAyB,MAAA+Q,UACAjQ,OAAA,OAAA,WASAmvB,GAPAL,EAAAtvB,OAAA,QACAY,KAAA,OACAX,KAAA,QAAA,oBACAxC,MAAA,cAAA,SACAwC,KAAA,IAAA,IACAA,KAAA,IAAA,IAEAqvB,EAAAtvB,OAAA,SAEAgwB,EAAAV,EAAArwB,UAAA,eACAyB,MAAA,OAAA,WACAC,QAAAX,OAAA,IAEAgwB,GAAAhwB,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,QAAA,IACAA,KAAA,SAAA,IACAA,KAAA,QAAA6wB,GAKAd,EAAAhwB,OAAA,QACAC,KAAA,IAAA,IACAA,KAAA,IAAA,GACAA,KAAA,KAAA,QACAxC,MAAA,cAAA,SACAmD,KAAAmwB,GAEA9yB,GAAA0O,IAAA,uBAAA,SAAAtO,EAAAqC,GAEA,GAAAswB,GAAA,qBAEArnB,EAAA4lB,EAAA7uB,EAAAswB,EAMA7iB,KACAuhB,EAAA/lB,EAAAqnB,GAEAp0B,OAAAgQ,iBAAA,SAAA,WACAuB,IACAuhB,EAAA/lB,EAAAqnB,KAGA/yB,GAAA8B,OAAA,QAAA0C,QAAA,YAAA,GACAxF,EAAA,QAAAW,SAAA,UAEAK,GAAA8B,OAAA,QACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAk0B,EAAA,qBACArnB,EAAA4lB,EAAA7uB,EAAAswB,GACAtB,EAAA/lB,EAAAqnB,EACA,IAAAC,GAAAhzB,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAAwD,QAAA,YAAA,GACAxF,EAAA,uBAAAY,YAAA,UAEAI,GAAAgB,UAAA,cAAAwD,QAAA,YAAA,GACAxF,EAAA,cAAAY,YAAA,UAEAozB,EAAAxuB,QAAA,YAAA,GACAxF,EAAAyB,MAAAd,SAAA,YAEAK,GAAA8B,OAAA,OACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAk0B,EAAA,YACArnB,EAAA4lB,EAAA7uB,EAAAswB,GACAtB,EAAA/lB,EAAAqnB,EACA,IAAAC,GAAAhzB,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAAwD,QAAA,YAAA,GACAxF,EAAA,uBAAAY,YAAA,UAEAI,GAAAgB,UAAA,cAAAwD,QAAA,YAAA,GACAxF,EAAA,cAAAY,YAAA,UAEAozB,EAAAxuB,QAAA,YAAA,GACAxF,EAAAyB,MAAAd,SAAA,YAEAK,GAAA8B,OAAA,QACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAk0B,EAAA,qBACArnB,EAAA4lB,EAAA7uB,EAAAswB,GACAtB,EAAA/lB,EAAAqnB,EACA,IAAAC,GAAAhzB,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAAwD,QAAA,YAAA,GACAxF,EAAA,uBAAAY,YAAA,UAEAI,GAAAgB,UAAA,cAAAwD,QAAA,YAAA,GACAxF,EAAA,cAAAY,YAAA,UAEAozB,EAAAxuB,QAAA,YAAA,GACAxF,EAAAyB,MAAAd,SAAA,YAIAK,GAAA8B,OAAA,cACAtB,GAAA,QAAA,SAAAW,EAAAtC,GAIA,GAAAm0B,GAAAhzB,GAAA8B,OAAArB,KAIAuyB,GAAAxuB,QAAA,YAAA,GACAxF,EAAAyB,MAAAd,SAAA,UAEAK,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GACAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GAEAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GACAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,KAIAxE,GAAA8B,OAAA,cACAtB,GAAA,QAAA,SAAAW,EAAAtC,GAIA,GAAAm0B,GAAAhzB,GAAA8B,OAAArB,KAIAuyB,GAAAxuB,QAAA,YAAA,GACAxF,EAAAyB,MAAAd,SAAA,UAEAK,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GACAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GAEAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,GACAxE,GAAAgB,UAAA,uBACAwD,QAAA,eAAA,UCrKAxF,EAAAP,UAAA8I,MAAA,WAqKA,QAAA0rB,GAAAtwB,EAAAf,GACAe,EAAAoF,KAAA,WAUA,IATA,GAEAmrB,GAFAvwB,EAAA3C,GAAA8B,OAAArB,MACA0yB,EAAAxwB,EAAAA,OAAAywB,MAAA,OAAAC,UAEA5kB,KACA6kB,EAAA,EACA/hB,EAAA,IACA3F,EAAAjJ,EAAAX,KAAA,KACAuxB,EAAAlD,WAAA1tB,EAAAX,KAAA,OACAwxB,EAAA7wB,EAAAA,KAAA,MAAAZ,OAAA,SAAAC,KAAA,IAAA,GAAAA,KAAA,IAAA4J,GAAA5J,KAAA,KAAAuxB,EAAA,MACAL,EAAAC,EAAAxtB,OACA8I,EAAAtM,KAAA+wB,GACAM,EAAA7wB,KAAA8L,EAAAglB,KAAA,MACAD,EAAAzvB,OAAA2vB,wBAAA9xB,IACA6M,EAAA9I,MACA6tB,EAAA7wB,KAAA8L,EAAAglB,KAAA,MACAhlB,GAAAykB,GACAM,EAAA7wB,EAAAZ,OAAA,SAAAC,KAAA,IAAA,GAAAA,KAAA,IAAA4J,GAAA5J,KAAA,OAAAsxB,EAAA/hB,EAAAgiB,EAAA,MAAA5wB,KAAAuwB,MAOA,QAAA/lB,KACA+C,IAEAyjB,EAAA1E,iBAAA,EAAAlf,EAAAuf,cAEAvf,EAAAkf,iBAAA,EAAArtB,GAAA,IACAgK,EAAArJ,OAAApD,EAAA,IAEAy0B,EAAAnyB,MAAAsO,GACA8jB,EAAApyB,MAAAmK,GAEAiF,EAAA7O,KAAA,QAAAJ,EAAAqL,EAAAC,KAAAD,EAAAG,OAAApL,KAAA,SAAA7C,EAAA8N,EAAA5N,IAAA4N,EAAAI,QAEAymB,EACA9xB,KAAA,YAAA,gBAAA7C,EAAA,KACAgH,KAAAytB,GACA5yB,UAAA,cACAmF,KAAA8sB,EAAAljB,EAAAuf,aAEAyE,EAAA5tB,KAAA0tB,GACAG,EAAAhyB,KAAA,IAAAJ,EAAA,IACAqyB,EAAAjyB,KAAA,IAAAJ,EAAA,IAEAsyB,EAAAlyB,KAAA,YAAA,SAAAb,GACA,MAAA,cAAA4O,EAAA5O,EAAAgzB,QAAA,IAAA,QAGAtC,EAAA7vB,KAAA,QAAA2xB,EAAArE,aACAttB,KAAA,IAAA,SAAAb,GACA,MAAAwyB,GAAAxyB,EAAAqS,MAAA,KAEAxR,KAAA,IAAA,SAAAb,GACA,MAAAyK,GAAAzK,EAAAqJ,SAEAxI,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAAqS,OAEAxR,KAAA,SAAA,SAAAb,GACA,MAAAhC,GAAAyM,EAAAzK,EAAAqJ,SAKA,QAAA0F,KACA,GAAAqE,GAAA9V,SAAA4P,cAAA,yBAAArB,WACAC,IACA5N,IAAA,GACA+N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEAtL,EAAA2S,EAAAtH,EAAAC,KAAAD,EAAAG,MAGAjO,EADAoV,EAAA,IACA,IAAAtH,EAAA5N,IAAA4N,EAAAI,OAEA,IAAAJ,EAAA5N,IAAA4N,EAAAI,OApPA3B,UACAyoB,OAAA,MAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,qBAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,qBAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,WAAAC,KAAA,KAAAC,KAAA,MAGA,IAGAzyB,GAAAzC,EAHAuT,EAAA1S,GAAAyB,MAAA+Q,UACAjQ,OAAA,UAAA,YAEA0K,IAEAiD,IAEA,IAAAH,GAAA/P,GAAAyB,MAAA+Q,UACAyc,iBAAA,EAAArtB,GAAA,IAEA+xB,EAAA3zB,GAAAyB,MAAA+Q,UAEA5G,EAAA5L,GAAAyB,MAAAgR,SACAlQ,OAAApD,EAAA,IAQAy0B,EAAA5zB,GAAA6B,IAAA2M,OACA/M,MAAAsO,GACAxC,OAAA,UAEAsmB,EAAA7zB,GAAA6B,IAAA2M,OACA/M,MAAAmK,GACA2B,OAAA,QACAE,WAAAzN,GAAAsE,OAAA,QAEAgwB,EAAAt0B,GAAA8B,OAAA,yBAAAC,OAAA,OAAAyC,QAAA,sBAAA,GAGAqM,EAAA7Q,GAAA8B,OAAA,yBAAAC,OAAA,OACAwyB,EAAA1jB,EACA9O,OAAA,KACAC,KAAA,YAAA,aAAAiL,EAAAC,KAAA,IAAAD,EAAA5N,IAAA,KAGAm1B,EAAAx0B,GAAAyL,KAAAC,QAAA,IAAA4H,OAAA,SAAAhJ,GACA,MAAA,WAAAA,GAGAoB,SAAA5B,QAAA,SAAA3I,GACAA,EAAAsJ,OAAA+pB,EAAAxwB,IAAA,SAAAwP,GACA,OAAAA,KAAAA,EAAAhJ,OAAArJ,EAAAqS,QAIAzD,EAAAzN,OAAAoJ,QAAA1H,IAAA,SAAA7C,GACA,MAAAA,GAAAgzB,UAEAR,EAAArxB,OAAAkyB,GAAAvF,iBAAA,EAAAlf,EAAAuf,cACA1jB,EAAAtJ,QAAA,EAAAtC,GAAAsM,IAAAZ,QAAA,SAAAvK,GACA,MAAAnB,IAAAsM,IAAAnL,EAAAsJ,OAAA,SAAAtJ,GACA,MAAAA,GAAAqJ,WAIA,IAAAspB,GAAAS,EAAAxyB,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,gBAAA7C,EAAA,KAEA40B,EAAAQ,EAAAxyB,OAAA,KACAC,KAAA,QAAA,aAEA+xB,GAAAhyB,OAAA,QACAC,KAAA,KAAA,IACAA,KAAA,KAAA,SACAA,KAAA,QAAA,oBACAW,KAAA,iCAEA,IAAAuxB,GAAAK,EAAAvzB,UAAA,QACAyB,KAAAiJ,SACAhJ,QAAAX,OAAA,KACAC,KAAA,QAAA,QACAA,KAAA,YAAA,SAAAb,GACA,MAAA,cAAA4O,EAAA5O,EAAAgzB,QAAA,IAAA,QAIAtC,EAAAqC,EAAAlzB,UAAA,QACAyB,KAAA,SAAAtB,GACA,MAAAA,GAAAsJ,SAEA/H,QAAAX,OAAA,OAEA8vB,GACA7vB,KAAA,QAAA2xB,EAAArE,aACAttB,KAAA,IAAA,SAAAb,GACA,MAAAwyB,GAAAxyB,EAAAqS,MAAA,IAEAxR,KAAA,IAAA,SAAAb,GACA,MAAAyK,GAAAzK,EAAAqJ,SAEAxI,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAAqS,OAEAxR,KAAA,SAAA,SAAAb,GACA,MAAAhC,GAAAyM,EAAAzK,EAAAqJ,SAEAhL,MAAA,OAAA,SAAA2B,GACA,MAAAuR,GAAAvR,EAAAqS,QAQA0gB,EACA1zB,GAAA,YAAA,SAAAW,GACAmzB,EAAA90B,MAAA,OAAAQ,GAAAyH,MAAAwI,MAAAjR,EAAA,yBAAAC,SAAAiO,KAAA,MACAonB,EAAA90B,MAAA,MAAAQ,GAAAyH,MAAAuI,MAAAhR,EAAA,yBAAAC,SAAAI,IAAA,MACAi1B,EAAA9vB,QAAA,UAAA,EACA,IAEAiwB,IAFAz0B,GAAAyH,MAAAwI,MACAjQ,GAAAyH,MAAAuI,MACAvR,SAAAC,iBAAA,UACAg2B,GAAAD,EAAA31B,OACA41B,GAAA,EACAC,YAAAF,EAAAC,GAAAE,SAEAN,EAAAzzB,KAAA,SAAA8zB,YAAA,MAAA,aAIAT,EACA1zB,GAAA,WAAA,SAAAW,GACAmzB,EAAA9vB,QAAA,UAAA,IAKA,IAAAqwB,GAAAN,EAAAvzB,UAAA,eACAyB,KAAA+xB,EAAAtuB,SACAxD,QAAAX,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,eAAA,GAAAA,EAAA,MAGAm1B,EAAAa,EAAA9yB,OAAA,QACAC,KAAA,IAAAJ,EAAA,IACAI,KAAA,QAAA,IACAA,KAAA,SAAA,IACAxC,MAAA,OAAAkT,GAEAuhB,EAAAY,EAAA9yB,OAAA,QACAC,KAAA,IAAAJ,EAAA,IACAI,KAAA,IAAA,GACAA,KAAA,KAAA,SACAxC,MAAA,cAAA,OACAmD,KAAA,SAAAxB,GACA,MAAAA,IAyFAgM,KACAxO,OAAAgQ,iBAAA,SAAAxB","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\r\n\r\ndocument.createElement(\"article\");\r\ndocument.createElement(\"section\");\r\n\r\nvar speed = -80;\r\nparallax(speed);\r\n\r\nfunction parallax(speed) {\r\n\r\n    var parallax = document.querySelectorAll(\".parallax\");\r\n    // console.log(parallax[0]);\r\n\r\n    window.onscroll = function() {\r\n        for (var i = 0; i < parallax.length; i++) {\r\n\r\n            //var position = $(el).position();\r\n            // var offset = [];\r\n            var $offset = $(parallax[i]).offset();\r\n            //console.log(offset);\r\n            var $windowHeight = window.height;\r\n            var $windowYOffset = window.pageYOffset / $offset.top;\r\n            // $windowYOffset[0] = 0;\r\n            //       console.log($windowYOffset);\r\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\r\n            // console.log(el+\",\"+i);\r\n\r\n            var extraY = [0, -10, -60, -40, 0, -20];\r\n\r\n            var elBackgrounPos = [];\r\n\r\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\r\n\r\n            //console.log(elBackgrounPos);\r\n\r\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\r\n        };\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////NAV\r\nfunction collapseNavbar() {\r\n    if ($(\".navbar\").offset().top > 50) {\r\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\r\n    } else {\r\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\r\n    }\r\n}\r\n\r\n$(window).scroll(collapseNavbar);\r\n$(document).ready(collapseNavbar);\r\n\r\n// jQuery for page scrolling feature - requires jQuery Easing plugin\r\n$(function() {\r\n    $('a.page-scroll').bind('click', function(event) {\r\n        event.preventDefault();\r\n        var $anchor = $(this);\r\n        $('html, body').stop().animate({\r\n            scrollTop: $($anchor.attr('href')).offset().top\r\n        }, 1500, 'easeInOutExpo');\r\n        event.preventDefault();\r\n    });\r\n});\r\n\r\n// Closes the Responsive Menu on Menu Item Click\r\n$('.navbar-collapse ul li a').click(function() {\r\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\r\n        $('.navbar-toggle:visible').click();\r\n    }\r\n});\r\n\r\n\r\n//when scrolling...\r\n$(window).scroll(function() {\r\n    if ($(window).scrollTop() >= 400) {\r\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\r\n    } else {\r\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\r\n    };\r\n\r\n\r\n    $('.target').each(function() {\r\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\r\n            var $id = $(this).attr('id');\r\n            $('#navigation li').removeClass('active');\r\n            $('#navigation li[id=' + $id + '1]').addClass('active');\r\n\r\n            var $current = $(this).attr('data-index');\r\n            // var $current = $(this).find('.section-title').text();\r\n            $('#current-section').html($current);\r\n        }\r\n    });\r\n\r\n});\r\n\r\n$(\"#navigation li\").on('click', function() {\r\n    $(this).parent().find(\"li\").removeClass(\"active\");\r\n    $(this).addClass(\"active\");\r\n});\r\n\r\n\r\n\r\n$('a[href*=#]:not([href=#])').click(function() {\r\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\r\n\r\n        var target = $(this.hash);\r\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n        if (target.length) {\r\n            $('html,body').animate({\r\n                scrollTop: target.offset().top\r\n            }, 500);\r\n            return false;\r\n        }\r\n    }\r\n    // });\r\n\r\n\r\n});\r\n\r\n\r\n/////////////////////////////Accordion\r\n// $(function() {\r\n//     var icons = {\r\n//         header: \"iconClosed\",\r\n//         activeHeader: \"iconOpen\",\r\n//         hoverHeader: 'iconHover'\r\n\r\n//     };\r\n//     $(\"#accordion\").accordion({\r\n//         icons: icons,\r\n//         heightStyle: \"content\"\r\n//     });\r\n// });\r\n\r\n/////////////////////////////Pills\r\n\r\n$('#pills-first a').click(function(e) {\r\n    e.preventDefault()\r\n    $(this).tab('show')\r\n});\r\n\r\n\r\n/////////////////////////////Video Links\r\n\r\n$('.js-play-video').click(function() {\r\n    var $target = $($(this).data('target'));\r\n    if($target.get(0)) {\r\n        $target.get(0).play();\r\n    }\r\n});\r\n\r\n/////////////////////////////SVG Infographic\r\n$(function() {\r\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\r\n        var $svg = $(this).find('svg');\r\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\r\n        var val_svg = '2/3';\r\n        asignVal_svg(val_svg);\r\n\r\n        function asignVal_svg(val) {\r\n            $('.btn-svg').removeClass('active');\r\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\r\n            if (val == '1/12') {\r\n                $('.svg-studyperiod').attr(\"opacity\", 0);\r\n                $('.svg-onemonth').attr(\"opacity\", 1);\r\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\r\n            } else {\r\n                $('.svg-studyperiod').attr(\"opacity\", 1);\r\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\r\n            }\r\n        }\r\n\r\n        $('.btn-svg').on('click', function() {\r\n            asignVal_svg($(this).val());\r\n        });\r\n\r\n        $('.controls-svg').on('click', function() {\r\n            asignVal_svg($(this).data('select'));\r\n        });\r\n    });\r\n});\r\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n\t//for (i = 0; i < usStates.features.length; i++) {\r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n\t\t//return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);\r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    //console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n           // console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            //console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n       // console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","(function() {\r\n  var slice = [].slice;\r\n\r\n  function queue(parallelism) {\r\n    var q,\r\n        tasks = [],\r\n        started = 0, // number of tasks that have been started (and perhaps finished)\r\n        active = 0, // number of tasks currently being executed (started but not finished)\r\n        remaining = 0, // number of tasks not yet finished\r\n        popping, // inside a synchronous task callback?\r\n        error = null,\r\n        await = noop,\r\n        all;\r\n\r\n    if (!parallelism) parallelism = Infinity;\r\n\r\n    function pop() {\r\n      while (popping = started < tasks.length && active < parallelism) {\r\n        var i = started++,\r\n            t = tasks[i],\r\n            a = slice.call(t, 1);\r\n        a.push(callback(i));\r\n        ++active;\r\n        t[0].apply(null, a);\r\n      }\r\n    }\r\n\r\n    function callback(i) {\r\n      return function(e, r) {\r\n        --active;\r\n        if (error != null) return;\r\n        if (e != null) {\r\n          error = e; // ignore new tasks and squelch active callbacks\r\n          started = remaining = NaN; // stop queued tasks from starting\r\n          notify();\r\n        } else {\r\n          tasks[i] = r;\r\n          if (--remaining) popping || pop();\r\n          else notify();\r\n        }\r\n      };\r\n    }\r\n\r\n    function notify() {\r\n      if (error != null) await(error);\r\n      else if (all) await(error, tasks);\r\n      else await.apply(null, [error].concat(tasks));\r\n    }\r\n\r\n    return q = {\r\n      defer: function() {\r\n        if (!error) {\r\n          tasks.push(arguments);\r\n          ++remaining;\r\n          pop();\r\n        }\r\n        return q;\r\n      },\r\n      await: function(f) {\r\n        await = f;\r\n        all = false;\r\n        if (!remaining) notify();\r\n        return q;\r\n      },\r\n      awaitAll: function(f) {\r\n        await = f;\r\n        all = true;\r\n        if (!remaining) notify();\r\n        return q;\r\n      }\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  queue.version = \"1.0.7\";\r\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\r\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\r\n  else this.queue = queue;\r\n})();\r\n","/* global d3, $, queue */\r\n// Dependency on queue.js\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    // Heights & Widths\r\n    var legendHeight = 60,\r\n\tlegendWidth = '100%',\r\n\tmapWidth = 600,\r\n\tmapHeight = 400;\r\n\r\n    var currentyear;\r\n    var svgContainer;\r\n    var opChgScale;\r\n\r\n    // Helper functions\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function initialize() {\r\n\tqueue()\r\n\t//should be town polym data\r\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\r\n\t//.defer(d3.json, \"us_states_5m.geo.json\")\r\n\t//should be opioid death data\r\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\r\n\t//.defer(d3.csv, \"us_pop.csv\")\r\n\t.awaitAll(generateMap);\r\n    }\r\n\r\n    function generateMap(error, results) {\r\n\r\n\tvar maTowns = results[0];\r\n\tvar maOpioid = results[1];\r\n\r\n\r\n\t$('.controls-map').click(function() {\r\n\t    $(\"#odMap_timeline\").val($(this).data('select'));\r\n\t    setSymbology($(this).data('select'));\r\n\t});\r\n\r\n\tfor (var i = 0; i < maTowns.features.length; i++) {\r\n\t    if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\r\n\t\tconsole.log('ASSERT failure for index: ' + i);\r\n\t\tconsole.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n\t\t// alert('Input data corrupted: generation of map terminated.');\r\n\t\treturn;\r\n            }\r\n\t    maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n\t}\r\n\r\n\tsvgContainer = d3.select(\"#odMap_map\")\r\n\t    .classed(\"svg-container\", true) //container class to make it responsive\r\n\t    .append(\"svg\")\r\n\t    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n\t    .attr(\"viewBox\", \"0 0 \"+mapWidth+\" \"+mapHeight)\r\n\t    //class to make it responsive\r\n\t    .classed(\"svg-content-responsive\", true)\r\n\t    .style(\"border\", \"0px solid steelblue\");\r\n\r\n\tvar tooltip = d3.select('#odMap_map').append('div')\r\n\t    .attr('class', 'hidden vis-tooltip');\r\n\r\n\t//#eff3ff\r\n\r\n\topChgScale = d3.scale.threshold()\r\n\t    .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\r\n\t    .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\r\n\topChgScale.domainStrings = function() {\r\n\t    return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64'\r\n\t    ]);\r\n\t};\r\n\r\n\r\n\tvar projection = d3.geo.conicConformal()\r\n\t    .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n\t    .rotate([71 + 30 / 60, -41])\r\n\t    .scale([10000])\r\n\t    .translate([mapWidth/1.8, mapHeight*1.1]);\r\n\r\n\tvar geoPath = d3.geo.path()\r\n\t    .projection(projection);\r\n\r\n\tsvgContainer.selectAll(\"path\")\r\n\t    .data(maTowns.features)\r\n\t    .enter()\r\n\t    .append(\"path\")\r\n\t    .classed(\"deathmap\", true)\r\n\t    .attr(\"d\", function(d, i) {\r\n\t\treturn geoPath(d);\r\n\t    })\r\n\t    .style(\"stroke\", \"#2f363d\")\r\n\t    .style(\"stroke-width\", \"0.1px\")\r\n\t    .style(\"fill\", \"white\")\r\n\t    .on('mousemove', function(d) {\r\n\t\tvar mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n\t\t    return parseInt(d);\r\n\t\t});\r\n\r\n\t\tvar style = 'left:'+((100*mouse[0]/mapWidth)+3)+'% !important;top:'+(100*mouse[1]/mapHeight)+'% !important;';\r\n\t\t// Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\r\n\t\tvar transformX= mouse[0] > mapWidth/2 ? '-160%' : 0,\r\n\t\t    transformY= mouse[1] > mapHeight/2 ? '-100%' : 0;\r\n\t\tstyle += 'transform: translate('+transformX+','+transformY+');';\r\n\r\n\t\tvar string_base = \"yr\";\r\n\t\tvar currentvalue = string_base.concat(currentyear);\r\n\t\tvar currentrate;\r\n\r\n\t\tif (d.properties[currentvalue] > 0) {\r\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n\t\t} else if (d.properties[currentvalue] === 0) {\r\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n\t\t} else {\r\n\t\t    currentrate = \"N/A*\";\r\n\t\t}\r\n\r\n\t\ttooltip.classed('hidden', false)\r\n\t\t    .attr('style', style)\r\n\t\t    .html(\"<strong>\" + toTitleCase(d.properties.TOWN) + \"</strong> | \" + currentrate);\r\n\t    })\r\n\r\n\t    .on('mouseover', function(d, i) {\r\n\t\td3.select(this).style('fill-opacity', 0.25)\r\n\t\t    .style(\"stroke\", \"white\")\r\n\t\t    .style(\"stroke-width\", \"2px\");\r\n\t    })\r\n\t    .on('mouseout', function(d, i) {\r\n\t\ttooltip.classed('hidden', true);\r\n\t\td3.selectAll('path.deathmap')\r\n\t\t    .style(\"fill-opacity\", 1)\r\n\t\t    .style(\"stroke\", \"#2f363d\")\r\n\t\t\t.style(\"stroke-width\", \"0.1px\");\r\n\t    });\r\n\r\n\r\n\tgetYear();\r\n\tgenerateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\r\n\r\n\r\n    } // generateMap\r\n\r\n    function getYear() {\r\n        // initial setting on load\r\n        $(\"#odMap_timeline\").val(2015);\r\n        setSymbology(2015);\r\n        $(\"#odMap_timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    }\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year;\r\n        $('#odMap_titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\r\n        $('#odMap_fromYear').html(year);\r\n\r\n        $('#odMap_source').html('Sources: <a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/programs/admin/dmoa/vitals/\">Massachusetts Registry of Vital Records and Statistics</a>, ' +\r\n                             '<br><a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/\">Massachusetts Department of Public Health</a>.</>');\r\n\r\n        svgContainer.selectAll(\"path.deathmap\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n\t    .attr(\"width\", legendWidth)\r\n\t    .attr(\"height\", legendHeight);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        //legendData.push({\r\n            //d: -9999,\r\n            //r: '#f1f1f1',\r\n            //s: 'N/A'\r\n        //});\r\n\tfor (var i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n\tvar unitWidth = 100/legendData.length;\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n\t    .attr(\"height\", legendHeight/3)\r\n\t    .attr(\"width\", function(d, i) {\r\n\t\treturn unitWidth+'%';\r\n\t    })\r\n            .attr(\"x\", function(d, i) {\r\n\t\treturn (i * unitWidth) + '%';\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n\t    .attr('text-anchor', 'middle')\r\n            .attr(\"x\", function(d, i) {\r\n\t\treturn (i * unitWidth) + (unitWidth/2) + '%';\r\n            })\r\n\t    .attr(\"y\", 55)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n\t    });\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n\r\n\r\n    $(document).ready(initialize);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ///////////////////Map Composite\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function app2() {\r\n//     queue()\r\n//     //should be town polym data\r\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\r\n//     //should be opioid death data\r\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n//     //.defer(d3.csv, \"us_pop.csv\")\r\n//     .awaitAll(generateMap2);\r\n// }\r\n\r\n// function generateMap2(error, results) {\r\n//     $('.controls-map').click(function() {\r\n//         $(\"#timeline\").val($(this).data('select'));\r\n//         setSymbology2($(this).data('select'));\r\n//     });\r\n\r\n//     var maTowns = results[0];\r\n//     var maOpioid = results[1];\r\n\r\n//     var currentyear\r\n\r\n//     var i;\r\n//     for (i = 0; i < maTowns.features.length; i++) {\r\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n//             // console.log('ASSERT failure for index: ' + i);\r\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n//             alert('Input data corrupted: generation of map terminated.');\r\n//             return;\r\n//         }\r\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n//     }\r\n\r\n//     var width = 960,\r\n//         height = 450;\r\n\r\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\r\n//         .attr(\"width\", width)\r\n//         .attr(\"height\", height)\r\n//         .style(\"border\", \"0px solid steelblue\");\r\n\r\n//     var tooltip2 = d3.select('#map2').append('div')\r\n//         .attr('class', 'hidden tooltip2');\r\n\r\n//     var opChgScale = d3.scale.threshold()\r\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n//         .range(colorbrewer.RdPu[5]);\r\n//     opChgScale.domainStrings = function() {\r\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n//             '15.9-31.5', '>31.5'\r\n//         ]);\r\n//     };\r\n\r\n//     function toTitleCase(str) {\r\n//         return str.replace(/\\w\\S*/g, function(txt) {\r\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n//         });\r\n//     }\r\n\r\n//     var projection = d3.geo.conicConformal()\r\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n//         .rotate([71 + 30 / 60, -41])\r\n//         .scale([10000])\r\n//         .translate([330, 480]);\r\n\r\n//     var geoPath = d3.geo.path()\r\n//         .projection(projection);\r\n\r\n//     var map = svgContainer.selectAll(\"path\")\r\n//         .data(maTowns.features)\r\n//         .enter()\r\n//         .append(\"path\")\r\n//         .attr(\"d\", function(d, i) {\r\n//             return geoPath(d);\r\n//         })\r\n//         .on('mousemove', function(d) {\r\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n//                 return parseInt(d);\r\n//             });\r\n//             var string_base = \"yr\"\r\n//             currentvalue = string_base.concat(currentyear);\r\n//             var currentrate\r\n\r\n//             if (d.properties[currentvalue] > 0) {\r\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n//             } else if (d.properties[currentvalue] == 0) {\r\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n//             } else {\r\n//                 currentrate = \"N/A*\";\r\n//             }\r\n\r\n\r\n//             tooltip2.classed('hidden', false)\r\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\r\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\r\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n//         })\r\n//         .on('mouseover', function(d, i) {\r\n\r\n//             var currentState = this;\r\n//             d3.select(this).style('fill-opacity', 0.25)\r\n//                 .style(\"stroke\", \"white\")\r\n//                 .style(\"stroke-width\", \"2px\");\r\n//         })\r\n//         .on('mouseout', function(d, i) {\r\n//             tooltip2.classed('hidden', true);\r\n//             d3.selectAll('path')\r\n//                 .style(\"fill-opacity\", 1)\r\n//                 .style(\"stroke\", \"#2f363d\")\r\n//                 .style(\"stroke-width\", \"0.1px\");\r\n//         })\r\n//         .style(\"stroke\", \"#2f363d\")\r\n//         .style(\"stroke-width\", \"0.1px\")\r\n//         .style(\"fill\", \"white\")\r\n//         .on('mouseenter', function(d, i) {\r\n\r\n//             //var string_base = \"yr\"\r\n//             //currentvalue = string_base.concat(currentyear);\r\n//             //console.log(d.properties[currentvalue]);\r\n//         })\r\n//         .on('mouseleave', function(d) {\r\n\r\n//         });\r\n\r\n//     var aYears = [\r\n//         [2000, 2001],\r\n//         [2001, 2002],\r\n//         [2002, 2003],\r\n//         [2003, 2004],\r\n//         [2004, 2005],\r\n//         [2005, 2006],\r\n//         [2006, 2007],\r\n//         [2007, 2008],\r\n//         [2008, 2009],\r\n//         [2010, 2011],\r\n//         [2011, 2012],\r\n//         [2012, 2013],\r\n//         [2013, 2014],\r\n//         [2014, 2014.5]\r\n//     ];\r\n\r\n//     var index = 0;\r\n//     getYear();\r\n\r\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n//     function getYear() {\r\n//         setSymbology2(2000);\r\n//         $(\"#timeline\").on('input change', function() {\r\n//             var year = $(this).val()\r\n//             setSymbology2($(this).val());\r\n//         });\r\n//     };\r\n\r\n\r\n//     function setSymbology2(year) {\r\n\r\n//         var szAttr = 'yr' + year;\r\n//         currentyear = year\r\n//         var toyear = eval(year) + 1\r\n\r\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\r\n//         $('#fromYear2').html(year);\r\n//         $('#titleMidfix2').html('to');\r\n//         $('#toYear2').html(toyear).append('<span>*</span>');\r\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\r\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\r\n//                             '<br />Executive Office of Health and Human Services'+\r\n//                             '<br />(Registry of Vital Records and Statistics,' +\r\n//                             '<br />Massachusetts Department of Public Health)');\r\n\r\n\r\n\r\n//         svgContainer.selectAll(\"path\")\r\n//             .transition()\r\n//             .duration(500)\r\n//             .style(\"fill\", function(d, i) {\r\n\r\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n//             });\r\n//     }\r\n\r\n//     function generateLegend2(scale, szDivId, szCaption) {\r\n//         var width2 = 550,\r\n//             height2 = 80;\r\n\r\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\r\n//             .attr(\"width\", width2)\r\n//             .attr(\"height\", height2);\r\n\r\n//         var g = svg.append(\"g\");\r\n\r\n//         // Create data array.\r\n//         var legendData = [];\r\n//         legendData.push({\r\n//             d: -9999,\r\n//             r: '#f1f1f1',\r\n//             s: 'N/A'\r\n//         });\r\n//         var i;\r\n//         for (i = 0; i < scale.domain().length; i++) {\r\n//             legendData.push({\r\n//                 d: scale.domain()[i],\r\n//                 r: scale.range()[i],\r\n//                 s: scale.domainStrings()[i]\r\n//             });\r\n//         }\r\n\r\n//         g.selectAll(\"rect\")\r\n//             .data(legendData)\r\n//             .enter().append(\"rect\")\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"width\", 50)\r\n//             .attr(\"x\", function(d, i) {\r\n//                 return i * 55;\r\n//             })\r\n//             .attr(\"y\", 20)\r\n//             .style(\"stroke\", \"black\")\r\n//             .style(\"stroke-width\", \"0.25px\")\r\n//             .style(\"fill\", function(d, i) {\r\n//                 return d.r;\r\n//             });\r\n\r\n//         g.selectAll(\"text\")\r\n//             .data(legendData)\r\n//             .enter().append(\"text\")\r\n//             .attr(\"x\", function(d, i) {\r\n//                 return i * 55;\r\n//             })\r\n//             .attr(\"y\", 60)\r\n//             .text(function(d, i) {\r\n//                 return d.s;\r\n//             });\r\n\r\n//         g.append(\"text\")\r\n//             .attr(\"class\", \"vis-caption\")\r\n//             .attr(\"y\", 12)\r\n//             .text(szCaption);\r\n//     } // generateLegend2()\r\n// } // generateMap2\r\n","var Vis = (function(d3) {\r\n    \"use strict\";\r\n\r\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\r\n\r\n    var geojson;\r\n    queue()\r\n        .defer(d3.json, 'js/data/TOWN.geo.json')\r\n        .defer(d3.json, 'js/data/data.json')\r\n        .await(visualize);\r\n\r\n    var width = 525,\r\n        height = 325;\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([8600])\r\n        .translate([280, 360]);\r\n\r\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n    var path = d3.geo.path().projection(projection),\r\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.PuBuGn[6]);\r\n\r\n\r\n\r\n    function visualize(error, states, data) {\r\n\r\n\r\n\r\n        data.data.forEach(function(data, i) {\r\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\r\n\r\n            createMap(wrapper, states, data);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function createMap(wrapper, geo, data) {\r\n\r\n        wrapper.append('span')\r\n            .text(data.key)\r\n            .attr('class', 'vis-title');\r\n\t    wrapper.append('span')\r\n            .text(\"\")\r\n\t    .attr('class', 'selection-label');\r\n\r\n        var $maps_sub = wrapper\r\n            .classed(\"svg-container\", true) //container class to make it responsive\r\n            .append(\"svg\")\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n            .attr(\"viewBox\", \"0 0 \"+width+\" \"+height)\r\n            //class to make it responsive\r\n            .classed(\"svg-content-responsive\", true);\r\n\r\n        $maps_sub.selectAll('path')\r\n            .data(geo.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', path)\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"0.0px\")\r\n            .style('fill', function(d, i) {\r\n                var value = data.values[d.properties.TOWN];\r\n                return palette(value);\r\n            })\r\n            .on('mouseover', function(d, i) {\r\n\r\n            })\r\n            .on('mouseout', function(d, i) {\r\n\r\n            })\r\n            .attr('class', function(d) {\r\n                return d.properties.TOWN.toLowerCase()\r\n            })\r\n            .attr('id', 'bsasmap')\r\n            .on('mouseenter', function(d, i) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\r\n                // var currentState = this;\r\n                // console.log(this);\r\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('mouseleave', function(d) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\r\n\r\n            })\r\n            .on('select', function(self) {\r\n                var geoData = self.data();\r\n                var town_value\r\n\r\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\r\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\r\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\r\n                } else {\r\n                    town_value = \"N/A\";\r\n                };\r\n\r\n                //console.log(town_value);\r\n\r\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\r\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('unselect', function(self) {\r\n            //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\r\n            //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\r\n                d3.selectAll('path#bsasmap').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n            })\r\n\r\n        function notify(selector, eventName) {\r\n            d3.selectAll(selector)[0].forEach(function(el, i) {\r\n                var shape = d3.select(el);\r\n                shape.on(eventName)(shape);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.PuBuGn[6])\r\n    opChgScale.domainStrings = function() {\r\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\r\n            '>35-60%', '>60-100%'\r\n        ]);\r\n    };\r\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\r\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\r\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\r\n\r\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 70;\r\n\r\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", \"100%\")\r\n            .attr(\"height\", height);\r\n\r\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        $maps_sub_legends.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n\t    .attr(\"width\", 60)\r\n            .attr(\"x\", function(d, i) {\r\n                return (i * (100/legendData.length)) + \"%\";\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        $maps_sub_legends.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n\t    .attr('text-anchor', 'middle')\r\n            .attr(\"x\", function(d, i) {\r\n\t\t      return ((i * (100/legendData.length))+7) + \"%\";\r\n            })\r\n            .attr(\"y\", 55)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n\t    });\r\n\r\n        $maps_sub_legends.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    }\r\n\r\n\r\n\r\n    $('.js-toggle-treatment-map').click(function() {\r\n        var date = $(this).data('date');\r\n        $('#treatmentMaps').attr('data-active-date', date);\r\n        $('.js-toggle-treatment-map').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n})(d3);\r\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    var yScale = d3.scale.sqrt();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -dimensions.margin.top)\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(1, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    function bindEvents() {\r\n        d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n\r\n        function mouseoutFunc() {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n            tooltip_death.classed(\"hidden\", true);\r\n        }\r\n\r\n        function mouseoverFunc(d, i) {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n            d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n            tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n        }\r\n\r\n        var coordinates = [0, 0];\r\n\r\n        function mousemoveFunc(d) {\r\n            coordinates = d3.mouse(this);\r\n            var x = coordinates[0];\r\n            var y = coordinates[1];\r\n            tooltip_death\r\n                .style(\"top\", y + \"px\")\r\n                .style(\"left\", x + \"px\")\r\n                .style('position', 'absolute')\r\n                .style('z-index', 1001);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var rootSelector = '#fentanyl-lines';\r\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\r\n\r\n    var chartData = [{\r\n    \t\"date\": new Date(\"01/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.22\",\r\n    \t\"Heroin\": \"0.41\",\r\n    \t\"Methadone\": \"0.10\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"04/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.18\",\r\n    \t\"Fentanyl\": \"0.19\",\r\n    \t\"Heroin\": \"0.49\",\r\n    \t\"Methadone\": \"0.07\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"07/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.14\",\r\n    \t\"Fentanyl\": \"0.14\",\r\n    \t\"Heroin\": \"0.53\",\r\n    \t\"Methadone\": \"0.10\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"10/01/2014\"),\r\n    \t\"FentanylHeroin\": \"0.22\",\r\n    \t\"Fentanyl\": \"0.27\",\r\n    \t\"Heroin\": \"0.35\",\r\n    \t\"Methadone\": \"0.06\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"01/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.40\",\r\n    \t\"Heroin\": \"0.30\",\r\n    \t\"Methadone\": \"0.04\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"04/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.24\",\r\n    \t\"Fentanyl\": \"0.38\",\r\n    \t\"Heroin\": \"0.29\",\r\n    \t\"Methadone\": \"0.05\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"07/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.19\",\r\n    \t\"Fentanyl\": \"0.40\",\r\n    \t\"Heroin\": \"0.30\",\r\n    \t\"Methadone\": \"0.06\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"10/01/2015\"),\r\n    \t\"FentanylHeroin\": \"0.22\",\r\n    \t\"Fentanyl\": \"0.43\",\r\n    \t\"Heroin\": \"0.24\",\r\n    \t\"Methadone\": \"0.05\"\r\n    \t}, {\r\n    \t\"date\": new Date(\"01/01/2016\"),\r\n    \t\"FentanylHeroin\": \"0.15\",\r\n    \t\"Fentanyl\": \"0.50\",\r\n    \t\"Heroin\": \"0.17\",\r\n    \t\"Methadone\": \"0.04\"\r\n   }];\r\n\r\n\r\n\r\n\r\n    var yearformat = d3.time.format(\"%Y\");\r\n\r\n    function quarter (date) {\r\n    \tvar date2 = new Date();\r\n    \tdate2.setMonth(date.getMonth() - 10);\r\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\r\n    \treturn \"Q\" + q;\r\n    }\r\n\r\n    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\r\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\r\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\r\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\r\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\r\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\r\n    var xLabel = \"date\";\r\n\r\n\r\n\r\n\r\n    // Dimensions\r\n\r\n    var margin = {\r\n      top: 60, // space for the legend\r\n      right: 15,\r\n      bottom: 50,\r\n      left: 42\r\n    };\r\n\r\n    var wrapper_width = 540;\r\n    var wrapper_height = 400;\r\n    var width = wrapper_width - margin.left - margin.right;\r\n    var height = wrapper_height - margin.top - margin.bottom;\r\n\r\n\r\n    var x = d3.scale.ordinal().rangePoints([0, width]);\r\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\r\n\r\n    var y = d3.scale.linear().range([height, 0]);\r\n\r\n    var color = d3.scale.ordinal().range(seriesColors);\r\n\r\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\r\n\r\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\r\n\r\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\r\n\r\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\r\n\r\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\r\n\r\n    var xAxis_fent = d3.svg.axis()\r\n                    \t.scale(x)\r\n                    \t.orient(\"bottom\")\r\n                    \t.ticks(d3.time.months, 3)\r\n                    \t.tickFormat(quarter);\r\n\r\n\r\n    var xAxis2_fent = d3.svg.axis()\r\n                      \t.scale(x)\r\n                      \t.ticks(d3.time.years, 1)\r\n                      \t.tickFormat(yearformat)\r\n                      \t.tickSize(3, 0)\r\n                      \t.tickPadding(1)\r\n                      \t.orient(\"bottom\");\r\n\r\n    //percentage formatiing\r\n    var formatPercent = d3.format(\".0%\");\r\n\r\n    var yAxis_fent = d3.svg.axis()\r\n                    \t.scale(y)\r\n                    \t.orient(\"left\")\r\n                    \t.tickFormat(formatPercent)\r\n                    \t.ticks(5)\r\n                    \t.tickSize(3, 0)\r\n                    \t.tickPadding(1);\r\n\r\n    //create tooltipFent\r\n\r\n    // add a tooltipFent to the page - not to the svg itself!\r\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\r\n\r\n    var line = d3.svg.line()\r\n              \t.x(function(d) {\r\n              \t    return x(d.label);\r\n              \t})\r\n              \t.y(function(d) {\r\n              \t    return y(d.value);\r\n              \t});\r\n\r\n    var $svg = d3.select(document.querySelector(rootSelector))\r\n      .append(\"svg\");\r\n    var $lines_fent = $svg.append(\"g\")\r\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\r\n      return key !== xLabel;\r\n    });\r\n\r\n    color.domain(varSeries);\r\n    lineStroke.domain(varSeries);\r\n    lineDash.domain(varSeries);\r\n    pointShape.domain(varSeries);\r\n    pointWidth.domain(varSeries);\r\n    pointFill.domain(varSeries);\r\n\r\n    var seriesData = varSeries.map(function(name) {\r\n    \treturn {\r\n    \t    name: name,\r\n    \t    values: chartData.map(function(d) {\r\n        \t\treturn {\r\n        \t\t    name: name,\r\n        \t\t    label: d[xLabel],\r\n        \t\t    value: +d[name]\r\n        \t\t};\r\n    \t    })\r\n    \t};\r\n    });\r\n\r\n\r\n    x.domain(chartData.map(function(d) {\r\n      return d.date;\r\n    }));\r\n\r\n    x2.domain(chartData.map(function(d) {\r\n      return d.date;\r\n    }));\r\n\r\n    y.domain([\r\n      d3.min(seriesData, function(c) {\r\n          return d3.min(c.values, function(d) {\r\n      \t//return d.value;\r\n      \treturn 0;\r\n          });\r\n      }),\r\n      d3.max(seriesData, function(c) {\r\n          return d3.max(c.values, function(d) {\r\n      \treturn d.value;\r\n          });\r\n      })\r\n    ]);\r\n\r\n    var x_axis = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-x-axis\")\r\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    \t.call(xAxis_fent);\r\n\r\n    var x_axis_lines = x_axis.append(\"path\")\r\n    \t.attr(\"class\", \"line\")\r\n    \t.style(\"stroke-width\", \"1.5px\")\r\n    \t.call(xAxis_fent);\r\n\r\n    var x_axis2 = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-axis\")\r\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\r\n    \t.call(xAxis2_fent)\r\n    var x_axis2_text = x_axis2\r\n    \t.append(\"text\")\r\n    \t.attr(\"x\", width - margin.left)\r\n    \t.attr(\"y\", margin.bottom - 32)\r\n    \t.attr(\"dy\", \"1em\")\r\n    \t.attr(\"class\", \"vis-x-axis-label\")\r\n    \t.text(\"Quarter\");\r\n\r\n\r\n    var y_axis = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"vis-y-axis\")\r\n    \t.call(yAxis_fent)\r\n    \t.append(\"text\")\r\n    \t.attr(\"x\", 0)\r\n    \t.attr(\"y\", -44)\r\n    \t.attr(\"dy\", \"1em\")\r\n    \t.attr(\"class\", \"vis-y-axis-label\")\r\n    \t.text(\"Percent Opioid Deaths\");\r\n\r\n    var series = $lines_fent.selectAll(\".series\")\r\n    \t.data(seriesData)\r\n    \t.enter().append(\"g\")\r\n    \t.attr(\"class\", \"seriesData\");\r\n\r\n\r\n    var $lines = series.append(\"path\")\r\n    \t.attr(\"class\", \"line\")\r\n    \t.attr(\"d\", function(d) {\r\n    \t    return line(d.values);\r\n    \t})\r\n    \t.style(\"stroke\", function(d) {\r\n    \t    return color(d.name);\r\n    \t})\r\n    \t.style(\"stroke-width\", function(d) {\r\n    \t    return lineStroke(d.name);\r\n    \t})\r\n    \t.style(\"stroke-dasharray\", function(d) {\r\n    \t    return lineDash(d.name);\r\n    \t})\r\n    \t.style(\"fill\", \"none\");\r\n\r\n\r\n    var $lines_hit_area = series.append(\"path\")\r\n    \t.attr(\"class\", \"hit-area-ext\")\r\n    \t.attr(\"d\", function(d) {\r\n    \t    return line(d.values);\r\n    \t})\r\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\r\n    \t.style(\"fill\", \"none\");\r\n\r\n\r\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    // \t.attr(\"x\", width + 5)\r\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\r\n    // \t.attr(\"dy\", \"1em\")\r\n    // \t.text(\"Fentanyl & Heroin\");\r\n\r\n    // var x_axis_label_m = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    // \t.attr(\"x\", width + 5)\r\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\r\n    // \t.attr(\"dy\", \"1em\")\r\n    // \t.text(\"Methadone\");\r\n\r\n    // var x_axis_label_h = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    //   .attr(\"x\", width + 5)\r\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\r\n    //   .attr(\"dy\", \"1em\")\r\n    //   .text(\"Heroin\");\r\n\r\n    // var x_axis_label_f = $lines_fent.append(\"text\")\r\n    // \t.attr(\"class\", \"vis-data-label\")\r\n    //   .attr(\"x\", width + 5)\r\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\r\n    //   .attr(\"dy\", \"1em\")\r\n    //   .text(\"Fentanyl\");\r\n\r\n\r\n\r\n    /*======================================================================\r\n     Mouse Functions\r\n    ======================================================================*/\r\n    var focus = $lines_fent.append(\"g\")\r\n    \t.attr(\"class\", \"focus\")\r\n    \t.classed(\"hidden\", true);\r\n\r\n    focus.append(\"circle\")\r\n    \t.style(\"stroke-width\", 1)\r\n    \t.attr(\"r\", 6)\r\n    \t.attr('pointer-events', 'none');\r\n\r\n    d3.selectAll(\"g.seriesData\")\r\n    \t.on(\"mouseover\", mouseoverFunc)\r\n    \t.on(\"mouseout\", mouseoutFunc)\r\n    \t.on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\r\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\r\n      \tfocus.classed(\"hidden\", true);\r\n    }\r\n\r\n    function mouseoverFunc(d, i) {\r\n\r\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\r\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\r\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\r\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\r\n    \t//         }\r\n\r\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\r\n    \tvar x0 = d3.mouse(this)[0];\r\n    \tvar y0 = d3.mouse(this)[1]\r\n    \tvar y1 = y.invert(y0);\r\n    \tvar percentVal = d3.format(\".0%\")(y1)\r\n\r\n    \ttooltipFent.classed(\"hidden\", false)\r\n    \t.html(percentVal);\r\n    \t//console.log(d.rates[i]);\r\n    \t//console.log(d3.select(this).select(\"path.point\"));\r\n    \tfocus.classed(\"hidden\", false);\r\n    }\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n    \t//console.log(\"events\", window.event, d3.event);\r\n    \tvar x0 = d3.mouse(this)[0];\r\n    \tvar y0 = d3.mouse(this)[1]\r\n    \tvar y1 = y.invert(y0);\r\n    \tvar percentVal = d3.format(\".0%\")(y1);\r\n\r\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n\r\n\r\n    \ttooltipFent\r\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\r\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n    \t    .html(percentVal);\r\n    }\r\n\r\n\r\n\r\n    function render () {\r\n      updateWidth(rootNode.clientWidth);\r\n\r\n      x.rangePoints([0, width]);\r\n      x2.rangePoints([0, width]);\r\n      y.range([height, 0]);\r\n      xAxis_fent.scale(x);\r\n      xAxis2_fent.scale(x);\r\n      yAxis_fent.scale(y);\r\n      // update lines\r\n      line.x(function(d) {\r\n          return x(d.label);\r\n        })\r\n        .y(function(d) {\r\n            return y(d.value);\r\n        });\r\n\r\n      x_axis\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(xAxis_fent);\r\n\r\n      x_axis2\r\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\r\n        .call(xAxis2_fent);\r\n\r\n      x_axis2_text\r\n      .attr(\"x\", width - margin.left)\r\n      .attr(\"y\", margin.bottom - 32);\r\n\r\n\r\n      y_axis.call(yAxis_fent);\r\n\r\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\r\n\r\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\r\n\r\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\r\n\r\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\r\n\r\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\r\n\r\n      $lines.attr(\"d\", function(d) {\r\n          return line(d.values);\r\n      });\r\n\r\n      $lines_hit_area.attr(\"d\", function(d) {\r\n        return line(d.values);\r\n      });\r\n\r\n    }\r\n\r\n    function updateWidth(componentWidth) {\r\n      wrapper_width = componentWidth;\r\n      width = wrapper_width - margin.left - margin.right;\r\n      height = wrapper_height - margin.top - margin.bottom;\r\n    }\r\n\r\n    function renderLegend() {\r\n      var legendItems = [\r\n        \"FentanylHeroin\",\r\n        \"Fentanyl\",\r\n        \"Heroin\",\r\n        \"Methadone\"\r\n      ];\r\n      var legendItemsTranslate = [\r\n        \"Fentanyl & Heroin\",\r\n        \"Fentanyl\",\r\n        \"Heroin\",\r\n        \"Methadone\"\r\n      ];\r\n      var $legend = $svg.append(\"g\")\r\n        .attr(\"class\", \"vis-legend\")\r\n        .attr(\"transform\", \"translate(\"+margin.left+\",0)\");\r\n      var lineHeight = 15;\r\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\r\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\r\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\r\n\r\n      legendItems.forEach(function(item, i) {\r\n        var $item = $legend.append(\"g\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\r\n\r\n        $item.append(\"svg:line\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", 5)\r\n          .attr(\"x2\", 30)\r\n          .attr(\"y2\", 5)\r\n          .style(\"stroke\", seriesColors[i])\r\n          .style(\"stroke-dasharray\", seriesLineDash[i])\r\n          .style(\"stroke-width\", seriesLineStrokes[i]);\r\n\r\n        $item.append(\"text\")\r\n          .attr(\"class\", \"legend-item-\"+item)\r\n          .attr(\"x\", 40)\r\n          .attr(\"y\", 10)\r\n          .text(legendItemsTranslate[i]);\r\n      });\r\n    }\r\n\r\n\r\n    render();\r\n    renderLegend();\r\n\r\n    window.addEventListener('resize', render);\r\n\r\n\r\n\r\n})();\r\n","/* global d3*/\r\n(function() {\r\n    var rootNode = document.querySelector('#lines-bsas');\r\n    var town_names = {\r\n        //\"massachusetts\" : \"Massachusetts\",\r\n        \"abington\": \"Abington\",\r\n        \"acton\": \"Acton\",\r\n        \"acushnet\": \"Acushnet\",\r\n        \"adams\": \"Adams\",\r\n        \"agawam\": \"Agawam\",\r\n        \"alford\": \"Alford\",\r\n        \"amesbury\": \"Amesbury\",\r\n        \"amherst\": \"Amherst\",\r\n        \"andover\": \"Andover\",\r\n        \"aquinnah\": \"Aquinnah\",\r\n        \"arlington\": \"Arlington\",\r\n        \"ashburnham\": \"Ashburnham\",\r\n        \"ashby\": \"Ashby\",\r\n        \"ashfield\": \"Ashfield\",\r\n        \"ashland\": \"Ashland\",\r\n        \"athol\": \"Athol\",\r\n        \"attleboro\": \"Attleboro\",\r\n        \"auburn\": \"Auburn\",\r\n        \"avon\": \"Avon\",\r\n        \"ayer\": \"Ayer\",\r\n        \"barnstable\": \"Barnstable\",\r\n        \"barre\": \"Barre\",\r\n        \"becket\": \"Becket\",\r\n        \"bedford\": \"Bedford\",\r\n        \"belchertown\": \"Belchertown\",\r\n        \"bellingham\": \"Bellingham\",\r\n        \"belmont\": \"Belmont\",\r\n        \"berkley\": \"Berkley\",\r\n        \"berlin\": \"Berlin\",\r\n        \"bernardston\": \"Bernardston\",\r\n        \"beverly\": \"Beverly\",\r\n        \"billerica\": \"Billerica\",\r\n        \"blackstone\": \"Blackstone\",\r\n        \"blandford\": \"Blandford\",\r\n        \"bolton\": \"Bolton\",\r\n        \"boston\": \"Boston\",\r\n        \"bourne\": \"Bourne\",\r\n        \"boxborough\": \"Boxborough\",\r\n        \"boxford\": \"Boxford\",\r\n        \"boylston\": \"Boylston\",\r\n        \"braintree\": \"Braintree\",\r\n        \"brewster\": \"Brewster\",\r\n        \"bridgewater\": \"Bridgewater\",\r\n        \"brimfield\": \"Brimfield\",\r\n        \"brockton\": \"Brockton\",\r\n        \"brookfield\": \"Brookfield\",\r\n        \"brookline\": \"Brookline\",\r\n        \"buckland\": \"Buckland\",\r\n        \"burlington\": \"Burlington\",\r\n        \"cambridge\": \"Cambridge\",\r\n        \"canton\": \"Canton\",\r\n        \"carlisle\": \"Carlisle\",\r\n        \"carver\": \"Carver\",\r\n        \"charlemont\": \"Charlemont\",\r\n        \"charlton\": \"Charlton\",\r\n        \"chatham\": \"Chatham\",\r\n        \"chelmsford\": \"Chelmsford\",\r\n        \"chelsea\": \"Chelsea\",\r\n        \"cheshire\": \"Cheshire\",\r\n        \"chester\": \"Chester\",\r\n        \"chesterfield\": \"Chesterfield\",\r\n        \"chicopee\": \"Chicopee\",\r\n        \"chilmark\": \"Chilmark\",\r\n        \"clarksburg\": \"Clarksburg\",\r\n        \"clinton\": \"Clinton\",\r\n        \"cohasset\": \"Cohasset\",\r\n        \"colrain\": \"Colrain\",\r\n        \"concord\": \"Concord\",\r\n        \"conway\": \"Conway\",\r\n        \"cummington\": \"Cummington\",\r\n        \"dalton\": \"Dalton\",\r\n        \"danvers\": \"Danvers\",\r\n        \"dartmouth\": \"Dartmouth\",\r\n        \"dedham\": \"Dedham\",\r\n        \"deerfield\": \"Deerfield\",\r\n        \"dennis\": \"Dennis\",\r\n        \"dighton\": \"Dighton\",\r\n        \"douglas\": \"Douglas\",\r\n        \"dover\": \"Dover\",\r\n        \"dracut\": \"Dracut\",\r\n        \"dudley\": \"Dudley\",\r\n        \"dunstable\": \"Dunstable\",\r\n        \"duxbury\": \"Duxbury\",\r\n        \"eastbridgewater\": \"East Bridgewater\",\r\n        \"eastbrookfield\": \"East Brookfield\",\r\n        \"eastham\": \"Eastham\",\r\n        \"easthampton\": \"Easthampton\",\r\n        \"eastlongmeadow\": \"East Longmeadow\",\r\n        \"easton\": \"Easton\",\r\n        \"edgartown\": \"Edgartown\",\r\n        \"egremont\": \"Egremont\",\r\n        \"erving\": \"Erving\",\r\n        \"essex\": \"Essex\",\r\n        \"everett\": \"Everett\",\r\n        \"fairhaven\": \"Fairhaven\",\r\n        \"fallriver\": \"Fall River\",\r\n        \"falmouth\": \"Falmouth\",\r\n        \"fitchburg\": \"Fitchburg\",\r\n        \"florida\": \"Florida\",\r\n        \"foxborough\": \"Foxborough\",\r\n        \"framingham\": \"Framingham\",\r\n        \"franklin\": \"Franklin\",\r\n        \"freetown\": \"Freetown\",\r\n        \"gardner\": \"Gardner\",\r\n        \"georgetown\": \"Georgetown\",\r\n        \"gill\": \"Gill\",\r\n        \"gloucester\": \"Gloucester\",\r\n        \"goshen\": \"Goshen\",\r\n        \"gosnold\": \"Gosnold\",\r\n        \"grafton\": \"Grafton\",\r\n        \"granby\": \"Granby\",\r\n        \"granville\": \"Granville\",\r\n        \"greatbarrington\": \"Great Barrington\",\r\n        \"greenfield\": \"Greenfield\",\r\n        \"groton\": \"Groton\",\r\n        \"groveland\": \"Groveland\",\r\n        \"hadley\": \"Hadley\",\r\n        \"halifax\": \"Halifax\",\r\n        \"hamilton\": \"Hamilton\",\r\n        \"hampden\": \"Hampden\",\r\n        \"hancock\": \"Hancock\",\r\n        \"hanover\": \"Hanover\",\r\n        \"hanson\": \"Hanson\",\r\n        \"hardwick\": \"Hardwick\",\r\n        \"harvard\": \"Harvard\",\r\n        \"harwich\": \"Harwich\",\r\n        \"hatfield\": \"Hatfield\",\r\n        \"haverhill\": \"Haverhill\",\r\n        \"hawley\": \"Hawley\",\r\n        \"heath\": \"Heath\",\r\n        \"hingham\": \"Hingham\",\r\n        \"hinsdale\": \"Hinsdale\",\r\n        \"holbrook\": \"Holbrook\",\r\n        \"holden\": \"Holden\",\r\n        \"holland\": \"Holland\",\r\n        \"holliston\": \"Holliston\",\r\n        \"holyoke\": \"Holyoke\",\r\n        \"hopedale\": \"Hopedale\",\r\n        \"hopkinton\": \"Hopkinton\",\r\n        \"hubbardston\": \"Hubbardston\",\r\n        \"hudson\": \"Hudson\",\r\n        \"hull\": \"Hull\",\r\n        \"huntington\": \"Huntington\",\r\n        \"ipswich\": \"Ipswich\",\r\n        \"kingston\": \"Kingston\",\r\n        \"lakeville\": \"Lakeville\",\r\n        \"lancaster\": \"Lancaster\",\r\n        \"lanesborough\": \"Lanesborough\",\r\n        \"lawrence\": \"Lawrence\",\r\n        \"lee\": \"Lee\",\r\n        \"leicester\": \"Leicester\",\r\n        \"lenox\": \"Lenox\",\r\n        \"leominster\": \"Leominster\",\r\n        \"leverett\": \"Leverett\",\r\n        \"lexington\": \"Lexington\",\r\n        \"leyden\": \"Leyden\",\r\n        \"lincoln\": \"Lincoln\",\r\n        \"littleton\": \"Littleton\",\r\n        \"longmeadow\": \"Longmeadow\",\r\n        \"lowell\": \"Lowell\",\r\n        \"ludlow\": \"Ludlow\",\r\n        \"lunenburg\": \"Lunenburg\",\r\n        \"lynn\": \"Lynn\",\r\n        \"lynnfield\": \"Lynnfield\",\r\n        \"malden\": \"Malden\",\r\n        \"manchester\": \"Manchester\",\r\n        \"mansfield\": \"Mansfield\",\r\n        \"marblehead\": \"Marblehead\",\r\n        \"marion\": \"Marion\",\r\n        \"marlborough\": \"Marlborough\",\r\n        \"marshfield\": \"Marshfield\",\r\n        \"mashpee\": \"Mashpee\",\r\n        \"mattapoisett\": \"Mattapoisett\",\r\n        \"maynard\": \"Maynard\",\r\n        \"medfield\": \"Medfield\",\r\n        \"medford\": \"Medford\",\r\n        \"medway\": \"Medway\",\r\n        \"melrose\": \"Melrose\",\r\n        \"mendon\": \"Mendon\",\r\n        \"merrimac\": \"Merrimac\",\r\n        \"methuen\": \"Methuen\",\r\n        \"middleborough\": \"Middleborough\",\r\n        \"middlefield\": \"Middlefield\",\r\n        \"middleton\": \"Middleton\",\r\n        \"milford\": \"Milford\",\r\n        \"millbury\": \"Millbury\",\r\n        \"millis\": \"Millis\",\r\n        \"millville\": \"Millville\",\r\n        \"milton\": \"Milton\",\r\n        \"monroe\": \"Monroe\",\r\n        \"monson\": \"Monson\",\r\n        \"montague\": \"Montague\",\r\n        \"monterey\": \"Monterey\",\r\n        \"montgomery\": \"Montgomery\",\r\n        \"mountwashington\": \"Mount Washington\",\r\n        \"nahant\": \"Nahant\",\r\n        \"nantucket\": \"Nantucket\",\r\n        \"natick\": \"Natick\",\r\n        \"needham\": \"Needham\",\r\n        \"newashford\": \"New Ashford\",\r\n        \"newbedford\": \"New Bedford\",\r\n        \"newbraintree\": \"New Braintree\",\r\n        \"newbury\": \"Newbury\",\r\n        \"newburyport\": \"Newburyport\",\r\n        \"newmarlborough\": \"New Marlborough\",\r\n        \"newsalem\": \"New Salem\",\r\n        \"newton\": \"Newton\",\r\n        \"norfolk\": \"Norfolk\",\r\n        \"northadams\": \"North Adams\",\r\n        \"northampton\": \"Northampton\",\r\n        \"northandover\": \"North Andover\",\r\n        \"northattleborough\": \"North Attleborough\",\r\n        \"northborough\": \"Northborough\",\r\n        \"northbridge\": \"Northbridge\",\r\n        \"northbrookfield\": \"North Brookfield\",\r\n        \"northfield\": \"Northfield\",\r\n        \"northreading\": \"North Reading\",\r\n        \"norton\": \"Norton\",\r\n        \"norwell\": \"Norwell\",\r\n        \"norwood\": \"Norwood\",\r\n        \"oakbluffs\": \"Oak Bluffs\",\r\n        \"oakham\": \"Oakham\",\r\n        \"orange\": \"Orange\",\r\n        \"orleans\": \"Orleans\",\r\n        \"otis\": \"Otis\",\r\n        \"oxford\": \"Oxford\",\r\n        \"palmer\": \"Palmer\",\r\n        \"paxton\": \"Paxton\",\r\n        \"peabody\": \"Peabody\",\r\n        \"pelham\": \"Pelham\",\r\n        \"pembroke\": \"Pembroke\",\r\n        \"pepperell\": \"Pepperell\",\r\n        \"peru\": \"Peru\",\r\n        \"petersham\": \"Petersham\",\r\n        \"phillipston\": \"Phillipston\",\r\n        \"pittsfield\": \"Pittsfield\",\r\n        \"plainfield\": \"Plainfield\",\r\n        \"plainville\": \"Plainville\",\r\n        \"plymouth\": \"Plymouth\",\r\n        \"plympton\": \"Plympton\",\r\n        \"princeton\": \"Princeton\",\r\n        \"provincetown\": \"Provincetown\",\r\n        \"quincy\": \"Quincy\",\r\n        \"randolph\": \"Randolph\",\r\n        \"raynham\": \"Raynham\",\r\n        \"reading\": \"Reading\",\r\n        \"rehoboth\": \"Rehoboth\",\r\n        \"revere\": \"Revere\",\r\n        \"richmond\": \"Richmond\",\r\n        \"rochester\": \"Rochester\",\r\n        \"rockland\": \"Rockland\",\r\n        \"rockport\": \"Rockport\",\r\n        \"rowe\": \"Rowe\",\r\n        \"rowley\": \"Rowley\",\r\n        \"royalston\": \"Royalston\",\r\n        \"russell\": \"Russell\",\r\n        \"rutland\": \"Rutland\",\r\n        \"salem\": \"Salem\",\r\n        \"salisbury\": \"Salisbury\",\r\n        \"sandisfield\": \"Sandisfield\",\r\n        \"sandwich\": \"Sandwich\",\r\n        \"saugus\": \"Saugus\",\r\n        \"savoy\": \"Savoy\",\r\n        \"scituate\": \"Scituate\",\r\n        \"seekonk\": \"Seekonk\",\r\n        \"sharon\": \"Sharon\",\r\n        \"sheffield\": \"Sheffield\",\r\n        \"shelburne\": \"Shelburne\",\r\n        \"sherborn\": \"Sherborn\",\r\n        \"shirley\": \"Shirley\",\r\n        \"shrewsbury\": \"Shrewsbury\",\r\n        \"shutesbury\": \"Shutesbury\",\r\n        \"somerset\": \"Somerset\",\r\n        \"somerville\": \"Somerville\",\r\n        \"southampton\": \"Southampton\",\r\n        \"southborough\": \"Southborough\",\r\n        \"southbridge\": \"Southbridge\",\r\n        \"southhadley\": \"South Hadley\",\r\n        \"southwick\": \"Southwick\",\r\n        \"spencer\": \"Spencer\",\r\n        \"springfield\": \"Springfield\",\r\n        \"sterling\": \"Sterling\",\r\n        \"stockbridge\": \"Stockbridge\",\r\n        \"stoneham\": \"Stoneham\",\r\n        \"stoughton\": \"Stoughton\",\r\n        \"stow\": \"Stow\",\r\n        \"sturbridge\": \"Sturbridge\",\r\n        \"sudbury\": \"Sudbury\",\r\n        \"sunderland\": \"Sunderland\",\r\n        \"sutton\": \"Sutton\",\r\n        \"swampscott\": \"Swampscott\",\r\n        \"swansea\": \"Swansea\",\r\n        \"taunton\": \"Taunton\",\r\n        \"templeton\": \"Templeton\",\r\n        \"tewksbury\": \"Tewksbury\",\r\n        \"tisbury\": \"Tisbury\",\r\n        \"tolland\": \"Tolland\",\r\n        \"topsfield\": \"Topsfield\",\r\n        \"townsend\": \"Townsend\",\r\n        \"truro\": \"Truro\",\r\n        \"tyngsborough\": \"Tyngsborough\",\r\n        \"tyringham\": \"Tyringham\",\r\n        \"upton\": \"Upton\",\r\n        \"uxbridge\": \"Uxbridge\",\r\n        \"wakefield\": \"Wakefield\",\r\n        \"wales\": \"Wales\",\r\n        \"walpole\": \"Walpole\",\r\n        \"waltham\": \"Waltham\",\r\n        \"ware\": \"Ware\",\r\n        \"wareham\": \"Wareham\",\r\n        \"warren\": \"Warren\",\r\n        \"warwick\": \"Warwick\",\r\n        \"washington\": \"Washington\",\r\n        \"watertown\": \"Watertown\",\r\n        \"wayland\": \"Wayland\",\r\n        \"webster\": \"Webster\",\r\n        \"wellesley\": \"Wellesley\",\r\n        \"wellfleet\": \"Wellfleet\",\r\n        \"wendell\": \"Wendell\",\r\n        \"wenham\": \"Wenham\",\r\n        \"westborough\": \"Westborough\",\r\n        \"westboylston\": \"West Boylston\",\r\n        \"westbridgewater\": \"West Bridgewater\",\r\n        \"westbrookfield\": \"West Brookfield\",\r\n        \"westfield\": \"Westfield\",\r\n        \"westford\": \"Westford\",\r\n        \"westhampton\": \"Westhampton\",\r\n        \"westminster\": \"Westminster\",\r\n        \"westnewbury\": \"West Newbury\",\r\n        \"weston\": \"Weston\",\r\n        \"westport\": \"Westport\",\r\n        \"westspringfield\": \"West Springfield\",\r\n        \"weststockbridge\": \"West Stockbridge\",\r\n        \"westtisbury\": \"West Tisbury\",\r\n        \"westwood\": \"Westwood\",\r\n        \"weymouth\": \"Weymouth\",\r\n        \"whately\": \"Whately\",\r\n        \"whitman\": \"Whitman\",\r\n        \"wilbraham\": \"Wilbraham\",\r\n        \"williamsburg\": \"Williamsburg\",\r\n        \"williamstown\": \"Williamstown\",\r\n        \"wilmington\": \"Wilmington\",\r\n        \"winchendon\": \"Winchendon\",\r\n        \"winchester\": \"Winchester\",\r\n        \"windsor\": \"Windsor\",\r\n        \"winthrop\": \"Winthrop\",\r\n        \"woburn\": \"Woburn\",\r\n        \"worcester\": \"Worcester\",\r\n        \"worthington\": \"Worthington\",\r\n        \"wrentham\": \"Wrentham\",\r\n        \"yarmouth\": \"Yarmouth\"\r\n    };\r\n    var current_town = \"massachusetts\";\r\n\r\n    var margin = {\r\n            top: 0,\r\n            right: 25,\r\n            bottom: 30,\r\n            left: 30\r\n        },\r\n        wrapper_width = rootNode.clientWidth,\r\n        wrapper_height = 400,\r\n        width = wrapper_width - margin.left - margin.right,\r\n        height = wrapper_height - margin.top - margin.bottom;\r\n\r\n    var bisectAge = d3.bisector(function(d) {\r\n        return d.age;\r\n    }).left;\r\n    var percent = d3.format(',.0%');\r\n    var yearformat = d3.format(\"d\");\r\n    // var min_age = 2005;\r\n    // var fields = ['emp', 'edu', 'race', 'orig'];\r\n    var groups = {};\r\n\r\n    var x = d3.scale.linear();\r\n\r\n    var y = d3.scale.linear();\r\n\r\n    var color = d3.scale.category10();\r\n\r\n    var xAxis_bsas = d3.svg.axis();\r\n\r\n    var yAxis_bsas = d3.svg.axis();\r\n\r\n    var line = d3.svg.line();\r\n\r\n\r\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\r\n\r\n    var $lines_bsas = $svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\r\n    $x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", 635)\r\n        .attr(\"y\", 15)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(\"Year\");\r\n\r\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\r\n    $y_axis.append(\"text\");\r\n\r\n\r\n    var legend_pos_text = -60,\r\n        legend_pos_dot = -70;\r\n    var $legend = {\r\n        opioids: {},\r\n        alcohol: {},\r\n        marijuana: {},\r\n        other: {},\r\n        none: {}\r\n    };\r\n\r\n    setupLegend();\r\n\r\n    var $lines = {};\r\n\r\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\r\n\r\n\r\n    function render() {\r\n        updateWidth(rootNode.clientWidth);\r\n\r\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\r\n        x.range([0, width]);\r\n        y.range([height, 0]);\r\n\r\n        xAxis_bsas\r\n            .scale(x)\r\n            .tickFormat(yearformat)\r\n            .ticks((width < 500 ? 4 : 10))\r\n            .orient(\"bottom\")\r\n            .outerTickSize(0);\r\n\r\n        yAxis_bsas\r\n            .scale(y)\r\n            .tickSize(width)\r\n            .orient(\"right\")\r\n            .tickFormat(percent);\r\n\r\n\r\n        line.x(function(d) {\r\n            return x(d.age);\r\n        })\r\n            .y(function(d) {\r\n                return y(d.value);\r\n            })\r\n            .defined(function(d) {\r\n                return y(d.value);\r\n            }); // Omit empty values.\r\n\r\n        $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\r\n        $y_axis.call(yAxis_bsas);\r\n        $lines_bsas.selectAll(\".vis-y-axis text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\r\n        $eventOverlay.attr(\"width\", width).attr(\"height\", height);\r\n\r\n\r\n        renderLegend();\r\n        renderLines();\r\n        updateDots();\r\n    }\r\n\r\n\r\n    function updateWidth(w) {\r\n        wrapper_width = w;\r\n        width = wrapper_width - margin.left - margin.right;\r\n    }\r\n\r\n    function setupLegend() {\r\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\r\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\r\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\r\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\r\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\r\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\r\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\r\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\r\n        $legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\r\n        $legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\r\n    }\r\n\r\n    function renderLegend() {\r\n        var top_offset = 0;\r\n        var line_height = 15;\r\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (1 * line_height));\r\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (1 * line_height) + 3);\r\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (2 * line_height));\r\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (2 * line_height) + 3);\r\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (3 * line_height));\r\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (3 * line_height) + 3);\r\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (4 * line_height));\r\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (4 * line_height) + 3);\r\n        $legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (5 * line_height));\r\n        $legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (5 * line_height) + 3);\r\n    }\r\n\r\n    function setupLines() {\r\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle none y\" + groups[current_town + \"none\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n\r\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\r\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n            var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\r\n            var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\r\n\r\n            if (y_circle_alcohol >= 0) {\r\n\r\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\r\n                // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\r\n\r\n                $lines_bsas.append(\"circle\")\r\n                    .attr(\"class\", function(d) {\r\n                        return \"circle other y\" + groups[current_town + \"other\"].values[i].age\r\n                    })\r\n                    .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\r\n                    .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"pointer-events\", \"none\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function renderLines() {\r\n        $lines.alcohol.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"alcohol\"].values);\r\n        });\r\n        $lines.opioids.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"opioids\"].values);\r\n        });\r\n        $lines.marijuana.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"marijuana\"].values);\r\n        });\r\n        $lines.other.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"other\"].values);\r\n        });\r\n        $lines.none.attr(\"d\", function(d) {\r\n            return line(groups[current_town + \"none\"].values);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function updateDots() {\r\n\r\n        // marriages = groups[current_town];\r\n        //update alcohol line\r\n        $lines_bsas.select(\".line.alcohol\")\r\n            .transition()\r\n            .duration(600)\r\n            .delay(180)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"alcohol\"].values);\r\n            });\r\n\r\n        //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\r\n\r\n        //update alcohol circles\r\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n            var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                // console.log(string_select);\r\n\r\n            if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"alcohol\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"alcohol\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3)\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"r\", 0)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        //marijuana\r\n        $lines_bsas.select(\".line.marijuana\")\r\n            .transition()\r\n            .duration(600)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"marijuana\"].values);\r\n            });\r\n        //update marijuana circles\r\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n            var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                //console.log(string_select);\r\n\r\n            if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"marijuana\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"marijuana\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3)\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"r\", 0)\r\n            }\r\n\r\n        }\r\n\r\n        //none\r\n        $lines_bsas.select(\".line.none\")\r\n            .transition()\r\n            .duration(600)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"none\"].values);\r\n            });\r\n        //update none circles\r\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n\r\n            var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\r\n            var value_select = groups[current_town + \"none\"].values[i].value\r\n                // console.log(string_select);\r\n                // console.log(value_select);\r\n                // console.log(value_select >= 0);\r\n\r\n            if (groups[current_town + \"none\"].values[i].value >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"none\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"none\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3);\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"r\", 0);\r\n            }\r\n\r\n        }\r\n\r\n        //opioids\r\n        $lines_bsas.select(\".line.opioids\")\r\n            .transition()\r\n            .duration(600)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"opioids\"].values);\r\n            });\r\n        //update opioids circles\r\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n\r\n            var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\r\n            var value_select = groups[current_town + \"opioids\"].values[i].value\r\n                //console.log(string_select);\r\n                //console.log(value_select);\r\n                //console.log(value_select >= 0);\r\n\r\n            if (value_select >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"opioids\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"opioids\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3);\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"r\", 0);\r\n            }\r\n\r\n        }\r\n\r\n        //other\r\n        $lines_bsas.select(\".line.other\")\r\n            .transition()\r\n            .duration(600)\r\n            .attr(\"d\", function(d) {\r\n                return line(groups[current_town + \"other\"].values);\r\n            });\r\n        //update other circles\r\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n            var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\r\n            var value_select = groups[current_town + \"other\"].values[i].value\r\n                // console.log(string_select);\r\n                // console.log(value_select);\r\n                // console.log(value_select >= 0);\r\n\r\n            if (value_select >= 0) {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"cx\", function(d) {\r\n                        return x(groups[current_town + \"other\"].values[i].age)\r\n                    })\r\n                    .attr(\"cy\", function(d) {\r\n                        return y(groups[current_town + \"other\"].values[i].value)\r\n                    })\r\n                    .attr(\"r\", 3);\r\n            } else {\r\n                $lines_bsas.selectAll(string_select)\r\n                    .transition()\r\n                    .duration(600)\r\n                    .attr(\"r\", 0);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\r\n        if (error) throw error;\r\n        //console.log(groups);\r\n        // var marriages = groups[current_town];\r\n\r\n        x.domain([2005, d3.max(data, function(d) {\r\n            return d.age;\r\n        })]);\r\n        y.domain([0, .99]);\r\n\r\n        setupLines();\r\n        render();\r\n        window.addEventListener('resize', render);\r\n\r\n\r\n\r\n        // Autocomplete\r\n\r\n        $(\".btn-bsas\").addClass('active');\r\n        d3.selectAll(\".btn-bsas\").on(\"click\", function() {\r\n            current_town = d3.select(this).attr(\"data-val\");\r\n            updateDots();\r\n            d3.select(this).classed('active', true);\r\n            $(\"#tags\").val('');\r\n        });\r\n\r\n\r\n        $(\"#tags\").autocomplete({\r\n            source: function(request, response) {\r\n                console.log(town_names);\r\n                var matches = $.map(town_names, function(acItem) {\r\n                    if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\r\n                        return acItem;\r\n                    }\r\n                });\r\n                response(matches);\r\n                //$(\"#tags\").focus(function() {\r\n                // if (matches.length == 1) {\r\n                //     current_town = matches[0];\r\n                //     $(\".btn-bsas\").removeClass('active');\r\n                //     updateDots();\r\n                // }\r\n                //});\r\n                //console.log(matches);\r\n            },\r\n            select: function(event, ui) {\r\n                $.each(town_names, function(key, value) {\r\n                    if(value === ui.item.value) {\r\n                       current_town = key;        \r\n                    }\r\n                });\r\n                \r\n\r\n                $(\".btn-bsas\").removeClass('active');\r\n                updateDots();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // alcohol\r\n        var focusalcohol = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus alcohol\")\r\n            .style(\"display\", \"none\");\r\n        focusalcohol.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusalcohol.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // marijuana\r\n        var focusmarijuana = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus marijuana\")\r\n            .style(\"display\", \"none\");\r\n        focusmarijuana.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusmarijuana.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // none\r\n        var focusnone = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus none\")\r\n            .style(\"display\", \"none\");\r\n        focusnone.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusnone.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // opioids\r\n        var focusopioids = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus opioids\")\r\n            .style(\"display\", \"none\");\r\n        focusopioids.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusopioids.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // none\r\n        var focusother = $lines_bsas.append(\"g\")\r\n            .attr(\"class\", \"focus other\")\r\n            .style(\"display\", \"none\");\r\n        focusother.append(\"circle\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"r\", 3);\r\n        focusother.append(\"text\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"x\", 9)\r\n            .attr(\"dy\", \".35em\");\r\n\r\n        // Events\r\n        $eventOverlay\r\n            .on(\"mouseover\", function() {\r\n                focusmarijuana.style(\"display\", null);\r\n                focusalcohol.style(\"display\", null);\r\n                focusnone.style(\"display\", null);\r\n                focusopioids.style(\"display\", null);\r\n                focusother.style(\"display\", null);\r\n                //focusage.style(\"display\", null);\r\n            })\r\n            .on(\"mouseout\", function() {\r\n                focusmarijuana.style(\"display\", \"none\");\r\n                focusalcohol.style(\"display\", \"none\");\r\n                focusnone.style(\"display\", \"none\");\r\n                focusopioids.style(\"display\", \"none\");\r\n                focusother.style(\"display\", \"none\");\r\n                //focusage.style(\"display\", \"none\");\r\n            })\r\n            .on(\"mousemove\", mousemove);\r\n\r\n        function mousemove() {\r\n\r\n\r\n\r\n            var x0 = x.invert(d3.mouse(this)[0])\r\n\r\n            // Alcohol\r\n            var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\r\n                d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\r\n                d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\r\n                d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\r\n\r\n            if (d_alcohol.value >= 0) {\r\n                focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\r\n                focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform', \"translate(-28,0)\");\r\n                focusalcohol.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusalcohol.select(\"circle\").attr(\"r\", 0);\r\n                focusalcohol.select(\"text\").text(\"\");\r\n            }\r\n\r\n            // Marijuana\r\n\r\n            var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\r\n                d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\r\n                d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\r\n                d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\r\n\r\n\r\n            // console.log(d_marijuana.value + \" \" + d_marijuana.age);\r\n            // console.log(d_marijuana.value >= 0);\r\n\r\n            if (d_marijuana.value >= 0) {\r\n                focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\r\n                focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform', \"translate(-28,0)\");\r\n                focusmarijuana.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusmarijuana.select(\"circle\").attr(\"r\", 0);\r\n                focusmarijuana.select(\"text\").text(\"\");\r\n            }\r\n\r\n            // None\r\n\r\n            var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\r\n                d0_none = groups[current_town + \"none\"].values[i_none - 1],\r\n                d1_none = groups[current_town + \"none\"].values[i_none],\r\n                d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\r\n\r\n            if (d_none.value >= 0) {\r\n                focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\r\n                focusnone.select(\"text\").text(percent(d_none.value));\r\n                focusnone.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusnone.select(\"circle\").attr(\"r\", 0);\r\n                focusnone.select(\"text\").text(\"\");\r\n            }\r\n\r\n\r\n            // Opioids\r\n            var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\r\n                d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\r\n                d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\r\n                d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\r\n\r\n            if (d_opioids.value >= 0) {\r\n                focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\r\n                focusopioids.select(\"text\").text(percent(d_opioids.value));\r\n                focusopioids.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusopioids.select(\"circle\").attr(\"r\", 0);\r\n                focusopioids.select(\"text\").text(\"\");\r\n            }\r\n\r\n\r\n            // other\r\n            var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\r\n                d0_other = groups[current_town + \"other\"].values[i_other - 1],\r\n                d1_other = groups[current_town + \"other\"].values[i_other],\r\n                d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\r\n\r\n            //console.log(d_other.value);\r\n\r\n            if (d_other.value >= 0) {\r\n                focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\r\n                focusother.select(\"text\").text(percent(d_other.value));\r\n                focusother.select(\"circle\").attr(\"r\", 4);\r\n            } else {\r\n                focusother.select(\"circle\").attr(\"r\", 0);\r\n                focusother.select(\"text\").text(\"\");\r\n            }\r\n\r\n\r\n            // Adjust label horizontal positions.\r\n            if (x0 > 80) {\r\n                focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n                focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n            } else {\r\n                focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n                focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    }); // @end d3.tsv()\r\n\r\n\r\n    function type(d, i) {\r\n\r\n        d3.keys(d).forEach(function(key) {\r\n            d[key] = +d[key];\r\n            if (key != 'age') {\r\n                if (!(key in groups)) {\r\n                    groups[key] = {\r\n                        'values': [{\r\n                            age: d.age,\r\n                            value: d[key]\r\n                        }]\r\n                    };\r\n                } else {\r\n                    groups[key]['values'].push({\r\n                        age: d.age,\r\n                        value: d[key]\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        return d;\r\n\r\n    }\r\n})();","$(document).ready(function() {\r\n    var prescription = [{\r\n            \"Yes\": 83,\r\n            \"No\": 17\r\n        }, {\r\n            \"Yes\": 57,\r\n            \"No\": 43\r\n        }, {\r\n            \"Yes\": 50,\r\n            \"No\": 50\r\n        }, {\r\n            \"Yes\": 37,\r\n            \"No\": 63\r\n        }],\r\n\r\n        heroin = [{\r\n            \"Yes\": 65,\r\n            \"No\": 35\r\n        }, {\r\n            \"Yes\": 28,\r\n            \"No\": 72\r\n        }, {\r\n            \"Yes\": 20,\r\n            \"No\": 80\r\n        }, {\r\n            \"Yes\": 13,\r\n            \"No\": 87\r\n        }],\r\n\r\n        fentanyl = [{\r\n            \"Yes\": 68,\r\n            \"No\": 32\r\n        }, {\r\n            \"Yes\": 30,\r\n            \"No\": 70\r\n        }, {\r\n            \"Yes\": 22,\r\n            \"No\": 78\r\n        }, {\r\n            \"Yes\": 17,\r\n            \"No\": 83\r\n        }],\r\n\r\n        both = [{\r\n            \"Yes\": 64,\r\n            \"No\": 36\r\n        }, {\r\n            \"Yes\": 24,\r\n            \"No\": 76\r\n        }, {\r\n            \"Yes\": 15,\r\n            \"No\": 85\r\n        }, {\r\n            \"Yes\": 9,\r\n            \"No\": 91\r\n        }],\r\n\r\n        methadone = [{\r\n            \"Yes\": 76,\r\n            \"No\": 24\r\n        }, {\r\n            \"Yes\": 46,\r\n            \"No\": 54\r\n        }, {\r\n            \"Yes\": 41,\r\n            \"No\": 59\r\n        }, {\r\n            \"Yes\": 27,\r\n            \"No\": 73\r\n        }],\r\n\r\n        buprenorphine = [{\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }, {\r\n            \"Yes\": 60,\r\n            \"No\": 40\r\n        }],\r\n\r\n        dataset = [{\r\n                data: [{\r\n                    count: 867,\r\n                    name: 'Heroin'\r\n                }],\r\n                name: 'Heroin'\r\n            }, {\r\n                data: [{\r\n                    count: 288,\r\n                    name: 'Fentanyl'\r\n                }],\r\n                name: 'Fentanyl'\r\n            }, {\r\n                data: [{\r\n                    count: 249,\r\n                    name: 'Fentanyl & Heroin'\r\n                }],\r\n                name: 'Fentanyl & Heroin'\r\n            }, {\r\n                data: [{\r\n                    count: 154,\r\n                    name: 'Prescription Opioids'\r\n                }],\r\n                name: 'Prescription Opioids'\r\n            }, {\r\n                data: [{\r\n                    count: 84,\r\n                    name: 'Methadone'\r\n                }],\r\n                name: 'Methadone'\r\n            }, {\r\n                data: [{\r\n                    count: 15,\r\n                    name: 'Buprenorphine'\r\n                }],\r\n                name: 'Buprenorphine'\r\n            }\r\n\r\n        ];\r\n\r\n\r\n    var data_substance = prescription;\r\n    var time = 0;\r\n    asignVal_substance(data_substance, time);\r\n\r\n    $(\".btn-substance\").on('click', function() {\r\n        var sub = parseInt($(this).val());\r\n        var substance;\r\n        $(\".btn-time\").removeClass('disableClick disabled');\r\n        switch (sub) {\r\n            case 0:\r\n                substance = prescription;\r\n                break;\r\n            case 1:\r\n                substance = heroin;\r\n                break;\r\n            case 2:\r\n                substance = fentanyl;\r\n                break;\r\n            case 3:\r\n                substance = both;\r\n                break;\r\n            case 4:\r\n                substance = methadone;\r\n                break;\r\n            case 5:\r\n                substance = buprenorphine;\r\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\r\n                $(\"#studyperiod\").addClass('active');\r\n                break;\r\n        }\r\n        data_substance = substance;\r\n        asignVal_substance(data_substance, time);\r\n    });\r\n\r\n\r\n    $(\".btn-time\").on('click', function() {\r\n        $('.btn-time').removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        time = parseInt($(this).val());\r\n        asignVal_substance(data_substance, time);\r\n        var time_period;\r\n        switch (time) {\r\n            case 0:\r\n                time_period = \"During the Study Period\";\r\n                break;\r\n            case 1:\r\n                time_period = \"6 Months Before Death\";\r\n                break;\r\n            case 2:\r\n                time_period = \"3 Months Before Death\";\r\n                break;\r\n            case 3:\r\n                time_period = \"1 Month Before Death\";\r\n                break;\r\n        }\r\n        $(\"#time-perioid\").html(time_period.toLowerCase());\r\n        $(\"#label_blocks\").html(time_period);\r\n    });\r\n\r\n    function asignVal_substance(type, time) {\r\n        $(\"#people\").empty();\r\n        $('#people').each(function() {\r\n            makeChart_substance(type, time);\r\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Had prescription</th><th>Did not have prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    function makeChart_substance(data_substance, i) {\r\n        var blockArray_substance = [];\r\n        var noOfBlocks_No = Math.round(data_substance[i].No);\r\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\r\n        var blocksAdded = 0;\r\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\r\n        addBlock_substance(\"#people\", blockArray_substance, 0);\r\n    }\r\n\r\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\r\n        for (b = 0; b < noOfBlocks_No; b++) {\r\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\r\n        };\r\n        for (b = 0; b < noOfBlocks_Yes; b++) {\r\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\r\n        };\r\n        return blockArray_substance;\r\n\r\n    }\r\n\r\n    function addBlock_substance(id, blockArray_substance, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray_substance[i]);\r\n            i++;\r\n            addBlock_substance(id, blockArray_substance, i);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////\r\n    //BAR CHART\r\n    ///////////////////////\r\n\r\n    var width = '100%',\r\n        height = 30;\r\n    // series = dataset.map(function(d) {\r\n    //     return d.name;\r\n    // }),\r\n    dataset = dataset.map(function(d) {\r\n            return d.data.map(function(o, i) {\r\n                // Structure it so that your numeric\r\n                // axis (the stacked amount) is y\r\n                return {\r\n                    y: o.count,\r\n                    s: o.name,\r\n                };\r\n            });\r\n        }),\r\n        stack = d3.layout.stack();\r\n\r\n    stack(dataset);\r\n\r\n\r\n    var dataset = dataset.map(function(group) {\r\n            return group.map(function(d) {\r\n                // Invert the x and y values, and y0 becomes x0\r\n                return {\r\n                    x: d.y,\r\n                    n: d.s,\r\n                    y: d.x,\r\n                    x0: d.y0\r\n                };\r\n            });\r\n        }),\r\n        $bar = d3.select('#bar')\r\n        .append('svg')\r\n        .attr('id', 'bar_svg')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n    var color = [\"#b71c1c\", '#CFD8DC']\r\n    var colors;\r\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\r\n    draw(colors);\r\n    $(\".btn-substance\").on('click', function() {\r\n        $('#bar_svg').empty();\r\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\r\n        $('.btn-substance').removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        colors[$(this).val()] = color[0];\r\n        draw(colors);\r\n        var i = $(this).val(),\r\n            d = dataset[$(this).val()][0];\r\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\r\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand() / 2;\r\n        console.log(d);\r\n\r\n    });\r\n\r\n    function draw(colors) {\r\n        $('#bar_svg')\r\n            .append('g')\r\n            .attr('class', 'bar_g')\r\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\r\n        xMax = d3.max(dataset, function(group) {\r\n                return d3.max(group, function(d) {\r\n                    return d.x + d.x0;\r\n                });\r\n            }),\r\n            xScale = d3.scale.linear()\r\n            .domain([0, xMax])\r\n            .range([0, width]),\r\n            // months = dataset[0].map(function(d) {\r\n            //     return d.y;\r\n            // }),\r\n            yScale = d3.scale.ordinal()\r\n            //.domain(months)\r\n            .rangeRoundBands([0, height], .1),\r\n\r\n            colours = d3.scale.ordinal()\r\n            .range(colors),\r\n\r\n            bar_groups = $bar.selectAll('.bar_g')\r\n            .data(dataset)\r\n            .enter()\r\n            .append('g')\r\n            .style('fill', function(d, i) {\r\n                return colours(i);\r\n            }),\r\n\r\n            rects = bar_groups.selectAll('rect')\r\n            .data(function(d) {\r\n                return d;\r\n            })\r\n            .enter()\r\n            .append('rect')\r\n            .style('stroke', '#b71c1c')\r\n            .attr('x', function(d) {\r\n                return xScale(d.x0);\r\n            })\r\n            .attr('y', function(d, i) {\r\n                return yScale(d.y);\r\n            })\r\n            .attr('height', function(d) {\r\n                return yScale.rangeBand();\r\n            })\r\n            .attr('width', function(d) {\r\n                return xScale(d.x);\r\n            })\r\n    };\r\n\r\n})\r\n","$(document).ready(function() {\r\n\r\n    var prescription = [\r\n        [0, 0],\r\n        [\"No\", 58],\r\n        [\"Yes\", 13],\r\n        [\"Yes\", 8],\r\n        [\"No\", 21],\r\n        [0, 0]\r\n    ];\r\n    var heroin = [\r\n        [0, 0],\r\n        [\"No\", 22],\r\n        [\"Yes\", 49],\r\n        [\"Yes\", 17],\r\n        [\"No\", 12],\r\n        [0, 0]\r\n    ];\r\n\r\n    var multi = [\r\n        [\"1\", 15],\r\n        [\"2\", 31],\r\n        [\"3\", 25],\r\n        [\"3\", 18],\r\n        [\"2\", 9],\r\n        [\"1\", 2]\r\n    ];\r\n\r\n\r\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\r\n    // console.log(person);\r\n    var table_html = [\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\r\n    ];\r\n\r\n\r\n    var data_gender = prescription;\r\n\r\n\r\n    //Set initial values\r\n    makeChart_gender(prescription);\r\n    $('#table_gender').html(table_html[0]);\r\n    $(\"#prescription\").addClass(\"active\");\r\n\r\n    //Link text controls\r\n    $('.controls-block').click(function() {\r\n        var $option = $(this).data('select');\r\n        var $value = eval($(this).val());\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n    //Link button controls\r\n    $('.btn-blocks').click(function() {\r\n        var $option = $(this).attr('id');\r\n        var $value = eval($(this).val());\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n\r\n    function asignVal_gender(option, value) {\r\n        $(\"#buttons-blocks button\").removeClass(\"active\");\r\n        $('#' + option).addClass('active');\r\n        $(\"#gender\").empty();\r\n        makeChart_gender(eval(option));\r\n        $('#table_gender').html(table_html[value]);\r\n    };\r\n\r\n\r\n    function makeChart_gender(data_gender) {\r\n\r\n        var blockArray = [];\r\n        if (data_gender == multi) {\r\n            var index = [0, 1, 2, 3, 4, 5];\r\n        } else {\r\n            var index = [0, 0, 2, 3, 5, 5];\r\n        };\r\n        for (i = 0; i < 6; i++) {\r\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\r\n            var blocksAdded = 0;\r\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\r\n        }\r\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\r\n    }\r\n\r\n    function addBlock_gender(id, blockArray, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray[i]);\r\n            i++;\r\n            //timeout += 1;\r\n            // setTimeout(function() {\r\n            addBlock_gender(id, blockArray, i);\r\n            //})\r\n        }\r\n    }\r\n\r\n\r\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\r\n        for (b = 0; b < noOfBlocks; b++) {\r\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\r\n            blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\r\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\r\n        }\r\n        return blockArray;\r\n    }\r\n\r\n});\r\n\r\n\r\n// var $block = document.getElementByClassName('block');\r\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\r\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n            .text(\"Age\")\r\n            .attr(\"class\", \"vis-x-axis-label\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .attr(\"y\", 10)\r\n            .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n        // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n\r\n\r\n        updateWidth();\r\n        redraw(dataset, selected);\r\n\r\n        window.addEventListener('resize', function() {\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n        });\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\"+(width - 10)+\",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-axis\");\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-data-label\");\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();\r\n","$(document).ready(function(){\r\n\r\n    dataset = [\r\n        { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\r\n        { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\r\n        { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\r\n        { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\r\n    ];\r\n\r\n    var color = d3.scale.ordinal()\r\n        .range([\"#2166ac\", \"#92c5de\"]);\r\n\r\n    var width, height, margin = {};\r\n\r\n    updateWidth();\r\n\r\n    var x0 = d3.scale.ordinal()\r\n        .rangeRoundBands([0, width], .1);\r\n\r\n    var x1 = d3.scale.ordinal();\r\n\r\n    var y = d3.scale.linear()\r\n        .range([height, 0]);\r\n\r\n    //var colorRange = d3.scale.category20();\r\n    //var color = d3.scale.ordinal()\r\n    //.range(colorRange.range());\r\n\r\n\r\n\r\n    var xAxis_bars = d3.svg.axis()\r\n        .scale(x0)\r\n        .orient(\"bottom\");\r\n\r\n    var yAxis_bars = d3.svg.axis()\r\n        .scale(y)\r\n        .orient(\"left\")\r\n        .tickFormat(d3.format(\".0f\"));\r\n\r\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\r\n\r\n\r\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\r\n    var $bars_race = $svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n    var options = d3.keys(dataset[0]).filter(function(key) {\r\n        return key !== \"raceth\";\r\n    });\r\n\r\n    dataset.forEach(function(d) {\r\n        d.values = options.map(function(name) {\r\n            return { name: name, value: +d[name] };\r\n        });\r\n    });\r\n\r\n    x0.domain(dataset.map(function(d) {\r\n        return d.raceth;\r\n    }));\r\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\r\n    y.domain([0, d3.max(dataset, function(d) {\r\n        return d3.max(d.values, function(d) {\r\n            return d.value;\r\n        });\r\n    })]);\r\n\r\n    var xAxis = $bars_race.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(10,\" + height + \")\");\r\n\r\n    var yAxis = $bars_race.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\");\r\n\r\n    yAxis.append(\"text\")\r\n        .attr(\"y\", -35)\r\n        .attr(\"dy\", \".71em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age Adjusted Rates per 100,000\");\r\n\r\n    var bar = $bars_race.selectAll(\".bar\")\r\n        .data(dataset)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"rect\")\r\n        .attr(\"transform\", function(d) {\r\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\r\n        });\r\n\r\n\r\n    var bars = bar.selectAll(\"rect\")\r\n        .data(function(d) {\r\n            return d.values;\r\n        })\r\n        .enter().append(\"rect\");\r\n\r\n    bars\r\n        .attr(\"width\", x1.rangeBand())\r\n        .attr(\"x\", function(d) {\r\n            return x1(d.name) + 5;\r\n        })\r\n        .attr(\"y\", function(d) {\r\n            return y(d.value);\r\n        })\r\n        .attr(\"value\", function(d) {\r\n            return d.name;\r\n        })\r\n        .attr(\"height\", function(d) {\r\n            return height - y(d.value);\r\n        })\r\n        .style(\"fill\", function(d) {\r\n            return color(d.name);\r\n        });\r\n\r\n    //bar.on(\r\n    //\"mouseover\", function(){\r\n    //d3.select(this).attr(\"fill\",\"red !important\");\r\n    //});\r\n\r\n    bar\r\n        .on(\"mousemove\", function(d) {\r\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\r\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\r\n    \tdivtooltip_raceeth.classed(\"hidden\", false);\r\n            var x = d3.event.pageX,\r\n                y = d3.event.pageY\r\n            var elements = document.querySelectorAll(':hover');\r\n            l = elements.length\r\n            l = l - 1\r\n            elementData = elements[l].__data__\r\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\r\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\r\n\r\n        });\r\n\r\n    bar\r\n        .on(\"mouseout\", function(d) {\r\n    \tdivtooltip_raceeth.classed(\"hidden\", true);\r\n        });\r\n\r\n\r\n\r\n    var legend = $bars_race.selectAll(\".vis-legend\")\r\n        .data(options.slice())\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"vis-legend\")\r\n        .attr(\"transform\", function(d, i) {\r\n            return \"translate(0,\" + i * 20 + \")\";\r\n        });\r\n\r\n    var legendRect = legend.append(\"rect\")\r\n        .attr(\"x\", width - 18)\r\n        .attr(\"width\", 18)\r\n        .attr(\"height\", 18)\r\n        .style(\"fill\", color);\r\n\r\n    var legendText = legend.append(\"text\")\r\n        .attr(\"x\", width - 24)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".35em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .text(function(d) {\r\n            return d;\r\n        });\r\n\r\n    function wrap(text, width) {\r\n        text.each(function() {\r\n            var text = d3.select(this),\r\n                words = text.text().split(/\\s+/).reverse(),\r\n                word,\r\n                line = [],\r\n                lineNumber = 0,\r\n                lineHeight = 1.1, // ems\r\n                y = text.attr(\"y\"),\r\n                dy = parseFloat(text.attr(\"dy\")),\r\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n            while (word = words.pop()) {\r\n                line.push(word);\r\n                tspan.text(line.join(\" \"));\r\n                if (tspan.node().getComputedTextLength() > width) {\r\n                    line.pop();\r\n                    tspan.text(line.join(\" \"));\r\n                    line = [word];\r\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function render () {\r\n        updateWidth();\r\n\r\n        x1.rangeRoundBands([0, x0.rangeBand()]);\r\n\r\n        x0.rangeRoundBands([0, width], .1);\r\n        y.range([height, 0]);\r\n\r\n        xAxis_bars.scale(x0);\r\n        yAxis_bars.scale(y);\r\n\r\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n        xAxis\r\n            .attr(\"transform\", \"translate(10,\" + height + \")\")\r\n            .call(xAxis_bars)\r\n            .selectAll(\".tick text\")\r\n            .call(wrap, x0.rangeBand());\r\n\r\n        yAxis.call(yAxis_bars);\r\n        legendRect.attr(\"x\", width - 18);\r\n        legendText.attr(\"x\", width - 24);\r\n\r\n        bar.attr(\"transform\", function(d) {\r\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\r\n        });\r\n\r\n        bars.attr(\"width\", x1.rangeBand())\r\n            .attr(\"x\", function(d) {\r\n                return x1(d.name) + 20;\r\n            })\r\n            .attr(\"y\", function(d) {\r\n                return y(d.value);\r\n            })\r\n            .attr(\"value\", function(d) {\r\n                return d.name;\r\n            })\r\n            .attr(\"height\", function(d) {\r\n                return height - y(d.value);\r\n            });\r\n\r\n    }\r\n\r\n    function updateWidth () {\r\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\r\n        margin = {\r\n            top: 50,\r\n            right: 10,\r\n            bottom: 60,\r\n            left: 50\r\n        },\r\n        width = w - margin.left - margin.right;\r\n\r\n        if(w < 500) {\r\n            height = 350 - margin.top - margin.bottom;\r\n        } else {\r\n            height = 500 - margin.top - margin.bottom;\r\n        }\r\n\r\n    }\r\n\r\n    render();\r\n    window.addEventListener('resize', render);\r\n});\r\n"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["custom.js","map-death.js","queue.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","lines-bsas.js","bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","parallelism","pop","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","preventDefault","$anchor","stop","animate","scrollTop","tab","target","newTabHeight","querySelector","clientHeight","parent","each","$id","$current","find","location","pathname","hostname","hash","$target","get","play","load","response","asignVal_svg","val_svg","initialize","console","log","mapWidth","mapHeight","transformX","transformY","legendWidth","legendHeight","unitWidth","Vis","visualize","states","forEach","wrapper","visualizationWrapper","createMap","selector","eventName","el","shape","key","$maps_sub","value","values","palette","self","town_value","geoData","parentNode","getElementsByClassName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","PuBuGn","date","setupData","years","keys","dataset","OMRs","y","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","time","sqrt","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","mouseoutFunc","symbol","type","size","tooltipFent","focus","mouseoverFunc","y0","y1","invert","percentVal","mousemoveFunc","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","componentWidth","renderLegend","legendItems","legendItemsTranslate","$legend","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","none","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","delay","string_select","value_select","town_names","bisectAge","bisector","category10","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","indexOf","term","ui","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","time_period","o","stack","layout","n","parseFloat","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","words","split","reverse","lineNumber","dy","tspan","join","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","legendRect","legendText","bar","raceth","2014","2015","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"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AAAsJ,SAYAtJ,EA9kCA,GAAA+L,GAAAzO,SAAAyJ,cAAA,eACAyN,GAEA,WACA,QACA,WACA,QACA,SACA,SACA,WACA,UACA,UACA,WACA,YACA,aACA,QACA,WACA,UACA,QACA,YACA,SACA,OACA,OACA,aACA,QACA,SACA,UACA,cACA,aACA,UACA,UACA,SACA,cACA,UACA,YACA,aACA,YACA,SACA,SACA,SACA,aACA,UACA,WACA,YACA,WACA,cACA,YACA,WACA,aACA,WACA,cACA,YACA,WACA,aACA,YACA,WACA,aACA,YACA,SACA,WACA,SACA,aACA,WACA,UACA,aACA,UACA,WACA,UACA,eACA,WACA,WACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,SACA,UACA,YACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,YACA,UACA,kBACA,iBACA,iBACA,UACA,cACA,SACA,YACA,WACA,SACA,QACA,UACA,YACA,YACA,WACA,YACA,UACA,aACA,aACA,WACA,WACA,UACA,WACA,aACA,OACA,aACA,SACA,UACA,UACA,SACA,YACA,kBACA,aACA,SACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,UACA,YACA,UACA,WACA,YACA,cACA,SACA,OACA,aACA,UACA,WACA,YACA,YACA,eACA,WACA,MACA,YACA,QACA,aACA,WACA,YACA,SACA,UACA,YACA,aACA,SACA,SACA,YACA,OACA,YACA,SACA,aACA,YACA,aACA,SACA,cACA,aACA,UACA,eACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,gBACA,cACA,YACA,UACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,aACA,kBACA,SACA,YACA,SACA,UACA,aACA,aACA,eACA,iBACA,WACA,UACA,cACA,SACA,UACA,YACA,cACA,mBACA,iBACA,cACA,cACA,eACA,cACA,aACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,aACA,aACA,aACA,WACA,WACA,YACA,eACA,SACA,WACA,UACA,UACA,WACA,SACA,WACA,YACA,WACA,WACA,OACA,SACA,YACA,UACA,UACA,QACA,YACA,cACA,WACA,SACA,QACA,WACA,UACA,SACA,YACA,YACA,WACA,UACA,aACA,aACA,WACA,aACA,cACA,cACA,eACA,cACA,YACA,UACA,cACA,WACA,cACA,WACA,YACA,OACA,aACA,UACA,aACA,SACA,aACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,WACA,QACA,eACA,YACA,QACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,SACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,UACA,SACA,eACA,kBACA,iBACA,cACA,kBACA,kBACA,cACA,cACA,YACA,WACA,cACA,cACA,SACA,WACA,WACA,WACA,UACA,UACA,YACA,eACA,eACA,aACA,aACA,aACA,UACA,WACA,SACA,YACA,cACA,WACA,YAEAL,EAAA,gBAEAlI,GACA/N,IAAA,EACAkO,MAAA,GACAC,OAAA,GACAH,KAAA,IAEA2D,EAAA9D,EAAAC,YACA8D,EAAA,IACArP,EAAAoP,EAAA5D,EAAAC,KAAAD,EAAAG,MACApO,EAAA8R,EAAA7D,EAAA/N,IAAA+N,EAAAI,OAEAoI,EAAA5V,GAAA6V,SAAA,SAAA1U,GACA,MAAAA,GAAA+S,MACA7G,KACA4G,EAAAjU,GAAAsE,OAAA,QACA+N,EAAArS,GAAAsE,OAAA,KAGAoI,KAEAyB,EAAAnO,GAAAyB,MAAAkR,SAEA5G,EAAA/L,GAAAyB,MAAAkR,SAIAmB,GAFA9T,GAAAyB,MAAAqU,aAEA9V,GAAA6B,IAAA6M,QAEAsF,EAAAhU,GAAA6B,IAAA6M,OAEAC,EAAA3O,GAAA6B,IAAA8M,OAGAoC,EAAA/Q,GAAA8B,OAAA,eAAAC,OAAA,OAEAsS,EAAAtD,EACAhP,OAAA,KACAC,KAAA,YAAA,aAAAoL,EAAAC,KAA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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        event.preventDefault();\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n  var tab = $(e.target).attr('href');\n  var newTabHeight = document.querySelector(tab).clientHeight;\n  $(tab).parent().animate({ height: newTabHeight });\n});\n\n\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n$('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\n\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n        if (target.length) {\n            $('html,body').animate({\n                scrollTop: target.offset().top\n            }, 500);\n            return false;\n        }\n    }\n    // });\n\n\n});\n\n\n/////////////////////////////Accordion\n// $(function() {\n//     var icons = {\n//         header: \"iconClosed\",\n//         activeHeader: \"iconOpen\",\n//         hoverHeader: 'iconHover'\n\n//     };\n//     $(\"#accordion\").accordion({\n//         icons: icons,\n//         heightStyle: \"content\"\n//     });\n// });\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$('.js-play-video').click(function() {\n    var $target = $($(this).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n\t//for (i = 0; i < usStates.features.length; i++) {\r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n\t\t//return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);\r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    //console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n           // console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            //console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n       // console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","/* global d3, $, queue */\n// Dependency on queue.js\n\n(function() {\n    \"use strict\";\n\n    // Heights & Widths\n    var legendHeight = 60,\n\tlegendWidth = '100%',\n\tmapWidth = 600,\n\tmapHeight = 400;\n\n    var currentyear;\n    var svgContainer;\n    var opChgScale;\n\n    // Helper functions\n\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n\n\n    function initialize() {\n\tqueue()\n\t//should be town polym data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.json, \"us_states_5m.geo.json\")\n\t//should be opioid death data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.csv, \"us_pop.csv\")\n\t.awaitAll(generateMap);\n    }\n\n    function generateMap(error, results) {\n\n\tvar maTowns = results[0];\n\tvar maOpioid = results[1];\n\n\n\t$('.controls-map').click(function() {\n\t    $(\"#odMap_timeline\").val($(this).data('select'));\n\t    setSymbology($(this).data('select'));\n\t});\n\n\tfor (var i = 0; i < maTowns.features.length; i++) {\n\t    if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\n\t\tconsole.log('ASSERT failure for index: ' + i);\n\t\tconsole.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n\t\t// alert('Input data corrupted: generation of map terminated.');\n\t\treturn;\n            }\n\t    maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n\t}\n\n\tsvgContainer = d3.select(\"#odMap_map\")\n\t    .classed(\"svg-container\", true) //container class to make it responsive\n\t    .append(\"svg\")\n\t    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n\t    .attr(\"viewBox\", \"0 0 \"+mapWidth+\" \"+mapHeight)\n\t    //class to make it responsive\n\t    .classed(\"svg-content-responsive\", true)\n\t    .style(\"border\", \"0px solid steelblue\");\n\n\tvar tooltip = d3.select('#odMap_map').append('div')\n\t    .attr('class', 'hidden vis-tooltip');\n\n\t//#eff3ff\n\n\topChgScale = d3.scale.threshold()\n\t    .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\n\t    .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\n\topChgScale.domainStrings = function() {\n\t    return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64'\n\t    ]);\n\t};\n\n\n\tvar projection = d3.geo.conicConformal()\n\t    .parallels([41 + 43 / 60, 42 + 41 / 60])\n\t    .rotate([71 + 30 / 60, -41])\n\t    .scale([10000])\n\t    .translate([mapWidth/1.8, mapHeight*1.1]);\n\n\tvar geoPath = d3.geo.path()\n\t    .projection(projection);\n\n\tsvgContainer.selectAll(\"path\")\n\t    .data(maTowns.features)\n\t    .enter()\n\t    .append(\"path\")\n\t    .classed(\"deathmap\", true)\n\t    .attr(\"d\", function(d, i) {\n\t\treturn geoPath(d);\n\t    })\n\t    .style(\"stroke\", \"#2f363d\")\n\t    .style(\"stroke-width\", \"0.1px\")\n\t    .style(\"fill\", \"white\")\n\t    .on('mousemove', function(d) {\n\t\tvar mouse = d3.mouse(svgContainer.node()).map(function(d) {\n\t\t    return parseInt(d);\n\t\t});\n\n\t\tvar style = 'left:'+((100*mouse[0]/mapWidth)+3)+'% !important;top:'+(100*mouse[1]/mapHeight)+'% !important;';\n\t\t// Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\n\t\tvar transformX= mouse[0] > mapWidth/2 ? '-160%' : 0,\n\t\t    transformY= mouse[1] > mapHeight/2 ? '-100%' : 0;\n\t\tstyle += 'transform: translate('+transformX+','+transformY+');';\n\n\t\tvar string_base = \"yr\";\n\t\tvar currentvalue = string_base.concat(currentyear);\n\t\tvar currentrate;\n\n\t\tif (d.properties[currentvalue] > 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else if (d.properties[currentvalue] === 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else {\n\t\t    currentrate = \"N/A*\";\n\t\t}\n\n\t\ttooltip.classed('hidden', false)\n\t\t    .attr('style', style)\n\t\t    .html(\"<strong>\" + toTitleCase(d.properties.TOWN) + \"</strong> | \" + currentrate);\n\t    })\n\n\t    .on('mouseover', function(d, i) {\n\t\td3.select(this).style('fill-opacity', 0.25)\n\t\t    .style(\"stroke\", \"white\")\n\t\t    .style(\"stroke-width\", \"2px\");\n\t    })\n\t    .on('mouseout', function(d, i) {\n\t\ttooltip.classed('hidden', true);\n\t\td3.selectAll('path.deathmap')\n\t\t    .style(\"fill-opacity\", 1)\n\t\t    .style(\"stroke\", \"#2f363d\")\n\t\t\t.style(\"stroke-width\", \"0.1px\");\n\t    });\n\n\n\tgetYear();\n\tgenerateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\n\n\n    } // generateMap\n\n    function getYear() {\n        // initial setting on load\n        $(\"#odMap_timeline\").val(2015);\n        setSymbology(2015);\n        $(\"#odMap_timeline\").on('input change', function() {\n            setSymbology($(this).val());\n        });\n    }\n\n    function setSymbology(year) {\n\n        var szAttr = 'yr' + year;\n        currentyear = year;\n        $('#odMap_titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\n        $('#odMap_fromYear').html(year);\n\n        $('#odMap_source').html('Sources: <a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/programs/admin/dmoa/vitals/\">Massachusetts Registry of Vital Records and Statistics</a>, ' +\n                             '<br><a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/\">Massachusetts Department of Public Health</a>.</>');\n\n        svgContainer.selectAll(\"path.deathmap\")\n            .transition()\n            .duration(500)\n            .style(\"fill\", function(d, i) {\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n            });\n    }\n\n    function generateLegend(scale, szDivId, szCaption) {\n\n        var svg = d3.select('#' + szDivId).append(\"svg\")\n\t    .attr(\"width\", legendWidth)\n\t    .attr(\"height\", legendHeight);\n\n        var g = svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        //legendData.push({\n            //d: -9999,\n            //r: '#f1f1f1',\n            //s: 'N/A'\n        //});\n\tfor (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n\tvar unitWidth = 100/legendData.length;\n\n        g.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n\t    .attr(\"height\", legendHeight/3)\n\t    .attr(\"width\", function(d, i) {\n\t\treturn unitWidth+'%';\n\t    })\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        g.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + (unitWidth/2) + '%';\n            })\n\t    .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        g.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    } // generateLegend()\n\n\n    $(document).ready(initialize);\n})();\n\n\n\n\n\n\n\n// ///////////////////Map Composite\n\n\n\n\n\n\n\n\n\n\n// function app2() {\n//     queue()\n//     //should be town polym data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\n//     //should be opioid death data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.csv, \"us_pop.csv\")\n//     .awaitAll(generateMap2);\n// }\n\n// function generateMap2(error, results) {\n//     $('.controls-map').click(function() {\n//         $(\"#timeline\").val($(this).data('select'));\n//         setSymbology2($(this).data('select'));\n//     });\n\n//     var maTowns = results[0];\n//     var maOpioid = results[1];\n\n//     var currentyear\n\n//     var i;\n//     for (i = 0; i < maTowns.features.length; i++) {\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\n//             // console.log('ASSERT failure for index: ' + i);\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n//             alert('Input data corrupted: generation of map terminated.');\n//             return;\n//         }\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n//     }\n\n//     var width = 960,\n//         height = 450;\n\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"0px solid steelblue\");\n\n//     var tooltip2 = d3.select('#map2').append('div')\n//         .attr('class', 'hidden tooltip2');\n\n//     var opChgScale = d3.scale.threshold()\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\n//         .range(colorbrewer.RdPu[5]);\n//     opChgScale.domainStrings = function() {\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\n//             '15.9-31.5', '>31.5'\n//         ]);\n//     };\n\n//     function toTitleCase(str) {\n//         return str.replace(/\\w\\S*/g, function(txt) {\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n//         });\n//     }\n\n//     var projection = d3.geo.conicConformal()\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\n//         .rotate([71 + 30 / 60, -41])\n//         .scale([10000])\n//         .translate([330, 480]);\n\n//     var geoPath = d3.geo.path()\n//         .projection(projection);\n\n//     var map = svgContainer.selectAll(\"path\")\n//         .data(maTowns.features)\n//         .enter()\n//         .append(\"path\")\n//         .attr(\"d\", function(d, i) {\n//             return geoPath(d);\n//         })\n//         .on('mousemove', function(d) {\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\n//                 return parseInt(d);\n//             });\n//             var string_base = \"yr\"\n//             currentvalue = string_base.concat(currentyear);\n//             var currentrate\n\n//             if (d.properties[currentvalue] > 0) {\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\n//             } else if (d.properties[currentvalue] == 0) {\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n//             } else {\n//                 currentrate = \"N/A*\";\n//             }\n\n\n//             tooltip2.classed('hidden', false)\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\n//         })\n//         .on('mouseover', function(d, i) {\n\n//             var currentState = this;\n//             d3.select(this).style('fill-opacity', 0.25)\n//                 .style(\"stroke\", \"white\")\n//                 .style(\"stroke-width\", \"2px\");\n//         })\n//         .on('mouseout', function(d, i) {\n//             tooltip2.classed('hidden', true);\n//             d3.selectAll('path')\n//                 .style(\"fill-opacity\", 1)\n//                 .style(\"stroke\", \"#2f363d\")\n//                 .style(\"stroke-width\", \"0.1px\");\n//         })\n//         .style(\"stroke\", \"#2f363d\")\n//         .style(\"stroke-width\", \"0.1px\")\n//         .style(\"fill\", \"white\")\n//         .on('mouseenter', function(d, i) {\n\n//             //var string_base = \"yr\"\n//             //currentvalue = string_base.concat(currentyear);\n//             //console.log(d.properties[currentvalue]);\n//         })\n//         .on('mouseleave', function(d) {\n\n//         });\n\n//     var aYears = [\n//         [2000, 2001],\n//         [2001, 2002],\n//         [2002, 2003],\n//         [2003, 2004],\n//         [2004, 2005],\n//         [2005, 2006],\n//         [2006, 2007],\n//         [2007, 2008],\n//         [2008, 2009],\n//         [2010, 2011],\n//         [2011, 2012],\n//         [2012, 2013],\n//         [2013, 2014],\n//         [2014, 2014.5]\n//     ];\n\n//     var index = 0;\n//     getYear();\n\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\n\n//     function getYear() {\n//         setSymbology2(2000);\n//         $(\"#timeline\").on('input change', function() {\n//             var year = $(this).val()\n//             setSymbology2($(this).val());\n//         });\n//     };\n\n\n//     function setSymbology2(year) {\n\n//         var szAttr = 'yr' + year;\n//         currentyear = year\n//         var toyear = eval(year) + 1\n\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\n//         $('#fromYear2').html(year);\n//         $('#titleMidfix2').html('to');\n//         $('#toYear2').html(toyear).append('<span>*</span>');\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\n//                             '<br />Executive Office of Health and Human Services'+\n//                             '<br />(Registry of Vital Records and Statistics,' +\n//                             '<br />Massachusetts Department of Public Health)');\n\n\n\n//         svgContainer.selectAll(\"path\")\n//             .transition()\n//             .duration(500)\n//             .style(\"fill\", function(d, i) {\n\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n//             });\n//     }\n\n//     function generateLegend2(scale, szDivId, szCaption) {\n//         var width2 = 550,\n//             height2 = 80;\n\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\n//             .attr(\"width\", width2)\n//             .attr(\"height\", height2);\n\n//         var g = svg.append(\"g\");\n\n//         // Create data array.\n//         var legendData = [];\n//         legendData.push({\n//             d: -9999,\n//             r: '#f1f1f1',\n//             s: 'N/A'\n//         });\n//         var i;\n//         for (i = 0; i < scale.domain().length; i++) {\n//             legendData.push({\n//                 d: scale.domain()[i],\n//                 r: scale.range()[i],\n//                 s: scale.domainStrings()[i]\n//             });\n//         }\n\n//         g.selectAll(\"rect\")\n//             .data(legendData)\n//             .enter().append(\"rect\")\n//             .attr(\"height\", 20)\n//             .attr(\"width\", 50)\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 20)\n//             .style(\"stroke\", \"black\")\n//             .style(\"stroke-width\", \"0.25px\")\n//             .style(\"fill\", function(d, i) {\n//                 return d.r;\n//             });\n\n//         g.selectAll(\"text\")\n//             .data(legendData)\n//             .enter().append(\"text\")\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 60)\n//             .text(function(d, i) {\n//                 return d.s;\n//             });\n\n//         g.append(\"text\")\n//             .attr(\"class\", \"vis-caption\")\n//             .attr(\"y\", 12)\n//             .text(szCaption);\n//     } // generateLegend2()\n// } // generateMap2\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([8600])\n        .translate([280, 360]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.PuBuGn[6]);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n\t    wrapper.append('span')\n            .text(\"\")\n\t    .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \"+width+\" \"+height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n            //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n            //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n                d3.selectAll('path#bsasmap').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.PuBuGn[6])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\n            '>35-60%', '>60-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n\t    .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n                return (i * (100/legendData.length)) + \"%\";\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\t      return ((i * (100/legendData.length))+7) + \"%\";\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        $maps_sub_legends.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-treatment-map').click(function() {\n        var date = $(this).data('date');\n        $('#treatmentMaps').attr('data-active-date', date);\n        $('.js-toggle-treatment-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    var yScale = d3.scale.sqrt();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -dimensions.margin.top)\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(1, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    function bindEvents() {\r\n        d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n\r\n        function mouseoutFunc() {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n            tooltip_death.classed(\"hidden\", true);\r\n        }\r\n\r\n        function mouseoverFunc(d, i) {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n            d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n            tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n        }\r\n\r\n        var coordinates = [0, 0];\r\n\r\n        function mousemoveFunc(d) {\r\n            coordinates = d3.mouse(this);\r\n            var x = coordinates[0];\r\n            var y = coordinates[1];\r\n            tooltip_death\r\n                .style(\"top\", y + \"px\")\r\n                .style(\"left\", x + \"px\")\r\n                .style('position', 'absolute')\r\n                .style('z-index', 1001);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\n\n    var chartData = [{\n    \t\"date\": new Date(\"01/01/2014\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.22\",\n    \t\"Heroin\": \"0.41\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2014\"),\n    \t\"FentanylHeroin\": \"0.18\",\n    \t\"Fentanyl\": \"0.19\",\n    \t\"Heroin\": \"0.49\",\n    \t\"Methadone\": \"0.07\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2014\"),\n    \t\"FentanylHeroin\": \"0.14\",\n    \t\"Fentanyl\": \"0.14\",\n    \t\"Heroin\": \"0.53\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2014\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.27\",\n    \t\"Heroin\": \"0.35\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.04\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2015\"),\n    \t\"FentanylHeroin\": \"0.24\",\n    \t\"Fentanyl\": \"0.38\",\n    \t\"Heroin\": \"0.29\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2015\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.43\",\n    \t\"Heroin\": \"0.24\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2016\"),\n    \t\"FentanylHeroin\": \"0.15\",\n    \t\"Fentanyl\": \"0.50\",\n    \t\"Heroin\": \"0.17\",\n    \t\"Methadone\": \"0.04\"\n   }];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n    \tvar date2 = new Date();\n    \tdate2.setMonth(date.getMonth() - 10);\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\n    \treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n      top: 60, // space for the legend\n      right: 15,\n      bottom: 50,\n      left: 42\n    };\n\n    var wrapper_width = 540;\n    var wrapper_height = 400;\n    var width = wrapper_width - margin.left - margin.right;\n    var height = wrapper_height - margin.top - margin.bottom;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n                    \t.scale(x)\n                    \t.orient(\"bottom\")\n                    \t.ticks(d3.time.months, 3)\n                    \t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n                      \t.scale(x)\n                      \t.ticks(d3.time.years, 1)\n                      \t.tickFormat(yearformat)\n                      \t.tickSize(3, 0)\n                      \t.tickPadding(1)\n                      \t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n                    \t.scale(y)\n                    \t.orient(\"left\")\n                    \t.tickFormat(formatPercent)\n                    \t.ticks(5)\n                    \t.tickSize(3, 0)\n                    \t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n              \t.x(function(d) {\n              \t    return x(d.label);\n              \t})\n              \t.y(function(d) {\n              \t    return y(d.value);\n              \t});\n\n    var $svg = d3.select(document.querySelector(rootSelector))\n      .append(\"svg\");\n    var $lines_fent = $svg.append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n      return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n    \treturn {\n    \t    name: name,\n    \t    values: chartData.map(function(d) {\n        \t\treturn {\n        \t\t    name: name,\n        \t\t    label: d[xLabel],\n        \t\t    value: +d[name]\n        \t\t};\n    \t    })\n    \t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(seriesData, function(c) {\n          return d3.min(c.values, function(d) {\n      \t//return d.value;\n      \treturn 0;\n          });\n      }),\n      d3.max(seriesData, function(c) {\n          return d3.max(c.values, function(d) {\n      \treturn d.value;\n          });\n      })\n    ]);\n\n    var x_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-x-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis_fent);\n\n    var x_axis_lines = x_axis.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.style(\"stroke-width\", \"1.5px\")\n    \t.call(xAxis_fent);\n\n    var x_axis2 = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n    \t.call(xAxis2_fent)\n    var x_axis2_text = x_axis2\n    \t.append(\"text\")\n    \t.attr(\"x\", width - margin.left)\n    \t.attr(\"y\", margin.bottom - 32)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-x-axis-label\")\n    \t.text(\"Quarter\");\n\n\n    var y_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-y-axis\")\n    \t.call(yAxis_fent)\n    \t.append(\"text\")\n    \t.attr(\"x\", 0)\n    \t.attr(\"y\", -44)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-y-axis-label\")\n    \t.text(\"Percent Opioid Deaths\");\n\n    var series = $lines_fent.selectAll(\".series\")\n    \t.data(seriesData)\n    \t.enter().append(\"g\")\n    \t.attr(\"class\", \"seriesData\");\n\n\n    var $lines = series.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.style(\"stroke\", function(d) {\n    \t    return color(d.name);\n    \t})\n    \t.style(\"stroke-width\", function(d) {\n    \t    return lineStroke(d.name);\n    \t})\n    \t.style(\"stroke-dasharray\", function(d) {\n    \t    return lineDash(d.name);\n    \t})\n    \t.style(\"fill\", \"none\");\n\n\n    var $lines_hit_area = series.append(\"path\")\n    \t.attr(\"class\", \"hit-area-ext\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n    \t.style(\"fill\", \"none\");\n\n\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Fentanyl & Heroin\");\n\n    // var x_axis_label_m = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Methadone\");\n\n    // var x_axis_label_h = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Heroin\");\n\n    // var x_axis_label_f = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"focus\")\n    \t.classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n    \t.style(\"stroke-width\", 1)\n    \t.attr(\"r\", 6)\n    \t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n    \t.on(\"mouseover\", mouseoverFunc)\n    \t.on(\"mouseout\", mouseoutFunc)\n    \t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n      \tfocus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n    \t//         }\n\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1)\n\n    \ttooltipFent.classed(\"hidden\", false)\n    \t.html(percentVal);\n    \t//console.log(d.rates[i]);\n    \t//console.log(d3.select(this).select(\"path.point\"));\n    \tfocus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n    \t//console.log(\"events\", window.event, d3.event);\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1);\n\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n    \ttooltipFent\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n    \t    .html(percentVal);\n    }\n\n\n\n    function render () {\n      updateWidth(rootNode.clientWidth);\n\n      x.rangePoints([0, width]);\n      x2.rangePoints([0, width]);\n      y.range([height, 0]);\n      xAxis_fent.scale(x);\n      xAxis2_fent.scale(x);\n      yAxis_fent.scale(y);\n      // update lines\n      line.x(function(d) {\n          return x(d.label);\n        })\n        .y(function(d) {\n            return y(d.value);\n        });\n\n      x_axis\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis_fent);\n\n      x_axis2\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n        .call(xAxis2_fent);\n\n      x_axis2_text\n      .attr(\"x\", width - margin.left)\n      .attr(\"y\", margin.bottom - 32);\n\n\n      y_axis.call(yAxis_fent);\n\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\n\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\n\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\n\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\n\n      $lines.attr(\"d\", function(d) {\n          return line(d.values);\n      });\n\n      $lines_hit_area.attr(\"d\", function(d) {\n        return line(d.values);\n      });\n\n    }\n\n    function updateWidth(componentWidth) {\n      wrapper_width = componentWidth;\n      width = wrapper_width - margin.left - margin.right;\n      height = wrapper_height - margin.top - margin.bottom;\n    }\n\n    function renderLegend() {\n      var legendItems = [\n        \"FentanylHeroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var legendItemsTranslate = [\n        \"Fentanyl & Heroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var $legend = $svg.append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", \"translate(\"+margin.left+\",0)\");\n      var lineHeight = 15;\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n      legendItems.forEach(function(item, i) {\n        var $item = $legend.append(\"g\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\n\n        $item.append(\"svg:line\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 5)\n          .attr(\"x2\", 30)\n          .attr(\"y2\", 5)\n          .style(\"stroke\", seriesColors[i])\n          .style(\"stroke-dasharray\", seriesLineDash[i])\n          .style(\"stroke-width\", seriesLineStrokes[i]);\n\n        $item.append(\"text\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x\", 40)\n          .attr(\"y\", 10)\n          .text(legendItemsTranslate[i]);\n      });\n    }\n\n\n    render();\n    renderLegend();\n\n    window.addEventListener('resize', render);\n\n\n\n})();\n","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n     var town_names = [\n         //\"massachusetts\",\n         \"abington\",\n         \"acton\",\n         \"acushnet\",\n         \"adams\",\n         \"agawam\",\n         \"alford\",\n         \"amesbury\",\n         \"amherst\",\n         \"andover\",\n         \"aquinnah\",\n         \"arlington\",\n         \"ashburnham\",\n         \"ashby\",\n         \"ashfield\",\n         \"ashland\",\n         \"athol\",\n         \"attleboro\",\n         \"auburn\",\n         \"avon\",\n         \"ayer\",\n         \"barnstable\",\n         \"barre\",\n         \"becket\",\n         \"bedford\",\n         \"belchertown\",\n         \"bellingham\",\n         \"belmont\",\n         \"berkley\",\n         \"berlin\",\n         \"bernardston\",\n         \"beverly\",\n         \"billerica\",\n         \"blackstone\",\n         \"blandford\",\n         \"bolton\",\n         \"boston\",\n         \"bourne\",\n         \"boxborough\",\n         \"boxford\",\n         \"boylston\",\n         \"braintree\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brookline\",\n         \"buckland\",\n         \"burlington\",\n         \"cambridge\",\n         \"canton\",\n         \"carlisle\",\n         \"carver\",\n         \"charlemont\",\n         \"charlton\",\n         \"chatham\",\n         \"chelmsford\",\n         \"chelsea\",\n         \"cheshire\",\n         \"chester\",\n         \"chesterfield\",\n         \"chicopee\",\n         \"chilmark\",\n         \"clarksburg\",\n         \"clinton\",\n         \"cohasset\",\n         \"colrain\",\n         \"concord\",\n         \"conway\",\n         \"cummington\",\n         \"dalton\",\n         \"danvers\",\n         \"dartmouth\",\n         \"dedham\",\n         \"deerfield\",\n         \"dennis\",\n         \"dighton\",\n         \"douglas\",\n         \"dover\",\n         \"dracut\",\n         \"dudley\",\n         \"dunstable\",\n         \"duxbury\",\n         \"eastbridgewater\",\n         \"eastbrookfield\",\n         \"eastlongmeadow\",\n         \"eastham\",\n         \"easthampton\",\n         \"easton\",\n         \"edgartown\",\n         \"egremont\",\n         \"erving\",\n         \"essex\",\n         \"everett\",\n         \"fairhaven\",\n         \"fallriver\",\n         \"falmouth\",\n         \"fitchburg\",\n         \"florida\",\n         \"foxborough\",\n         \"framingham\",\n         \"franklin\",\n         \"freetown\",\n         \"gardner\",\n         \"gay head\",\n         \"georgetown\",\n         \"gill\",\n         \"gloucester\",\n         \"goshen\",\n         \"gosnold\",\n         \"grafton\",\n         \"granby\",\n         \"granville\",\n         \"greatbarrington\",\n         \"greenfield\",\n         \"groton\",\n         \"groveland\",\n         \"hadley\",\n         \"halifax\",\n         \"hamilton\",\n         \"hampden\",\n         \"hancock\",\n         \"hanover\",\n         \"hanson\",\n         \"hardwick\",\n         \"harvard\",\n         \"harwich\",\n         \"hatfield\",\n         \"haverhill\",\n         \"hawley\",\n         \"heath\",\n         \"hingham\",\n         \"hinsdale\",\n         \"holbrook\",\n         \"holden\",\n         \"holland\",\n         \"holliston\",\n         \"holyoke\",\n         \"hopedale\",\n         \"hopkinton\",\n         \"hubbardston\",\n         \"hudson\",\n         \"hull\",\n         \"huntington\",\n         \"ipswich\",\n         \"kingston\",\n         \"lakeville\",\n         \"lancaster\",\n         \"lanesborough\",\n         \"lawrence\",\n         \"lee\",\n         \"leicester\",\n         \"lenox\",\n         \"leominster\",\n         \"leverett\",\n         \"lexington\",\n         \"leyden\",\n         \"lincoln\",\n         \"littleton\",\n         \"longmeadow\",\n         \"lowell\",\n         \"ludlow\",\n         \"lunenburg\",\n         \"lynn\",\n         \"lynnfield\",\n         \"malden\",\n         \"manchester\",\n         \"mansfield\",\n         \"marblehead\",\n         \"marion\",\n         \"marlborough\",\n         \"marshfield\",\n         \"mashpee\",\n         \"mattapoisett\",\n         \"maynard\",\n         \"medfield\",\n         \"medford\",\n         \"medway\",\n         \"melrose\",\n         \"mendon\",\n         \"merrimac\",\n         \"methuen\",\n         \"middleborough\",\n         \"middlefield\",\n         \"middleton\",\n         \"milford\",\n         \"millbury\",\n         \"millis\",\n         \"millville\",\n         \"milton\",\n         \"monroe\",\n         \"monson\",\n         \"montague\",\n         \"monterey\",\n         \"montgomery\",\n         \"mountwashington\",\n         \"nahant\",\n         \"nantucket\",\n         \"natick\",\n         \"needham\",\n         \"newashford\",\n         \"newbedford\",\n         \"newbraintree\",\n         \"newmarlborough\",\n         \"newsalem\",\n         \"newbury\",\n         \"newburyport\",\n         \"newton\",\n         \"norfolk\",\n         \"westadams\",\n         \"westandover\",\n         \"westattleborough\",\n         \"westbrookfield\",\n         \"westreading\",\n         \"northampton\",\n         \"northborough\",\n         \"northbridge\",\n         \"northfield\",\n         \"norton\",\n         \"norwell\",\n         \"norwood\",\n         \"oak bluffs\",\n         \"oakham\",\n         \"orange\",\n         \"orleans\",\n         \"otis\",\n         \"oxford\",\n         \"palmer\",\n         \"paxton\",\n         \"peabody\",\n         \"pelham\",\n         \"pembroke\",\n         \"pepperell\",\n         \"peru\",\n         \"petersham\",\n         \"phillipston\",\n         \"pittsfield\",\n         \"plainfield\",\n         \"plainville\",\n         \"plymouth\",\n         \"plympton\",\n         \"princeton\",\n         \"provincetown\",\n         \"quincy\",\n         \"randolph\",\n         \"raynham\",\n         \"reading\",\n         \"rehoboth\",\n         \"revere\",\n         \"richmond\",\n         \"rochester\",\n         \"rockland\",\n         \"rockport\",\n         \"rowe\",\n         \"rowley\",\n         \"royalston\",\n         \"russell\",\n         \"rutland\",\n         \"salem\",\n         \"salisbury\",\n         \"sandisfield\",\n         \"sandwich\",\n         \"saugus\",\n         \"savoy\",\n         \"scituate\",\n         \"seekonk\",\n         \"sharon\",\n         \"sheffield\",\n         \"shelburne\",\n         \"sherborn\",\n         \"shirley\",\n         \"shrewsbury\",\n         \"shutesbury\",\n         \"somerset\",\n         \"somerville\",\n         \"southhadley\",\n         \"southampton\",\n         \"southborough\",\n         \"southbridge\",\n         \"southwick\",\n         \"spencer\",\n         \"springfield\",\n         \"sterling\",\n         \"stockbridge\",\n         \"stoneham\",\n         \"stoughton\",\n         \"stow\",\n         \"sturbridge\",\n         \"sudbury\",\n         \"sunderland\",\n         \"sutton\",\n         \"swampscott\",\n         \"swansea\",\n         \"taunton\",\n         \"templeton\",\n         \"tewksbury\",\n         \"tisbury\",\n         \"tolland\",\n         \"topsfield\",\n         \"townsend\",\n         \"truro\",\n         \"tyngsborough\",\n         \"tyringham\",\n         \"upton\",\n         \"uxbridge\",\n         \"wakefield\",\n         \"wales\",\n         \"walpole\",\n         \"waltham\",\n         \"ware\",\n         \"wareham\",\n         \"warren\",\n         \"warwick\",\n         \"washington\",\n         \"watertown\",\n         \"wayland\",\n         \"webster\",\n         \"wellesley\",\n         \"wellfleet\",\n         \"wendell\",\n         \"wenham\",\n         \"westboylston\",\n         \"westbridgewater\",\n         \"westbrookfield\",\n         \"westnewbury\",\n         \"westspringfield\",\n         \"weststockbridge\",\n         \"westtisbury\",\n         \"westborough\",\n         \"westfield\",\n         \"westford\",\n         \"westhampton\",\n         \"westminster\",\n         \"weston\",\n         \"westport\",\n         \"westwood\",\n         \"weymouth\",\n         \"whately\",\n         \"whitman\",\n         \"wilbraham\",\n         \"williamsburg\",\n         \"williamstown\",\n         \"wilmington\",\n         \"winchendon\",\n         \"winchester\",\n         \"windsor\",\n         \"winthrop\",\n         \"woburn\",\n         \"worcester\",\n         \"worthington\",\n         \"wrentham\",\n         \"yarmouth\"\n     ];\n     var current_town = \"massachusetts\";\n\n     var margin = {\n             top: 0,\n             right: 25,\n             bottom: 30,\n             left: 30\n         },\n         wrapper_width = rootNode.clientWidth,\n         wrapper_height = 400,\n         width = wrapper_width - margin.left - margin.right,\n         height = wrapper_height - margin.top - margin.bottom;\n\n     var bisectAge = d3.bisector(function(d) {\n         return d.age;\n     }).left;\n     var percent = d3.format(',.0%');\n     var yearformat = d3.format(\"d\");\n     // var min_age = 2005;\n     // var fields = ['emp', 'edu', 'race', 'orig'];\n     var groups = {};\n\n     var x = d3.scale.linear();\n\n     var y = d3.scale.linear();\n\n     var color = d3.scale.category10();\n\n     var xAxis_bsas = d3.svg.axis();\n\n     var yAxis_bsas = d3.svg.axis();\n\n     var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n     var $lines_bsas = $svg\n         .append(\"g\")\n         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n         .append(\"text\")\n         .attr(\"x\", 635)\n         .attr(\"y\", 15)\n         .attr(\"text-anchor\", \"middle\")\n         .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n\n    var legend_pos_text = -60,\n         legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n    function render () {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n         .scale(x)\n         .tickFormat(yearformat)\n         .ticks((width < 500 ? 4 : 10))\n         .orient(\"bottom\")\n         .outerTickSize(0);\n\n        yAxis_bsas\n         .scale(y)\n         .tickSize(width)\n         .orient(\"right\")\n         .tickFormat(percent);\n\n\n        line.x(function(d) {\n             return x(d.age);\n         })\n         .y(function(d) {\n             return y(d.value);\n         })\n         .defined(function(d) {\n             return y(d.value);\n         }); // Omit empty values.\n\n         $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n         $y_axis.call(yAxis_bsas);\n         $lines_bsas.selectAll(\".vis-y-axis text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n         $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        renderLegend();\n        renderLines();\n        updateDots();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        $legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        $legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(1*line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(1*line_height)+3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(2*line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(2*line_height)+3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(3*line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(3*line_height)+3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(4*line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(4*line_height)+3);\n        $legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(5*line_height));\n        $legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(5*line_height)+3);\n    }\n\n    function setupLines () {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        $lines.none.attr(\"d\", function(d) {\n            return line(groups[current_town + \"none\"].values);\n        });\n    }\n\n\n\n\n\n    function updateDots() {\n\n             // marriages = groups[current_town];\n             //update alcohol line\n             $lines_bsas.select(\".line.alcohol\")\n                 .transition()\n                 .duration(600)\n                 .delay(180)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"alcohol\"].values);\n                 });\n\n             //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n             //update alcohol circles\n             for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n                 var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                     // console.log(string_select);\n\n                 if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"alcohol\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"alcohol\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n\n\n             //marijuana\n             $lines_bsas.select(\".line.marijuana\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"marijuana\"].values);\n                 });\n             //update marijuana circles\n             for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n                 var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                     //console.log(string_select);\n\n                 if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"marijuana\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"marijuana\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n             //none\n             $lines_bsas.select(\".line.none\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"none\"].values);\n                 });\n             //update none circles\n             for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n                 var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n                 var value_select = groups[current_town + \"none\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (groups[current_town + \"none\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"none\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"none\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //opioids\n             $lines_bsas.select(\".line.opioids\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"opioids\"].values);\n                 });\n             //update opioids circles\n             for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n                 var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n                 var value_select = groups[current_town + \"opioids\"].values[i].value\n                     //console.log(string_select);\n                     //console.log(value_select);\n                     //console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"opioids\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"opioids\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //other\n             $lines_bsas.select(\".line.other\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"other\"].values);\n                 });\n             //update other circles\n             for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n                 var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n                 var value_select = groups[current_town + \"other\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"other\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"other\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n         }\n\n\n\n\n\n     d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\n         if (error) throw error;\n         //console.log(groups);\n         // var marriages = groups[current_town];\n\n         x.domain([2005, d3.max(data, function(d) {\n             return d.age;\n         })]);\n         y.domain([0, .99]);\n\n         setupLines();\n         render();\n         window.addEventListener('resize', render);\n\n\n\n         // Autocomplete\n\n         $(\".btn-bsas\").addClass('active');\n         d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n             current_town = d3.select(this).attr(\"data-val\");\n             updateDots();\n             d3.select(this).classed('active', true);\n             $(\"#tags\").val('');\n         });\n\n\n         $(\"#tags\").autocomplete({\n             source: function(request, response) {\n                 var matches = $.map(town_names, function(acItem) {\n                     if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                         return acItem;\n                     }\n                 });\n                 response(matches);\n                 //$(\"#tags\").focus(function() {\n                     // if (matches.length == 1) {\n                     //     current_town = matches[0];\n                     //     $(\".btn-bsas\").removeClass('active');\n                     //     updateDots();\n                     // }\n                 //});\n                 //console.log(matches);\n             },\n             select: function(event, ui) {\n                 current_town = ui.item.value;\n                 $(\".btn-bsas\").removeClass('active');\n                 updateDots();\n             }\n         });\n\n\n\n\n         // alcohol\n         var focusalcohol = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus alcohol\")\n             .style(\"display\", \"none\");\n         focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // marijuana\n         var focusmarijuana = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus marijuana\")\n             .style(\"display\", \"none\");\n         focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusnone = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus none\")\n             .style(\"display\", \"none\");\n         focusnone.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusnone.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // opioids\n         var focusopioids = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus opioids\")\n             .style(\"display\", \"none\");\n         focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusother = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus other\")\n             .style(\"display\", \"none\");\n         focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // Events\n        $eventOverlay\n             .on(\"mouseover\", function() {\n                 focusmarijuana.style(\"display\", null);\n                 focusalcohol.style(\"display\", null);\n                 focusnone.style(\"display\", null);\n                 focusopioids.style(\"display\", null);\n                 focusother.style(\"display\", null);\n                 //focusage.style(\"display\", null);\n             })\n             .on(\"mouseout\", function() {\n                 focusmarijuana.style(\"display\", \"none\");\n                 focusalcohol.style(\"display\", \"none\");\n                 focusnone.style(\"display\", \"none\");\n                 focusopioids.style(\"display\", \"none\");\n                 focusother.style(\"display\", \"none\");\n                 //focusage.style(\"display\", \"none\");\n             })\n             .on(\"mousemove\", mousemove);\n\n         function mousemove() {\n\n\n\n             var x0 = x.invert(d3.mouse(this)[0])\n\n             // Alcohol\n             var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                 d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                 d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                 d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n             if (d_alcohol.value >= 0) {\n                 focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                 focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform',\"translate(-28,0)\");\n                 focusalcohol.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusalcohol.select(\"circle\").attr(\"r\", 0);\n                 focusalcohol.select(\"text\").text(\"\");\n             }\n\n             // Marijuana\n\n             var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                 d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                 d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                 d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n             // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n             // console.log(d_marijuana.value >= 0);\n\n             if (d_marijuana.value >= 0) {\n                 focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                 focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform',\"translate(-28,0)\");\n                 focusmarijuana.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                 focusmarijuana.select(\"text\").text(\"\");\n             }\n\n             // None\n\n             var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n                 d0_none = groups[current_town + \"none\"].values[i_none - 1],\n                 d1_none = groups[current_town + \"none\"].values[i_none],\n                 d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n             if (d_none.value >= 0) {\n                 focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n                 focusnone.select(\"text\").text(percent(d_none.value));\n                 focusnone.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusnone.select(\"circle\").attr(\"r\", 0);\n                 focusnone.select(\"text\").text(\"\");\n             }\n\n\n             // Opioids\n             var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                 d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                 d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                 d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n             if (d_opioids.value >= 0) {\n                 focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                 focusopioids.select(\"text\").text(percent(d_opioids.value));\n                 focusopioids.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusopioids.select(\"circle\").attr(\"r\", 0);\n                 focusopioids.select(\"text\").text(\"\");\n             }\n\n\n             // other\n             var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                 d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                 d1_other = groups[current_town + \"other\"].values[i_other],\n                 d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n             //console.log(d_other.value);\n\n             if (d_other.value >= 0) {\n                 focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                 focusother.select(\"text\").text(percent(d_other.value));\n                 focusother.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusother.select(\"circle\").attr(\"r\", 0);\n                 focusother.select(\"text\").text(\"\");\n             }\n\n\n             // Adjust label horizontal positions.\n             if (x0 > 80) {\n                 focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             } else {\n                 focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             }\n\n\n\n         }\n\n\n     }); // @end d3.tsv()\n\n\n     function type(d, i) {\n\n         d3.keys(d).forEach(function(key) {\n             d[key] = +d[key];\n             if (key != 'age') {\n                 if (!(key in groups)) {\n                     groups[key] = {\n                         'values': [{\n                             age: d.age,\n                             value: d[key]\n                         }]\n                     };\n                 } else {\n                     groups[key]['values'].push({\n                         age: d.age,\n                         value: d[key]\n                     });\n                 }\n             }\n         });\n\n         return d;\n\n     }\n})();\n","$(document).ready(function() {\n    var prescription = [{\n            \"Yes\": 83,\n            \"No\": 17\n        }, {\n            \"Yes\": 57,\n            \"No\": 43\n        }, {\n            \"Yes\": 50,\n            \"No\": 50\n        }, {\n            \"Yes\": 37,\n            \"No\": 63\n        }],\n\n        heroin = [{\n            \"Yes\": 65,\n            \"No\": 35\n        }, {\n            \"Yes\": 28,\n            \"No\": 72\n        }, {\n            \"Yes\": 20,\n            \"No\": 80\n        }, {\n            \"Yes\": 13,\n            \"No\": 87\n        }],\n\n        fentanyl = [{\n            \"Yes\": 68,\n            \"No\": 32\n        }, {\n            \"Yes\": 30,\n            \"No\": 70\n        }, {\n            \"Yes\": 22,\n            \"No\": 78\n        }, {\n            \"Yes\": 17,\n            \"No\": 83\n        }],\n\n        both = [{\n            \"Yes\": 64,\n            \"No\": 36\n        }, {\n            \"Yes\": 24,\n            \"No\": 76\n        }, {\n            \"Yes\": 15,\n            \"No\": 85\n        }, {\n            \"Yes\": 9,\n            \"No\": 91\n        }],\n\n        methadone = [{\n            \"Yes\": 76,\n            \"No\": 24\n        }, {\n            \"Yes\": 46,\n            \"No\": 54\n        }, {\n            \"Yes\": 41,\n            \"No\": 59\n        }, {\n            \"Yes\": 27,\n            \"No\": 73\n        }],\n\n        buprenorphine = [{\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }],\n\n        dataset = [{\n                data: [{\n                    count: 867,\n                    name: 'Heroin'\n                }],\n                name: 'Heroin'\n            }, {\n                data: [{\n                    count: 288,\n                    name: 'Fentanyl'\n                }],\n                name: 'Fentanyl'\n            }, {\n                data: [{\n                    count: 249,\n                    name: 'Fentanyl & Heroin'\n                }],\n                name: 'Fentanyl & Heroin'\n            }, {\n                data: [{\n                    count: 154,\n                    name: 'Prescription Opioids'\n                }],\n                name: 'Prescription Opioids'\n            }, {\n                data: [{\n                    count: 84,\n                    name: 'Methadone'\n                }],\n                name: 'Methadone'\n            }, {\n                data: [{\n                    count: 15,\n                    name: 'Buprenorphine'\n                }],\n                name: 'Buprenorphine'\n            }\n\n        ];\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n\n    $(\".btn-substance\").on('click', function() {\n        var sub = parseInt($(this).val());\n        var substance;\n        $(\".btn-time\").removeClass('disableClick disabled');\n        switch (sub) {\n            case 0:\n                substance = prescription;\n                break;\n            case 1:\n                substance = heroin;\n                break;\n            case 2:\n                substance = fentanyl;\n                break;\n            case 3:\n                substance = both;\n                break;\n            case 4:\n                substance = methadone;\n                break;\n            case 5:\n                substance = buprenorphine;\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\n                $(\"#studyperiod\").addClass('active');\n                break;\n        }\n        data_substance = substance;\n        asignVal_substance(data_substance, time);\n    });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"During the Study Period\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-perioid\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n    function asignVal_substance(type, time) {\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Had prescription</th><th>Did not have prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n\n        })\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //BAR CHART\n    ///////////////////////\n\n    var width = '100%',\n        height = 30;\n    // series = dataset.map(function(d) {\n    //     return d.name;\n    // }),\n    dataset = dataset.map(function(d) {\n            return d.data.map(function(o, i) {\n                // Structure it so that your numeric\n                // axis (the stacked amount) is y\n                return {\n                    y: o.count,\n                    s: o.name,\n                };\n            });\n        }),\n        stack = d3.layout.stack();\n\n    stack(dataset);\n\n\n    var dataset = dataset.map(function(group) {\n            return group.map(function(d) {\n                // Invert the x and y values, and y0 becomes x0\n                return {\n                    x: d.y,\n                    n: d.s,\n                    y: d.x,\n                    x0: d.y0\n                };\n            });\n        }),\n        $bar = d3.select('#bar')\n        .append('svg')\n        .attr('id', 'bar_svg')\n        .attr('width', width)\n        .attr('height', height)\n    var color = [\"#b71c1c\", '#CFD8DC']\n    var colors;\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\n    draw(colors);\n    $(\".btn-substance\").on('click', function() {\n        $('#bar_svg').empty();\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\n        $('.btn-substance').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        colors[$(this).val()] = color[0];\n        draw(colors);\n        var i = $(this).val(),\n            d = dataset[$(this).val()][0];\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand() / 2;\n        console.log(d);\n\n    });\n\n    function draw(colors) {\n        $('#bar_svg')\n            .append('g')\n            .attr('class', 'bar_g')\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n        xMax = d3.max(dataset, function(group) {\n                return d3.max(group, function(d) {\n                    return d.x + d.x0;\n                });\n            }),\n            xScale = d3.scale.linear()\n            .domain([0, xMax])\n            .range([0, width]),\n            // months = dataset[0].map(function(d) {\n            //     return d.y;\n            // }),\n            yScale = d3.scale.ordinal()\n            //.domain(months)\n            .rangeRoundBands([0, height], .1),\n\n            colours = d3.scale.ordinal()\n            .range(colors),\n\n            bar_groups = $bar.selectAll('.bar_g')\n            .data(dataset)\n            .enter()\n            .append('g')\n            .style('fill', function(d, i) {\n                return colours(i);\n            }),\n\n            rects = bar_groups.selectAll('rect')\n            .data(function(d) {\n                return d;\n            })\n            .enter()\n            .append('rect')\n            .style('stroke', '#b71c1c')\n            .attr('x', function(d) {\n                return xScale(d.x0);\n            })\n            .attr('y', function(d, i) {\n                return yScale(d.y);\n            })\n            .attr('height', function(d) {\n                return yScale.rangeBand();\n            })\n            .attr('width', function(d) {\n                return xScale(d.x);\n            })\n    };\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        var $option = $(this).data('select');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        var $option = $(this).attr('id');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        if (data_gender == multi) {\n            var index = [0, 1, 2, 3, 4, 5];\n        } else {\n            var index = [0, 0, 2, 3, 5, 5];\n        };\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\n        for (b = 0; b < noOfBlocks; b++) {\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n            .text(\"Age\")\r\n            .attr(\"class\", \"vis-x-axis-label\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .attr(\"y\", 10)\r\n            .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n        // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n\r\n\r\n        updateWidth();\r\n        redraw(dataset, selected);\r\n\r\n        window.addEventListener('resize', function() {\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n        });\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\"+(width - 10)+\",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-axis\");\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-data-label\");\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();\r\n","$(document).ready(function(){\n\n    dataset = [\n        { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\n        { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\n        { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\n        { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\n    ];\n\n    var color = d3.scale.ordinal()\n        .range([\"#2166ac\", \"#92c5de\"]);\n\n    var width, height, margin = {};\n\n    updateWidth();\n\n    var x0 = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal();\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    //var colorRange = d3.scale.category20();\n    //var color = d3.scale.ordinal()\n    //.range(colorRange.range());\n\n\n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    var $bars_race = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return { name: name, value: +d[name] };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    var xAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(10,\" + height + \")\");\n\n    var yAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\");\n\n    yAxis.append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    var bars = bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\");\n\n    bars\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n    \tdivtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n    \tdivtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    var legendRect = legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    var legendText = legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n\n    function render () {\n        updateWidth();\n\n        x1.rangeRoundBands([0, x0.rangeBand()]);\n\n        x0.rangeRoundBands([0, width], .1);\n        y.range([height, 0]);\n\n        xAxis_bars.scale(x0);\n        yAxis_bars.scale(y);\n\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\n\n        xAxis\n            .attr(\"transform\", \"translate(10,\" + height + \")\")\n            .call(xAxis_bars)\n            .selectAll(\".tick text\")\n            .call(wrap, x0.rangeBand());\n\n        yAxis.call(yAxis_bars);\n        legendRect.attr(\"x\", width - 18);\n        legendText.attr(\"x\", width - 24);\n\n        bar.attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n        bars.attr(\"width\", x1.rangeBand())\n            .attr(\"x\", function(d) {\n                return x1(d.name) + 20;\n            })\n            .attr(\"y\", function(d) {\n                return y(d.value);\n            })\n            .attr(\"value\", function(d) {\n                return d.name;\n            })\n            .attr(\"height\", function(d) {\n                return height - y(d.value);\n            });\n\n    }\n\n    function updateWidth () {\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\n        margin = {\n            top: 50,\n            right: 10,\n            bottom: 60,\n            left: 50\n        },\n        width = w - margin.left - margin.right;\n\n        if(w < 500) {\n            height = 350 - margin.top - margin.bottom;\n        } else {\n            height = 500 - margin.top - margin.bottom;\n        }\n\n    }\n\n    render();\n    window.addEventListener('resize', render);\n});\n"],"sourceRoot":"/source/"}
>>>>>>> remotes/DigitalMass/chapter55/develop
