{"version":3,"sources":["custom.js","lines-bsas.js","video.js","queue.js","maps_binary5yr.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","BoldText","elem","currElem","fontWeight","opioidsY2000","d","d3","select","attr","classed","opioidsY2015","InitPxVideo","options","video_timecode_min","tc","tcpair","split","videosub_tcsecs","video_timecode_max","undefined","seconds","tc1","tc2","Math","floor","adjustManualCaptions","obj","subcount","captions","movie","currentTime","toFixed","showCaptionContainerAndButton","captionsBtnContainer","className","isCaptionDefault","captionsContainer","captionsBtn","setAttribute","browserSniff","nameOffset","verOffset","ix","nAgt","navigator","appVersion","userAgent","browserName","appName","fullVersion","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","launchFullScreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","requestFullScreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","call","fullScreenStyles","fullscreen","mozFullScreen","webkitIsFullScreen","fullScreenBtn","checked","container","controls","movieWidth","movieHeight","exitFullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","ariaAnnounce","msg","announce","getElementById","innerHTML","resetVideo","video","src","getElementsByTagName","getAttribute","isTextTracks","pause","btnPlay","btnPause","div","createElement","id","overflow","textIndent","body","appendChild","arBrowserInfo","browserMajorVersion","isSmartphoneOrTablet","test","debug","console","log","videoTitle","playAriaLabel","videoId","getElementsByClassName","removeAttribute","randomNum","random","GLOBAL_STRINGS","kind","captionSrc","children","childNodes","nodeName","captionExists","captionsOnDefault","seekInterval","btnRestart","btnRewind","btnForward","btnVolume","btnMute","progressBar","progressBarSpan","duration","txtSeconds","fullScreenBtnContainer","textTracks","addEventListener","play","focus","width","click","e","$target","target","data","which_container","which_video","which_btnPlay","which_btnPause","targetTime","announcePos","round","announceMsg","volume","this","value","muted","onkeypress","keyCode","preventDefault","secs","mins","slice","percent","pos","offsetWidth","currClass","track","tracks","j","mode","activeCues","hasOwnProperty","text","currentCaption","xhr","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","record","records","req","responseText","r","shift","open","send","removeChild","queue","parallelism","pop","popping","started","tasks","active","t","a","push","callback","apply","error","remaining","NaN","notify","await","all","concat","q","noop","Infinity","defer","arguments","f","awaitAll","version","define","amd","module","exports","scroll","ready","bind","event","href","stop","animate","scrollTop","location","hash","on","tab","newTabHeight","querySelector","clientHeight","parent","each","$id","$current","html","find","load","response","asignVal_svg","val","val_svg","words","trim","potentialWidow","newWords","join","Vis","visualize","states","forEach","wrapper","visualizationWrapper","append","createMap","geo","selector","eventName","selectAll","el","shape","key","$maps_sub","features","enter","path","values","properties","TOWN","palette","self","town_value","geoData","format","node","parentNode","TOWN_1","fill-opacity","generateLegend_map_sub","scale","szDivId","szCaption","legendHeight","legendWidth","$maps_sub_svg","$maps_sub_legends","legendData","domain","range","s","domainStrings","unitWidth","json","projection","conicConformal","parallels","rotate","translate","colors_5yr","threshold","opChgScale","date","setupData","years","keys","dataset","OMRs","y","year","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","mouseoverFunc","mouseoutFunc","mousemoveFunc","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","svg","symbol","type","size","tooltip_death","y0","mouse","y1","invert","percentVal","x0","offsetY","time","linear","axis","line","csv","quarter","date2","Date","setMonth","getMonth","ceil","tooltipFent","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","$legend","componentWidth","renderLegend","legendItems","legendItemsTranslate","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","map","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","$lines_bsas_x_axis_label","$lines_bsas_y_axis_label","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","transition","delay","string_select","value_select","town_names","abington","acton","acushnet","adams","agawam","alford","amesbury","amherst","andover","aquinnah","arlington","ashburnham","ashby","ashfield","ashland","athol","attleboro","auburn","avon","ayer","barnstable","barre","becket","bedford","belchertown","bellingham","belmont","berkley","berlin","bernardston","beverly","billerica","blackstone","blandford","bolton","boston","bourne","boxborough","boxford","boylston","braintree","brewster","bridgewater","brimfield","brockton","brookfield","brookline","buckland","burlington","cambridge","canton","carlisle","carver","charlemont","charlton","chatham","chelmsford","chelsea","cheshire","chester","chesterfield","chicopee","chilmark","clarksburg","clinton","cohasset","colrain","concord","conway","cummington","dalton","danvers","dartmouth","dedham","deerfield","dennis","dighton","douglas","dover","dracut","dudley","dunstable","duxbury","eastbridgewater","eastbrookfield","eastham","easthampton","eastlongmeadow","easton","edgartown","egremont","erving","essex","everett","fairhaven","fallriver","falmouth","fitchburg","florida","foxborough","framingham","franklin","freetown","gardner","georgetown","gill","gloucester","goshen","gosnold","grafton","granby","granville","greatbarrington","greenfield","groton","groveland","hadley","halifax","hamilton","hampden","hancock","hanover","hanson","hardwick","harvard","harwich","hatfield","haverhill","hawley","heath","hingham","hinsdale","holbrook","holden","holland","holliston","holyoke","hopedale","hopkinton","hubbardston","hudson","hull","huntington","ipswich","kingston","lakeville","lancaster","lanesborough","lawrence","lee","leicester","lenox","leominster","leverett","lexington","leyden","lincoln","littleton","longmeadow","lowell","ludlow","lunenburg","lynn","lynnfield","malden","manchester","mansfield","marblehead","marion","marlborough","marshfield","mashpee","mattapoisett","maynard","medfield","medford","medway","melrose","mendon","merrimac","methuen","middleborough","middlefield","middleton","milford","millbury","millis","millville","milton","monroe","monson","montague","monterey","montgomery","mountwashington","nahant","nantucket","natick","needham","newashford","newbedford","newbraintree","newbury","newburyport","newmarlborough","newsalem","newton","norfolk","northadams","northampton","northandover","northattleborough","northborough","northbridge","northbrookfield","northfield","northreading","norton","norwell","norwood","oakbluffs","oakham","orange","orleans","otis","oxford","palmer","paxton","peabody","pelham","pembroke","pepperell","peru","petersham","phillipston","pittsfield","plainfield","plainville","plymouth","plympton","princeton","provincetown","quincy","randolph","raynham","reading","rehoboth","revere","richmond","rochester","rockland","rockport","rowe","rowley","royalston","russell","rutland","salem","salisbury","sandisfield","sandwich","saugus","savoy","scituate","seekonk","sharon","sheffield","shelburne","sherborn","shirley","shrewsbury","shutesbury","somerset","somerville","southampton","southborough","southbridge","southhadley","southwick","spencer","springfield","sterling","stockbridge","stoneham","stoughton","stow","sturbridge","sudbury","sunderland","sutton","swampscott","swansea","taunton","templeton","tewksbury","tisbury","tolland","topsfield","townsend","truro","tyngsborough","tyringham","upton","uxbridge","wakefield","wales","walpole","waltham","ware","wareham","warren","warwick","washington","watertown","wayland","webster","wellesley","wellfleet","wendell","wenham","westborough","westboylston","westbridgewater","westbrookfield","westfield","westford","westhampton","westminster","westnewbury","weston","westport","westspringfield","weststockbridge","westtisbury","westwood","weymouth","whately","whitman","wilbraham","williamsburg","williamstown","wilmington","winchendon","winchester","windsor","winthrop","woburn","worcester","worthington","wrentham","yarmouth","bisectAge","bisector","category10","none","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","term","ui","asignVal_substance","Yes","empty","makeChart_substance","No","data_substance","blockArray_substance","noOfBlocks_No","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","person_path","person_svg_No","b","person_svg_Yes","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","stroke","stroke-width","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","alias","dl_blocks_bar","substance","sub","time_period","o","stack","layout","n","substance_html","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","person_svg","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","reverse","lineNumber","dy","tspan","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","yAxisLabel","legendRect","legendText","bar","raceth","errorBarArea2014all","min2014","max2014","interpolate","errorBarArea2015all","min2015","max2015","errorBarArea2014white","errorBarArea2015white","errorBarArea2014black","errorBarArea2015black","errorBarArea2014hisp","errorBarArea2015hisp","errorBars2014all","errorBars2015all","errorBars2014white","errorBars2015white","errorBars2014black","errorBars2015black","errorBars2014hisp","errorBars2015hisp","linemult","linepad","2014","2015","area","divtooltip_raceeth","$bars_race","elements","l","elementData","__data__","legend","PLAY","PAUSE","TOGGLE_FULL_SCREEN","MUTE","RESTART","CAPTIONS","REWIND","FORWARD"],"mappings":"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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        event.preventDefault();\n    var href = $(this).attr('href');\n        $('html, body').stop().animate({\n        scrollTop: $(href).offset().top\n    }, 750, function() {\n        window.location.hash = href;\n    });\n        event.preventDefault();\n    });\n});\n\n\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n  var tab = $(e.target).attr('href');\n  var newTabHeight = document.querySelector(tab).clientHeight;\n  $(tab).parent().animate({ height: newTabHeight });\n});\n\n\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n/////////////////////////////Pills\n\n$('.pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an active opioid prescription in the month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an opioid prescription at some point from 2011–2014')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n\n\n// Fix widows (no words on own line at the end of a <p>)\n$('p, .sources-section li, .tab-pane li').each(function() {\n    var innerHTML = $(this).html();\n    var words = innerHTML.trim().split(' ');\n    if(words.length > 2) {\n        var potentialWidow = words[words.length-1];\n        var newWords = words.slice(0,-1).join(' ');\n        $(this).html(newWords+'&nbsp;'+potentialWidow);\n    }\n})\n\n\n//bold footnote on in text num click\n//onclick=\"BoldText(document.getElementById(&quot;footnote-1&quot;));\"\n\nvar currElem = null; //will hold the element that is bold now\n\n function BoldText(elem) {\n    //console.log(elem)\n    //document.getElementById(\"footnote-4\")\n \n  if (elem != currElem) { //do thing if you're clicking on a bold link\n\n   if (currElem) //if a link bold right now unbold it\n\n    currElem.style.fontWeight='lighter';\n\n   currElem = elem; //assign this element as the current one\n\n   elem.style.fontWeight='bolder';  //make the element clicked bold\n \n  }\n\n }\n","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n    var town_names = {\n        //\"massachusetts\" : \"Massachusetts\",\n        \"abington\": \"Abington\",\n        \"acton\": \"Acton\",\n        \"acushnet\": \"Acushnet\",\n        \"adams\": \"Adams\",\n        \"agawam\": \"Agawam\",\n        \"alford\": \"Alford\",\n        \"amesbury\": \"Amesbury\",\n        \"amherst\": \"Amherst\",\n        \"andover\": \"Andover\",\n        \"aquinnah\": \"Aquinnah\",\n        \"arlington\": \"Arlington\",\n        \"ashburnham\": \"Ashburnham\",\n        \"ashby\": \"Ashby\",\n        \"ashfield\": \"Ashfield\",\n        \"ashland\": \"Ashland\",\n        \"athol\": \"Athol\",\n        \"attleboro\": \"Attleboro\",\n        \"auburn\": \"Auburn\",\n        \"avon\": \"Avon\",\n        \"ayer\": \"Ayer\",\n        \"barnstable\": \"Barnstable\",\n        \"barre\": \"Barre\",\n        \"becket\": \"Becket\",\n        \"bedford\": \"Bedford\",\n        \"belchertown\": \"Belchertown\",\n        \"bellingham\": \"Bellingham\",\n        \"belmont\": \"Belmont\",\n        \"berkley\": \"Berkley\",\n        \"berlin\": \"Berlin\",\n        \"bernardston\": \"Bernardston\",\n        \"beverly\": \"Beverly\",\n        \"billerica\": \"Billerica\",\n        \"blackstone\": \"Blackstone\",\n        \"blandford\": \"Blandford\",\n        \"bolton\": \"Bolton\",\n        \"boston\": \"Boston\",\n        \"bourne\": \"Bourne\",\n        \"boxborough\": \"Boxborough\",\n        \"boxford\": \"Boxford\",\n        \"boylston\": \"Boylston\",\n        \"braintree\": \"Braintree\",\n        \"brewster\": \"Brewster\",\n        \"bridgewater\": \"Bridgewater\",\n        \"brimfield\": \"Brimfield\",\n        \"brockton\": \"Brockton\",\n        \"brookfield\": \"Brookfield\",\n        \"brookline\": \"Brookline\",\n        \"buckland\": \"Buckland\",\n        \"burlington\": \"Burlington\",\n        \"cambridge\": \"Cambridge\",\n        \"canton\": \"Canton\",\n        \"carlisle\": \"Carlisle\",\n        \"carver\": \"Carver\",\n        \"charlemont\": \"Charlemont\",\n        \"charlton\": \"Charlton\",\n        \"chatham\": \"Chatham\",\n        \"chelmsford\": \"Chelmsford\",\n        \"chelsea\": \"Chelsea\",\n        \"cheshire\": \"Cheshire\",\n        \"chester\": \"Chester\",\n        \"chesterfield\": \"Chesterfield\",\n        \"chicopee\": \"Chicopee\",\n        \"chilmark\": \"Chilmark\",\n        \"clarksburg\": \"Clarksburg\",\n        \"clinton\": \"Clinton\",\n        \"cohasset\": \"Cohasset\",\n        \"colrain\": \"Colrain\",\n        \"concord\": \"Concord\",\n        \"conway\": \"Conway\",\n        \"cummington\": \"Cummington\",\n        \"dalton\": \"Dalton\",\n        \"danvers\": \"Danvers\",\n        \"dartmouth\": \"Dartmouth\",\n        \"dedham\": \"Dedham\",\n        \"deerfield\": \"Deerfield\",\n        \"dennis\": \"Dennis\",\n        \"dighton\": \"Dighton\",\n        \"douglas\": \"Douglas\",\n        \"dover\": \"Dover\",\n        \"dracut\": \"Dracut\",\n        \"dudley\": \"Dudley\",\n        \"dunstable\": \"Dunstable\",\n        \"duxbury\": \"Duxbury\",\n        \"eastbridgewater\": \"East Bridgewater\",\n        \"eastbrookfield\": \"East Brookfield\",\n        \"eastham\": \"Eastham\",\n        \"easthampton\": \"Easthampton\",\n        \"eastlongmeadow\": \"East Longmeadow\",\n        \"easton\": \"Easton\",\n        \"edgartown\": \"Edgartown\",\n        \"egremont\": \"Egremont\",\n        \"erving\": \"Erving\",\n        \"essex\": \"Essex\",\n        \"everett\": \"Everett\",\n        \"fairhaven\": \"Fairhaven\",\n        \"fallriver\": \"Fall River\",\n        \"falmouth\": \"Falmouth\",\n        \"fitchburg\": \"Fitchburg\",\n        \"florida\": \"Florida\",\n        \"foxborough\": \"Foxborough\",\n        \"framingham\": \"Framingham\",\n        \"franklin\": \"Franklin\",\n        \"freetown\": \"Freetown\",\n        \"gardner\": \"Gardner\",\n        \"georgetown\": \"Georgetown\",\n        \"gill\": \"Gill\",\n        \"gloucester\": \"Gloucester\",\n        \"goshen\": \"Goshen\",\n        \"gosnold\": \"Gosnold\",\n        \"grafton\": \"Grafton\",\n        \"granby\": \"Granby\",\n        \"granville\": \"Granville\",\n        \"greatbarrington\": \"Great Barrington\",\n        \"greenfield\": \"Greenfield\",\n        \"groton\": \"Groton\",\n        \"groveland\": \"Groveland\",\n        \"hadley\": \"Hadley\",\n        \"halifax\": \"Halifax\",\n        \"hamilton\": \"Hamilton\",\n        \"hampden\": \"Hampden\",\n        \"hancock\": \"Hancock\",\n        \"hanover\": \"Hanover\",\n        \"hanson\": \"Hanson\",\n        \"hardwick\": \"Hardwick\",\n        \"harvard\": \"Harvard\",\n        \"harwich\": \"Harwich\",\n        \"hatfield\": \"Hatfield\",\n        \"haverhill\": \"Haverhill\",\n        \"hawley\": \"Hawley\",\n        \"heath\": \"Heath\",\n        \"hingham\": \"Hingham\",\n        \"hinsdale\": \"Hinsdale\",\n        \"holbrook\": \"Holbrook\",\n        \"holden\": \"Holden\",\n        \"holland\": \"Holland\",\n        \"holliston\": \"Holliston\",\n        \"holyoke\": \"Holyoke\",\n        \"hopedale\": \"Hopedale\",\n        \"hopkinton\": \"Hopkinton\",\n        \"hubbardston\": \"Hubbardston\",\n        \"hudson\": \"Hudson\",\n        \"hull\": \"Hull\",\n        \"huntington\": \"Huntington\",\n        \"ipswich\": \"Ipswich\",\n        \"kingston\": \"Kingston\",\n        \"lakeville\": \"Lakeville\",\n        \"lancaster\": \"Lancaster\",\n        \"lanesborough\": \"Lanesborough\",\n        \"lawrence\": \"Lawrence\",\n        \"lee\": \"Lee\",\n        \"leicester\": \"Leicester\",\n        \"lenox\": \"Lenox\",\n        \"leominster\": \"Leominster\",\n        \"leverett\": \"Leverett\",\n        \"lexington\": \"Lexington\",\n        \"leyden\": \"Leyden\",\n        \"lincoln\": \"Lincoln\",\n        \"littleton\": \"Littleton\",\n        \"longmeadow\": \"Longmeadow\",\n        \"lowell\": \"Lowell\",\n        \"ludlow\": \"Ludlow\",\n        \"lunenburg\": \"Lunenburg\",\n        \"lynn\": \"Lynn\",\n        \"lynnfield\": \"Lynnfield\",\n        \"malden\": \"Malden\",\n        \"manchester\": \"Manchester\",\n        \"mansfield\": \"Mansfield\",\n        \"marblehead\": \"Marblehead\",\n        \"marion\": \"Marion\",\n        \"marlborough\": \"Marlborough\",\n        \"marshfield\": \"Marshfield\",\n        \"mashpee\": \"Mashpee\",\n        \"mattapoisett\": \"Mattapoisett\",\n        \"maynard\": \"Maynard\",\n        \"medfield\": \"Medfield\",\n        \"medford\": \"Medford\",\n        \"medway\": \"Medway\",\n        \"melrose\": \"Melrose\",\n        \"mendon\": \"Mendon\",\n        \"merrimac\": \"Merrimac\",\n        \"methuen\": \"Methuen\",\n        \"middleborough\": \"Middleborough\",\n        \"middlefield\": \"Middlefield\",\n        \"middleton\": \"Middleton\",\n        \"milford\": \"Milford\",\n        \"millbury\": \"Millbury\",\n        \"millis\": \"Millis\",\n        \"millville\": \"Millville\",\n        \"milton\": \"Milton\",\n        \"monroe\": \"Monroe\",\n        \"monson\": \"Monson\",\n        \"montague\": \"Montague\",\n        \"monterey\": \"Monterey\",\n        \"montgomery\": \"Montgomery\",\n        \"mountwashington\": \"Mount Washington\",\n        \"nahant\": \"Nahant\",\n        \"nantucket\": \"Nantucket\",\n        \"natick\": \"Natick\",\n        \"needham\": \"Needham\",\n        \"newashford\": \"New Ashford\",\n        \"newbedford\": \"New Bedford\",\n        \"newbraintree\": \"New Braintree\",\n        \"newbury\": \"Newbury\",\n        \"newburyport\": \"Newburyport\",\n        \"newmarlborough\": \"New Marlborough\",\n        \"newsalem\": \"New Salem\",\n        \"newton\": \"Newton\",\n        \"norfolk\": \"Norfolk\",\n        \"northadams\": \"North Adams\",\n        \"northampton\": \"Northampton\",\n        \"northandover\": \"North Andover\",\n        \"northattleborough\": \"North Attleborough\",\n        \"northborough\": \"Northborough\",\n        \"northbridge\": \"Northbridge\",\n        \"northbrookfield\": \"North Brookfield\",\n        \"northfield\": \"Northfield\",\n        \"northreading\": \"North Reading\",\n        \"norton\": \"Norton\",\n        \"norwell\": \"Norwell\",\n        \"norwood\": \"Norwood\",\n        \"oakbluffs\": \"Oak Bluffs\",\n        \"oakham\": \"Oakham\",\n        \"orange\": \"Orange\",\n        \"orleans\": \"Orleans\",\n        \"otis\": \"Otis\",\n        \"oxford\": \"Oxford\",\n        \"palmer\": \"Palmer\",\n        \"paxton\": \"Paxton\",\n        \"peabody\": \"Peabody\",\n        \"pelham\": \"Pelham\",\n        \"pembroke\": \"Pembroke\",\n        \"pepperell\": \"Pepperell\",\n        \"peru\": \"Peru\",\n        \"petersham\": \"Petersham\",\n        \"phillipston\": \"Phillipston\",\n        \"pittsfield\": \"Pittsfield\",\n        \"plainfield\": \"Plainfield\",\n        \"plainville\": \"Plainville\",\n        \"plymouth\": \"Plymouth\",\n        \"plympton\": \"Plympton\",\n        \"princeton\": \"Princeton\",\n        \"provincetown\": \"Provincetown\",\n        \"quincy\": \"Quincy\",\n        \"randolph\": \"Randolph\",\n        \"raynham\": \"Raynham\",\n        \"reading\": \"Reading\",\n        \"rehoboth\": \"Rehoboth\",\n        \"revere\": \"Revere\",\n        \"richmond\": \"Richmond\",\n        \"rochester\": \"Rochester\",\n        \"rockland\": \"Rockland\",\n        \"rockport\": \"Rockport\",\n        \"rowe\": \"Rowe\",\n        \"rowley\": \"Rowley\",\n        \"royalston\": \"Royalston\",\n        \"russell\": \"Russell\",\n        \"rutland\": \"Rutland\",\n        \"salem\": \"Salem\",\n        \"salisbury\": \"Salisbury\",\n        \"sandisfield\": \"Sandisfield\",\n        \"sandwich\": \"Sandwich\",\n        \"saugus\": \"Saugus\",\n        \"savoy\": \"Savoy\",\n        \"scituate\": \"Scituate\",\n        \"seekonk\": \"Seekonk\",\n        \"sharon\": \"Sharon\",\n        \"sheffield\": \"Sheffield\",\n        \"shelburne\": \"Shelburne\",\n        \"sherborn\": \"Sherborn\",\n        \"shirley\": \"Shirley\",\n        \"shrewsbury\": \"Shrewsbury\",\n        \"shutesbury\": \"Shutesbury\",\n        \"somerset\": \"Somerset\",\n        \"somerville\": \"Somerville\",\n        \"southampton\": \"Southampton\",\n        \"southborough\": \"Southborough\",\n        \"southbridge\": \"Southbridge\",\n        \"southhadley\": \"South Hadley\",\n        \"southwick\": \"Southwick\",\n        \"spencer\": \"Spencer\",\n        \"springfield\": \"Springfield\",\n        \"sterling\": \"Sterling\",\n        \"stockbridge\": \"Stockbridge\",\n        \"stoneham\": \"Stoneham\",\n        \"stoughton\": \"Stoughton\",\n        \"stow\": \"Stow\",\n        \"sturbridge\": \"Sturbridge\",\n        \"sudbury\": \"Sudbury\",\n        \"sunderland\": \"Sunderland\",\n        \"sutton\": \"Sutton\",\n        \"swampscott\": \"Swampscott\",\n        \"swansea\": \"Swansea\",\n        \"taunton\": \"Taunton\",\n        \"templeton\": \"Templeton\",\n        \"tewksbury\": \"Tewksbury\",\n        \"tisbury\": \"Tisbury\",\n        \"tolland\": \"Tolland\",\n        \"topsfield\": \"Topsfield\",\n        \"townsend\": \"Townsend\",\n        \"truro\": \"Truro\",\n        \"tyngsborough\": \"Tyngsborough\",\n        \"tyringham\": \"Tyringham\",\n        \"upton\": \"Upton\",\n        \"uxbridge\": \"Uxbridge\",\n        \"wakefield\": \"Wakefield\",\n        \"wales\": \"Wales\",\n        \"walpole\": \"Walpole\",\n        \"waltham\": \"Waltham\",\n        \"ware\": \"Ware\",\n        \"wareham\": \"Wareham\",\n        \"warren\": \"Warren\",\n        \"warwick\": \"Warwick\",\n        \"washington\": \"Washington\",\n        \"watertown\": \"Watertown\",\n        \"wayland\": \"Wayland\",\n        \"webster\": \"Webster\",\n        \"wellesley\": \"Wellesley\",\n        \"wellfleet\": \"Wellfleet\",\n        \"wendell\": \"Wendell\",\n        \"wenham\": \"Wenham\",\n        \"westborough\": \"Westborough\",\n        \"westboylston\": \"West Boylston\",\n        \"westbridgewater\": \"West Bridgewater\",\n        \"westbrookfield\": \"West Brookfield\",\n        \"westfield\": \"Westfield\",\n        \"westford\": \"Westford\",\n        \"westhampton\": \"Westhampton\",\n        \"westminster\": \"Westminster\",\n        \"westnewbury\": \"West Newbury\",\n        \"weston\": \"Weston\",\n        \"westport\": \"Westport\",\n        \"westspringfield\": \"West Springfield\",\n        \"weststockbridge\": \"West Stockbridge\",\n        \"westtisbury\": \"West Tisbury\",\n        \"westwood\": \"Westwood\",\n        \"weymouth\": \"Weymouth\",\n        \"whately\": \"Whately\",\n        \"whitman\": \"Whitman\",\n        \"wilbraham\": \"Wilbraham\",\n        \"williamsburg\": \"Williamsburg\",\n        \"williamstown\": \"Williamstown\",\n        \"wilmington\": \"Wilmington\",\n        \"winchendon\": \"Winchendon\",\n        \"winchester\": \"Winchester\",\n        \"windsor\": \"Windsor\",\n        \"winthrop\": \"Winthrop\",\n        \"woburn\": \"Woburn\",\n        \"worcester\": \"Worcester\",\n        \"worthington\": \"Worthington\",\n        \"wrentham\": \"Wrentham\",\n        \"yarmouth\": \"Yarmouth\"\n    };\n    var current_town = \"massachusetts\";\n\n    var margin = {\n            top: 0,\n            right: 25,\n            bottom: 35,\n            left: 45\n        },\n        wrapper_width = rootNode.clientWidth,\n        wrapper_height = 400,\n        width = wrapper_width - margin.left - margin.right,\n        height = wrapper_height - margin.top - margin.bottom;\n\n    var bisectAge = d3.bisector(function(d) {\n        return d.age;\n    }).left;\n    var percent = d3.format(',.0%');\n    var yearformat = d3.format(\"d\");\n    // var min_age = 2005;\n    // var fields = ['emp', 'edu', 'race', 'orig'];\n    var groups = {};\n\n    var x = d3.scale.linear();\n\n    var y = d3.scale.linear();\n\n    var color = d3.scale.category10();\n\n    var xAxis_bsas = d3.svg.axis();\n\n    var yAxis_bsas = d3.svg.axis();\n\n    var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n    var $lines_bsas = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n        .append(\"text\")\n        .attr(\"x\", 635)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n    var $lines_bsas_x_axis_label = $x_axis.append(\"text\");\n    var $lines_bsas_y_axis_label = $y_axis.append(\"text\");\n\n    var legend_pos_text = -60,\n        legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n\n\n\n\n    function render() {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n            .scale(x)\n            .tickFormat(yearformat)\n            .ticks((width < 500 ? 4 : 10))\n            .orient(\"bottom\")\n            .outerTickSize(0);\n\n        yAxis_bsas\n            .scale(y)\n            .tickSize(width)\n            .orient(\"right\")\n            .tickFormat(percent);\n\n\n\n        line.x(function(d) {\n                return x(d.age);\n            })\n            .y(function(d) {\n                return y(d.value);\n            })\n            .defined(function(d) {\n                return y(d.value);\n            }); // Omit empty values.\n\n        $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n        $y_axis.call(yAxis_bsas);\n        $lines_bsas.selectAll(\".vis-y-axis .tick text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n        $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        $lines_bsas_x_axis_label\n            .attr(\"x\", (width - margin.left)/2)\n            .attr(\"y\", (margin.bottom) / 2)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-x-axis-label\")\n            .text(\"Fiscal Year\");\n\n\n        $lines_bsas_y_axis_label\n            .attr(\"x\", -(height - margin.top)/2)\n            .attr(\"y\", -margin.left)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-y-axis-label\")\n            .text(\"Percent Primary Substance of Use\");\n\n\n\n        renderLegend();\n        renderLines();\n        updateDots();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        //$legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        //$legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (1 * line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (1 * line_height) + 3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (2 * line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (2 * line_height) + 3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (3 * line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (3 * line_height) + 3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (4 * line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (4 * line_height) + 3);\n        //$legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (5 * line_height));\n        //$legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (5 * line_height) + 3);\n    }\n\n    function setupLines() {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        // $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n        //     var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n        //     var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n        //     if (y_circle_alcohol >= 0) {\n\n        //         //console.log(groups[current_town+\"alcohol\"].values[i].age);\n        //         //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n        //         $lines_bsas.append(\"circle\")\n        //             .attr(\"class\", function(d) {\n        //                 return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n        //             })\n        //             .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n        //             .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n        //             .attr(\"r\", 3)\n        //             .attr(\"pointer-events\", \"none\");\n        //     }\n        // }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        // $lines.none.attr(\"d\", function(d) {\n        //     return line(groups[current_town + \"none\"].values);\n        // });\n    }\n\n\n\n    function updateDots() {\n\n        // marriages = groups[current_town];\n        //update alcohol line\n        $lines_bsas.select(\".line.alcohol\")\n            .transition()\n            .duration(1000)\n            .delay(180)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"alcohol\"].values);\n            });\n\n        //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n        //update alcohol circles\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n            var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                // console.log(string_select);\n\n            if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"alcohol\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"alcohol\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n\n\n        //marijuana\n        $lines_bsas.select(\".line.marijuana\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"marijuana\"].values);\n            });\n        //update marijuana circles\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n            var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                //console.log(string_select);\n\n            if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"marijuana\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"marijuana\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n        //none\n        // $lines_bsas.select(\".line.none\")\n        //     .transition()\n        //     .duration(1000)\n        //     .attr(\"d\", function(d) {\n        //         return line(groups[current_town + \"none\"].values);\n        //     });\n        // //update none circles\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n        //     var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n        //     var value_select = groups[current_town + \"none\"].values[i].value\n        //         // console.log(string_select);\n        //         // console.log(value_select);\n        //         // console.log(value_select >= 0);\n\n        //     if (groups[current_town + \"none\"].values[i].value >= 0) {\n        //         $lines_bsas.selectAll(string_select)\n        //             .transition()\n        //             .duration(1000)\n        //             .attr(\"cx\", function(d) {\n        //                 return x(groups[current_town + \"none\"].values[i].age)\n        //             })\n        //             .attr(\"cy\", function(d) {\n        //                 return y(groups[current_town + \"none\"].values[i].value)\n        //             })\n        //             .attr(\"r\", 3);\n        //     } else {\n        //         $lines_bsas.selectAll(string_select)\n        //             .transition()\n        //             .duration(1000)\n        //             .attr(\"r\", 0);\n        //     }\n\n        // }\n\n        //opioids\n        $lines_bsas.select(\".line.opioids\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"opioids\"].values);\n            });\n        //update opioids circles\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n            var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n            var value_select = groups[current_town + \"opioids\"].values[i].value\n                //console.log(string_select);\n                //console.log(value_select);\n                //console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"opioids\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"opioids\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n        //other\n        $lines_bsas.select(\".line.other\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"other\"].values);\n            });\n        //update other circles\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n            var value_select = groups[current_town + \"other\"].values[i].value\n                // console.log(string_select);\n                // console.log(value_select);\n                // console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"other\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"other\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n    }\n\n\n\n\n\n    d3.csv(\"js/data/bsas-data-2000to2015.csv\", type, function(error, data) {\n        if (error) throw error;\n        //console.log(groups);\n        // var marriages = groups[current_town];\n\n        x.domain([2000, d3.max(data, function(d) {\n            return d.age;\n        })]);\n        y.domain([0, 1.00]);\n\n        setupLines();\n        render();\n        window.addEventListener('resize', render);\n\n\n\n        // Autocomplete\n\n        $(\".btn-bsas\").addClass('active');\n        d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n            current_town = d3.select(this).attr(\"data-val\");\n            updateDots();\n            d3.select(this).classed('active', true);\n            $(\"#tags\").val('');\n        });\n\n\n\n        $(\"#tags\").autocomplete({\n            source: function(request, response) {\n                //console.log(town_names);\n                var matches = $.map(town_names, function(acItem) {\n                    if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                        return acItem;\n                    }\n                });\n                response(matches);\n                //$(\"#tags\").focus(function() {\n                // if (matches.length == 1) {\n                //     current_town = matches[0];\n                //     $(\".btn-bsas\").removeClass('active');\n                //     updateDots();\n                // }\n                //});\n                //console.log(matches);\n            },\n            select: function(event, ui) {\n                $.each(town_names, function(key, value) {\n                    if (value === ui.item.value) {\n                        current_town = key;\n                        console.log(value)\n                    }\n                });\n\n\n                $(\".btn-bsas\").removeClass('active');\n                updateDots();\n            }\n        });\n\n\n\n\n        // alcohol\n        var focusalcohol = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus alcohol\")\n            .style(\"display\", \"none\");\n        focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // marijuana\n        var focusmarijuana = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus marijuana\")\n            .style(\"display\", \"none\");\n        focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        // var focusnone = $lines_bsas.append(\"g\")\n        //     .attr(\"class\", \"focus none\")\n        //     .style(\"display\", \"none\");\n        // focusnone.append(\"circle\")\n        //     .attr(\"pointer-events\", \"none\")\n        //     .attr(\"r\", 3);\n        // focusnone.append(\"text\")\n        //     .attr(\"pointer-events\", \"none\")\n        //     .attr(\"x\", 9)\n        //     .attr(\"dy\", \".35em\");\n\n        // opioids\n        var focusopioids = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus opioids\")\n            .style(\"display\", \"none\");\n        focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        var focusother = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus other\")\n            .style(\"display\", \"none\");\n        focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // Events\n        $eventOverlay\n            .on(\"mouseover\", function() {\n                focusmarijuana.style(\"display\", null);\n                focusalcohol.style(\"display\", null);\n                //focusnone.style(\"display\", null);\n                focusopioids.style(\"display\", null);\n                focusother.style(\"display\", null);\n                //focusage.style(\"display\", null);\n            })\n            .on(\"mouseout\", function() {\n                focusmarijuana.style(\"display\", \"none\");\n                focusalcohol.style(\"display\", \"none\");\n                //focusnone.style(\"display\", \"none\");\n                focusopioids.style(\"display\", \"none\");\n                focusother.style(\"display\", \"none\");\n                //focusage.style(\"display\", \"none\");\n            })\n            .on(\"mousemove\", mousemove);\n\n        function mousemove() {\n\n\n\n            var x0 = x.invert(d3.mouse(this)[0])\n\n            // Alcohol\n            var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n            if (d_alcohol.value >= 0) {\n                focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform', \"translate(-28,0)\");\n                focusalcohol.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusalcohol.select(\"circle\").attr(\"r\", 0);\n                focusalcohol.select(\"text\").text(\"\");\n            }\n\n            // Marijuana\n\n            var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n            // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n            // console.log(d_marijuana.value >= 0);\n\n            if (d_marijuana.value >= 0) {\n                focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform', \"translate(-28,0)\");\n                focusmarijuana.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                focusmarijuana.select(\"text\").text(\"\");\n            }\n\n            // None\n\n            // var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n            //     d0_none = groups[current_town + \"none\"].values[i_none - 1],\n            //     d1_none = groups[current_town + \"none\"].values[i_none],\n            //     d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n            // if (d_none.value >= 0) {\n            //     focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n            //     focusnone.select(\"text\").text(percent(d_none.value));\n            //     focusnone.select(\"circle\").attr(\"r\", 4);\n            // } else {\n            //     focusnone.select(\"circle\").attr(\"r\", 0);\n            //     focusnone.select(\"text\").text(\"\");\n            // }\n\n\n            // Opioids\n            var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n            if (d_opioids.value >= 0) {\n                focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                focusopioids.select(\"text\").text(percent(d_opioids.value));\n                focusopioids.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusopioids.select(\"circle\").attr(\"r\", 0);\n                focusopioids.select(\"text\").text(\"\");\n            }\n\n\n            // other\n            var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                d1_other = groups[current_town + \"other\"].values[i_other],\n                d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n            //console.log(d_other.value);\n\n            if (d_other.value >= 0) {\n                focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                focusother.select(\"text\").text(percent(d_other.value));\n                focusother.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusother.select(\"circle\").attr(\"r\", 0);\n                focusother.select(\"text\").text(\"\");\n            }\n\n\n            // Adjust label horizontal positions.\n            if (x0 > 80) {\n                focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                //focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n            } else {\n                focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                //focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n            }\n\n\n\n        }\n\n\n    }); // @end d3.tsv()\n\n\n    function type(d, i) {\n\n        d3.keys(d).forEach(function(key) {\n            d[key] = +d[key];\n            if (key != 'age') {\n                if (!(key in groups)) {\n                    groups[key] = {\n                        'values': [{\n                            age: d.age,\n                            value: d[key]\n                        }]\n                    };\n                } else {\n                    groups[key]['values'].push({\n                        age: d.age,\n                        value: d[key]\n                    });\n                }\n            }\n        });\n\n        return d;\n\n    }\n\n\n\n\n})();\n\nfunction opioidsY2000(d, i) {\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };\n\n        function opioidsY2015(d, i) {\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };\n","var GLOBAL_STRINGS = {\n    \"PLAY\": \"Play\",\n    \"PAUSE\": \"Pause\",\n    \"TOGGLE_FULL_SCREEN\": \"Toggle full screen\",\n    \"MUTE\": \"Mute\",\n    \"RESTART\": \"Restart\",\n    \"CAPTIONS\": \"Closed captions\",\n    \"REWIND\": \"Rewind\",\n    \"FORWARD\": \"Forward\"\n}\n\nfunction InitPxVideo(options) {\n\n    \"use strict\";\n\n    // Utilities for caption time codes\n    function video_timecode_min(tc) {\n        var tcpair = [];\n        tcpair = tc.split(' --> ');\n        return videosub_tcsecs(tcpair[0]);\n    }\n\n    function video_timecode_max(tc) {\n        var tcpair = [];\n        tcpair = tc.split(' --> ');\n        return videosub_tcsecs(tcpair[1]);\n    }\n\n    function videosub_tcsecs(tc) {\n        if (tc === null || tc === undefined) {\n            return 0;\n        } else {\n            var tc1 = [],\n                tc2 = [],\n                seconds;\n            tc1 = tc.split(',');\n            tc2 = tc1[0].split(':');\n            seconds = Math.floor(tc2[0] * 60 * 60) + Math.floor(tc2[1] * 60) + Math.floor(tc2[2]);\n            return seconds;\n        }\n    }\n\n    // For \"manual\" captions, adjust caption position when play time changed (via rewind, clicking progress bar, etc.)\n    function adjustManualCaptions(obj) {\n        obj.subcount = 0;\n        while (video_timecode_max(obj.captions[obj.subcount][0]) < obj.movie.currentTime.toFixed(1)) {\n            obj.subcount++;\n            if (obj.subcount > obj.captions.length - 1) {\n                obj.subcount = obj.captions.length - 1;\n                break;\n            }\n        }\n    }\n\n    // Display captions container and button (for initialization)\n    function showCaptionContainerAndButton(obj) {\n        obj.captionsBtnContainer.className = \"px-video-captions-btn-container show-inline\";\n        if (obj.isCaptionDefault) {\n            obj.captionsContainer.className = \"px-video-captions show\";\n            obj.captionsBtn.setAttribute(\"checked\", \"checked\");\n        }\n    }\n\n    // Unfortunately, due to scattered support, browser sniffing is required\n    function browserSniff() {\n        var nVer = navigator.appVersion,\n            nAgt = navigator.userAgent,\n            browserName = navigator.appName,\n            fullVersion = '' + parseFloat(navigator.appVersion),\n            majorVersion = parseInt(navigator.appVersion, 10),\n            nameOffset,\n            verOffset,\n            ix;\n\n        // MSIE 11\n        if ((navigator.appVersion.indexOf(\"Windows NT\") !== -1) && (navigator.appVersion.indexOf(\"rv:11\") !== -1)) {\n            browserName = \"IE\";\n            fullVersion = \"11;\";\n        }\n        // MSIE\n        else if ((verOffset = nAgt.indexOf(\"MSIE\")) !== -1) {\n            browserName = \"IE\";\n            fullVersion = nAgt.substring(verOffset + 5);\n        }\n        // Chrome\n        else if ((verOffset = nAgt.indexOf(\"Chrome\")) !== -1) {\n            browserName = \"Chrome\";\n            fullVersion = nAgt.substring(verOffset + 7);\n        }\n        // Safari\n        else if ((verOffset = nAgt.indexOf(\"Safari\")) !== -1) {\n            browserName = \"Safari\";\n            fullVersion = nAgt.substring(verOffset + 7);\n            if ((verOffset = nAgt.indexOf(\"Version\")) !== -1) {\n                fullVersion = nAgt.substring(verOffset + 8);\n            }\n        }\n        // Firefox\n        else if ((verOffset = nAgt.indexOf(\"Firefox\")) !== -1) {\n            browserName = \"Firefox\";\n            fullVersion = nAgt.substring(verOffset + 8);\n        }\n        // In most other browsers, \"name/version\" is at the end of userAgent\n        else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n            browserName = nAgt.substring(nameOffset, verOffset);\n            fullVersion = nAgt.substring(verOffset + 1);\n            if (browserName.toLowerCase() == browserName.toUpperCase()) {\n                browserName = navigator.appName;\n            }\n        }\n        // Trim the fullVersion string at semicolon/space if present\n        if ((ix = fullVersion.indexOf(\";\")) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        if ((ix = fullVersion.indexOf(\" \")) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        // Get major version\n        majorVersion = parseInt('' + fullVersion, 10);\n        if (isNaN(majorVersion)) {\n            fullVersion = '' + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n        // Return data\n        return [browserName, majorVersion];\n    }\n\n    //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n    // launch fullscreen\n    function launchFullScreen(elem) {\n        if (!elem.fullscreenElement && // alternative standard method\n            !elem.mozFullScreenElement && !elem.webkitFullscreenElement && !elem.msFullscreenElement) { // current working methods\n            var requestFullScreen = elem.requestFullscreen || elem.msRequestFullscreen || elem.mozRequestFullScreen || elem.webkitRequestFullscreen;\n            requestFullScreen.call(elem);\n        }\n    }\n\n    // change styles of fullscreen accordingly\n    function fullScreenStyles() {\n        if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement) {\n            obj.fullScreenBtn.checked = true;\n            //must apply other styles in container\n            // obj.container.setAttribute(\"style\", \"width: 100%; height: 100%;\");\n            obj.container.className = obj.container.className = 'px-video-container fullscreen';\n            obj.controls.className = \"px-video-controls js-fullscreen-controls\";\n            obj.captionsContainer.className = \"px-video-captions js-fullscreen-captions\";\n            obj.movie.setAttribute('width', '100%');\n            obj.movie.setAttribute('height', '100%');\n        } else {\n            obj.fullScreenBtn.checked = false;\n            // revert back to default styles\n            // obj.container.setAttribute(\"style\", \"width:\" + obj.movieWidth + \"px\");\n            obj.container.className = obj.container.className = 'px-video-container';\n            obj.controls.className = \"px-video-controls\";\n            obj.captionsContainer.className = \"px-video-captions\";\n            obj.movie.setAttribute('width', obj.movieWidth);\n            obj.movie.setAttribute('height', obj.movieHeight);\n        }\n    }\n\n    // exit fullscreen\n    function exitFullScreen() {\n        // get appropriate vendor prefix and then call it with respect to the document\n        var exitFullScreen = document.exitFullscreen || document.msExitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n        exitFullScreen.call(document);\n    }\n\n    // insert aria announce div\n    (function() {\n        var div = document.createElement('div');\n        div.id = 'px-video-aria-announce';\n        div.setAttribute('role', 'alert');\n        div.setAttribute('aria-atomic', 'true');\n        div.style.overflow = \"hidden\";\n        div.style.textIndent = '-999999px';\n        document.body.appendChild(div);\n    }());\n\n    // announce things to aria\n    function ariaAnnounce(msg) {\n        var announce = document.getElementById('px-video-aria-announce');\n        if (announce) {\n            announce.innerHTML = '<p>' + msg + '</p>';\n        }\n    }\n\n    // Global variable\n    var obj = {};\n\n    obj.arBrowserInfo = browserSniff();\n    obj.browserName = obj.arBrowserInfo[0];\n    obj.browserMajorVersion = obj.arBrowserInfo[1];\n\n    // If IE8, stop customization (use fallback)\n    // If IE9, stop customization (use native controls)\n    if (obj.browserName === \"IE\" && (obj.browserMajorVersion === 8 || obj.browserMajorVersion === 9)) {\n        return false;\n    }\n\n    // If smartphone or tablet, stop customization as video (and captions in latest devices) are handled natively\n    // obj.isSmartphoneOrTablet = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent);\n    // if (obj.isSmartphoneOrTablet) {\n    //     return false;\n    // }\n    obj.isSmartphoneOrTablet = /webOS|iPhone|iPad|iPod/i.test(navigator.userAgent);\n    if (obj.isSmartphoneOrTablet) {\n        return false;\n    }\n\n    // Set debug mode\n    if (typeof(options.debug) === 'undefined') {\n        options.debug = false;\n    }\n    obj.debug = options.debug;\n\n    // Output browser info to log if debug on\n    if (options.debug) {\n        console.log(obj.browserName + \" \" + obj.browserMajorVersion);\n    }\n\n    // Set up aria-label for Play button with the videoTitle option\n    if ((typeof(options.videoTitle) === 'undefined') || (options.videoTitle === \"\")) {\n        obj.playAriaLabel = \"Play\";\n    } else {\n        obj.playAriaLabel = \"Play video, \" + options.videoTitle;\n    }\n\n    // Get the container, video element, and controls container\n    obj.container = document.getElementById(options.videoId);\n    obj.movie = obj.container.getElementsByTagName('video')[0];\n    obj.controls = obj.container.getElementsByClassName('px-video-controls')[0];\n\n    // Remove native video controls\n    obj.movie.removeAttribute(\"controls\");\n\n    // Generate random number for ID/FOR attribute values for controls\n    obj.randomNum = Math.floor(Math.random() * (10000));\n\n    // Insert custom video controls\n    if (options.debug) {\n        console.log(\"Inserting custom video controls\");\n    }\n    obj.controls.innerHTML =\n        '<progress class=\"px-video-progress\" max=\"100\" value=\"0\"><span>0</span>% played</progress>' +\n        '<div class=\"controls-left\">' +\n        '<button class=\"px-video-restart\" title=\"' + GLOBAL_STRINGS['RESTART'] + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['RESTART'] + '</span></button>' +\n        '<button class=\"px-video-rewind\" title=\"' + GLOBAL_STRINGS['REWIND'] + '\"><span class=\"sr-only\">rewind <span class=\"px-seconds\">10</span> seconds</span></button>' +\n        '<button class=\"px-video-play\" aria-label=\"' + obj.playAriaLabel + '\" title=\"' + GLOBAL_STRINGS['PLAY'] + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['PLAY'] + '</span></button>' +\n        '<button class=\"px-video-pause hide\" title=\"' + GLOBAL_STRINGS['PAUSE'] + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['PAUSE'] + '</span></button>' +\n        '<button class=\"px-video-forward\" title=\"' + GLOBAL_STRINGS['FORWARD'] + '\"\"><span class=\"sr-only\">forward <span class=\"px-seconds\">10</span> seconds</span></button>' +\n        '</div>' +\n        '<div class=\"controls-right\">' +\n        '<div class=\"px-video-mute-btn-container\" title=\"' + GLOBAL_STRINGS['MUTE'] + '\">' +\n        '<input class=\"px-video-mute sr-only\" id=\"btnMute' + obj.randomNum + '\" type=\"checkbox\" />' +\n        '<label id=\"labelMute' + obj.randomNum + '\" for=\"btnMute' + obj.randomNum + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['MUTE'] + '</span></label>' +\n        '</div>' +\n        '<label for=\"volume' + obj.randomNum + '\" class=\"sr-only\">Volume:</label><input id=\"volume' + obj.randomNum + '\" class=\"px-video-volume\" type=\"range\" min=\"0\" max=\"10\" value=\"5\" />' +\n        '<div class=\"px-video-captions-btn-container hide\" title=\"' + GLOBAL_STRINGS['CAPTIONS'] + '\">' +\n        '<input class=\"px-video-btnCaptions sr-only\" id=\"btnCaptions' + obj.randomNum + '\" type=\"checkbox\" />' +\n        '<label for=\"btnCaptions' + obj.randomNum + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['CAPTIONS'] + '</span></label>' +\n        '</div>' +\n        '<div class=\"px-video-fullscreen-btn-container show-inline\" title=\"' + GLOBAL_STRINGS['TOGGLE_FULL_SCREEN'] + '\">' +\n        '<input class=\"px-video-btnFullScreen sr-only\" id=\"btnFullscreen' + obj.randomNum + '\" type=\"checkbox\" />' +\n        '<label for=\"btnFullscreen' + obj.randomNum + '\"><span class=\"sr-only\">' + GLOBAL_STRINGS['TOGGLE_FULL_SCREEN'] + '</span></label>' +\n        '</div>' +\n        '<div class=\"px-video-time\">' +\n        '<span class=\"sr-only\">time</span> <span class=\"px-video-duration\">00:00</span>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n\n    // // Adjust layout per width of video - container\n    // obj.movieWidth = obj.movie.width;\n    // if (obj.movieWidth < 360) {\n    //     obj.movieWidth = 360;\n    // }\n    // // obj.container.setAttribute(\"style\", \"width:\" + obj.movieWidth + \"px\");\n\n    // // Added for fullscreen reference\n    // obj.movieHeight = obj.movie.height;\n\n    // // Adjust layout per width of video - controls/mute offset\n    // obj.labelMute = document.getElementById(\"labelMute\" + obj.randomNum);\n    // obj.labelMuteOffset = obj.movieWidth - 390;\n    // if (obj.browserName === \"Firefox\") { // adjust for Firefox rendering\n    //     obj.labelMuteOffset = obj.labelMuteOffset - 10;\n    // }\n    // if (obj.labelMuteOffset < 0) {\n    //     obj.labelMuteOffset = 0;\n    // }\n    // obj.labelMute.setAttribute(\"style\", \"margin-left:\" + obj.labelMuteOffset + \"px\");\n\n    // Get URL of caption file if exists\n    var captionSrc = \"\",\n        kind,\n        children = obj.movie.childNodes;\n\n    for (var i = 0; i < children.length; i++) {\n        if (children[i].nodeName.toLowerCase() === 'track') {\n            kind = children[i].getAttribute('kind');\n            if (kind === 'captions') {\n                captionSrc = children[i].getAttribute('src');\n            }\n        }\n    }\n\n    // Record if caption file exists or not\n    obj.captionExists = true;\n    if (captionSrc === \"\") {\n        obj.captionExists = false;\n        if (options.debug) {\n            console.log(\"No caption track found.\");\n        }\n    } else {\n        if (options.debug) {\n            console.log(\"Caption track found; URI: \" + captionSrc);\n        }\n    }\n\n    // Set captions on/off - on by default\n    if (typeof(options.captionsOnDefault) === 'undefined') {\n        options.captionsOnDefault = true;\n    }\n    obj.isCaptionDefault = options.captionsOnDefault;\n\n    // Number of seconds for rewind and forward buttons\n    if (typeof(options.seekInterval) === 'undefined') {\n        options.seekInterval = 10;\n    }\n    obj.seekInterval = options.seekInterval;\n\n    // Get the elements for the controls\n    obj.video = obj.container.getElementsByTagName('video')[0];\n    obj.btnPlay = obj.container.getElementsByClassName('px-video-play')[0];\n    obj.btnPause = obj.container.getElementsByClassName('px-video-pause')[0];\n    obj.btnRestart = obj.container.getElementsByClassName('px-video-restart')[0];\n    obj.btnRewind = obj.container.getElementsByClassName('px-video-rewind')[0];\n    obj.btnForward = obj.container.getElementsByClassName('px-video-forward')[0];\n    obj.btnVolume = obj.container.getElementsByClassName('px-video-volume')[0];\n    obj.btnMute = obj.container.getElementsByClassName('px-video-mute')[0];\n    obj.progressBar = obj.container.getElementsByClassName('px-video-progress')[0];\n    obj.progressBarSpan = obj.progressBar.getElementsByTagName('span')[0];\n    obj.captionsContainer = obj.container.getElementsByClassName('px-video-captions')[0];\n    obj.captionsBtn = obj.container.getElementsByClassName('px-video-btnCaptions')[0];\n    obj.captionsBtnContainer = obj.container.getElementsByClassName('px-video-captions-btn-container')[0];\n    obj.duration = obj.container.getElementsByClassName('px-video-duration')[0];\n    obj.txtSeconds = obj.container.getElementsByClassName('px-seconds');\n    obj.fullScreenBtn = obj.container.getElementsByClassName('px-video-btnFullScreen')[0];\n    obj.fullScreenBtnContainer = obj.container.getElementsByClassName('px-video-fullscreen-btn-container')[0];\n\n    // Update number of seconds in rewind and fast forward buttons\n    obj.txtSeconds[0].innerHTML = obj.seekInterval;\n    obj.txtSeconds[1].innerHTML = obj.seekInterval;\n\n    // Determine if HTML5 textTracks is supported (for captions)\n    obj.isTextTracks = false;\n    if (obj.movie.textTracks) {\n        obj.isTextTracks = true;\n    }\n\n\n\n    obj.movie.addEventListener(\"ended\", resetVideo, false);\n\n    function resetVideo() {\n        // resets the video element by resetting the source\n        //obj.video.src = obj.video.src;\n        obj.video.src = obj.container.getElementsByTagName('source')[0].getAttribute(\"src\");\n        if (!obj.isTextTracks) {\n            obj.subcount = 0;\n        }\n        obj.movie.currentTime = 0;\n        obj.movie.pause();\n        obj.btnPlay.className = \"px-video-play px-video-show-inline\";\n        obj.btnPause.className = \"px-video-pause hide\";\n\n    }\n\n\n    // Play\n    obj.btnPlay.addEventListener('click', function() {\n        obj.movie.play();\n        obj.btnPlay.className = \"px-video-play hide\";\n        obj.btnPause.className = \"px-video-pause px-video-show-inline\";\n        obj.btnPause.focus();\n    }, false);\n\n    // Play by in-text controlls\n    if ($(window).width() > 991) {\n        // Disable on mobile\n        $('.js-play-video').click(function(e) {\n            var $target = $(e.target).data('target');\n            console.log($target);\n            var which_container = document.getElementById($target);\n            var which_video = which_container.getElementsByTagName('video')[0];\n            var which_btnPlay = which_container.getElementsByClassName('px-video-play')[0];\n            var which_btnPause = which_container.getElementsByClassName('px-video-pause')[0];\n            which_video.play();\n            which_btnPlay.className = \"px-video-play hide\";\n            which_btnPause.className = \"px-video-pause px-video-show-inline\";\n\n        });\n    };\n\n    // Pause\n    obj.btnPause.addEventListener('click', function() {\n        obj.movie.pause();\n        obj.btnPlay.className = \"px-video-play px-video-show-inline\";\n        obj.btnPause.className = \"px-video-pause hide\";\n        obj.btnPlay.focus();\n    }, false);\n\n    // Restart\n    obj.btnRestart.addEventListener('click', function() {\n        // Move to beginning\n        obj.movie.currentTime = 0;\n\n        // Special handling for \"manual\" captions\n        if (!obj.isTextTracks) {\n            obj.subcount = 0;\n        }\n\n        // Play and ensure the play button is in correct state\n        obj.movie.play();\n        obj.btnPlay.className = \"px-video-play hide\";\n        obj.btnPause.className = \"px-video-pause px-video-show-inline\";\n\n\n    }, false);\n\n    // Rewind\n    obj.btnRewind.addEventListener('click', function() {\n        var targetTime = obj.movie.currentTime - obj.seekInterval;\n        if (targetTime < 0) {\n            obj.movie.currentTime = 0;\n        } else {\n            obj.movie.currentTime = targetTime;\n        }\n        // Special handling for \"manual\" captions\n        if (!obj.isTextTracks) {\n            adjustManualCaptions(obj);\n        }\n\n        // we do not need to announce negative times\n        var announcePos = Math.round(targetTime) > 0 ? Math.round(targetTime) : 0;\n        var announceMsg = 'rewind to ' + announcePos + ' seconds';\n        ariaAnnounce(announceMsg);\n    }, false);\n\n    // Fast forward\n    obj.btnForward.addEventListener('click', function() {\n        var targetTime = obj.movie.currentTime + obj.seekInterval;\n        if (targetTime > obj.movie.duration) {\n            obj.movie.currentTime = obj.movie.duration;\n        } else {\n            obj.movie.currentTime = targetTime;\n        }\n        // Special handling for \"manual\" captions\n        if (!obj.isTextTracks) {\n            adjustManualCaptions(obj);\n        }\n\n        var announceMsg = 'forward to ' + Math.round(targetTime) + ' seconds';\n        ariaAnnounce(announceMsg);\n    }, false);\n\n    // Get the HTML5 range input element and append audio volume adjustment on change\n    obj.btnVolume.addEventListener('change', function() {\n        obj.movie.volume = parseFloat(this.value / 10);\n    }, false);\n\n    // Mute\n    obj.btnMute.addEventListener('click', function() {\n        if (obj.movie.muted === true) {\n            obj.movie.muted = false;\n        } else {\n            obj.movie.muted = true;\n        }\n    }, false);\n\n    obj.btnMute.onkeypress = function(e) {\n        if (e.keyCode == 13) { // enter key\n            e.preventDefault();\n            if (this.checked == true) {\n                this.checked = false;\n            } else {\n                this.checked = true;\n            }\n            if (obj.movie.muted === true) {\n                obj.movie.muted = false;\n            } else {\n                obj.movie.muted = true;\n            }\n        }\n    }\n\n    // Duration\n    obj.movie.addEventListener(\"timeupdate\", function() {\n        obj.secs = parseInt(obj.movie.currentTime % 60);\n        obj.mins = parseInt((obj.movie.currentTime / 60) % 60);\n\n        // Ensure it's two digits. For example, 03 rather than 3.\n        obj.secs = (\"0\" + obj.secs).slice(-2);\n        obj.mins = (\"0\" + obj.mins).slice(-2);\n\n        // Render\n        obj.duration.innerHTML = obj.mins + ':' + obj.secs;\n    }, false);\n\n    // Progress bar\n    obj.movie.addEventListener('timeupdate', function() {\n        obj.percent = (100 / obj.movie.duration) * obj.movie.currentTime;\n        if (obj.percent > 0) {\n            obj.progressBar.value = obj.percent;\n            obj.progressBarSpan.innerHTML = obj.percent;\n        }\n    }, false);\n\n    // Skip when clicking progress bar\n    obj.progressBar.addEventListener('click', function(e) {\n        // obj.pos = (e.pageX - this.offsetLeft) / this.offsetWidth;\n        obj.pos = (e.offsetX) / this.offsetWidth;\n        obj.movie.currentTime = obj.pos * obj.movie.duration;\n\n        // Special handling for \"manual\" captions\n        if (!obj.isTextTracks) {\n            adjustManualCaptions(obj);\n        }\n    });\n\n    // Toggle display of fullscreen button\n    obj.fullScreenBtn.addEventListener('click', function() {\n        if (this.checked) {\n            launchFullScreen(obj.container);\n        } else {\n            exitFullScreen();\n        }\n    }, false);\n    obj.fullScreenBtn.onkeypress = function(e) {\n        if (e.keyCode == 13) { // enter key\n            e.preventDefault();\n            if (this.checked == true) {\n                this.checked = false;\n                exitFullScreen();\n            } else {\n                this.checked = true;\n                launchFullScreen(obj.container);\n            }\n        }\n    }\n\n    // Clear captions at end of video\n    obj.movie.addEventListener('ended', function() {\n        obj.captionsContainer.innerHTML = \"\";\n    });\n\n    // ***\n    // Captions\n    // ***\n\n    // Toggle display of captions via captions button\n    obj.captionsBtn.addEventListener('click', function() {\n        if (this.checked) {\n            obj.captionsContainer.className = \"px-video-captions show-inline\";\n        } else {\n            obj.captionsContainer.className = \"px-video-captions hide\";\n        }\n        // if fullscreen add fullscreen class\n        if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement) {\n            var currClass = obj.captionsContainer.className;\n            obj.captionsContainer.className = currClass + ' js-fullscreen-captions';\n        }\n    }, false);\n    obj.captionsBtn.onkeypress = function(e) {\n        if (e.keyCode == 13) { // enter key\n            e.preventDefault();\n            if (this.checked == true) {\n                this.checked = false;\n            } else {\n                this.checked = true;\n            }\n            if (this.checked) {\n                obj.captionsContainer.className = \"px-video-captions show-inline\";\n            } else {\n                obj.captionsContainer.className = \"px-video-captions hide\";\n            }\n        }\n    }\n\n    // If no caption file exists, hide container for caption text\n    if (!obj.captionExists) {\n        obj.captionsContainer.className = \"px-video-captions hide\";\n    }\n\n    // If caption file exists, process captions\n    else {\n\n        // Can't use native captioning in the follow browsers:\n        if ((obj.browserName === \"IE\" && obj.browserMajorVersion === 10) ||\n            (obj.browserName === \"IE\" && obj.browserMajorVersion === 11) ||\n            (obj.browserName === \"Firefox\" && obj.browserMajorVersion >= 31) ||\n            (obj.browserName === \"Chrome\" && obj.browserMajorVersion === 43) ||\n            (obj.browserName === \"Safari\" && obj.browserMajorVersion >= 7)) {\n            if (options.debug) {\n                console.log(\"Detected browser unable to play HTML5 captions; using custom captions\");\n            }\n            // set to false so skips to 'manual' captioning\n            obj.isTextTracks = false;\n\n            // turn off native caption rendering to avoid double captions [doesn't work in Safari 7; see patch below]\n            var track = {};\n            var tracks = obj.movie.textTracks;\n            for (var j = 0; j < tracks.length; j++) {\n                track = obj.movie.textTracks[j];\n                track.mode = \"hidden\";\n            }\n        }\n\n        // Rendering caption tracks - native support required - http://caniuse.com/webvtt\n        if (obj.isTextTracks) {\n            if (options.debug) {\n                console.log(\"textTracks supported\");\n            }\n            showCaptionContainerAndButton(obj);\n\n            var track = {};\n            var tracks = obj.movie.textTracks;\n            for (var j = 0; j < tracks.length; j++) {\n                track = obj.movie.textTracks[j];\n                track.mode = \"hidden\";\n                if (track.kind === \"captions\") {\n                    track.addEventListener(\"cuechange\", function() {\n                        if (this.activeCues[0]) {\n                            if (this.activeCues[0].hasOwnProperty(\"text\") || this.activeCues[0].text !== \"\") {\n                                obj.captionsContainer.innerHTML = this.activeCues[0].text;\n                            }\n                        }\n                    }, false);\n                }\n            }\n        }\n        // Caption tracks not natively supported\n        else {\n            if (options.debug) {\n                console.log(\"textTracks not supported so rendering captions 'manually'\");\n            }\n            showCaptionContainerAndButton(obj);\n\n            // Render captions from array at appropriate time\n            obj.currentCaption = '';\n            obj.subcount = 0;\n            obj.captions = [];\n\n            obj.movie.addEventListener('timeupdate', function() {\n                // Check if the next caption is in the current time range\n                if (obj.movie.currentTime.toFixed(1) > video_timecode_min(obj.captions[obj.subcount][0]) &&\n                    obj.movie.currentTime.toFixed(1) < video_timecode_max(obj.captions[obj.subcount][0])) {\n                    obj.currentCaption = obj.captions[obj.subcount][1];\n                }\n                // Is there a next timecode?\n                if (obj.movie.currentTime.toFixed(1) > video_timecode_max(obj.captions[obj.subcount][0]) &&\n                    obj.subcount < (obj.captions.length - 1)) {\n                    obj.subcount++;\n                }\n                // Render the caption\n                obj.captionsContainer.innerHTML = obj.currentCaption;\n            }, false);\n\n            if (captionSrc != \"\") {\n                // Create XMLHttpRequest object\n                var xhr;\n                if (window.XMLHttpRequest) {\n                    xhr = new XMLHttpRequest();\n                } else if (window.ActiveXObject) { // IE8\n                    xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                }\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 200) {\n                            if (options.debug) {\n                                console.log(\"xhr = 200\");\n                            }\n\n                            obj.captions = [];\n                            var records = [],\n                                record,\n                                req = xhr.responseText;\n                            records = req.split('\\n\\n');\n                            for (var r = 0; r < records.length; r++) {\n                                record = records[r];\n                                obj.captions[r] = [];\n                                obj.captions[r] = record.split('\\n');\n                            }\n                            // Remove first element (\"VTT\")\n                            obj.captions.shift();\n\n                            if (options.debug) {\n                                console.log('Successfully loaded the caption file via ajax.');\n                            }\n                        } else {\n                            if (options.debug) {\n                                console.log('There was a problem loading the caption file via ajax.');\n                            }\n                        }\n                    }\n                }\n                xhr.open(\"get\", captionSrc, true);\n                xhr.send();\n            }\n        }\n\n        // If Safari 7, removing track from DOM [see 'turn off native caption rendering' above]\n        if (obj.browserName === \"Safari\" && obj.browserMajorVersion === 7) {\n            console.log(\"Safari 7 detected; removing track from DOM\");\n            var tracks = obj.movie.getElementsByTagName(\"track\");\n            obj.movie.removeChild(tracks[0]);\n        }\n    }\n\n    document.addEventListener(\"fullscreenchange\", function() {\n        fullScreenStyles();\n    }, false);\n\n    document.addEventListener(\"mozfullscreenchange\", function() {\n        fullScreenStyles();\n    }, false);\n\n    document.addEventListener(\"webkitfullscreenchange\", function() {\n        fullScreenStyles();\n    }, false);\n\n    document.addEventListener(\"MSFullscreenChange\", function() {\n        fullScreenStyles();\n    }, false);\n};\n\nnew InitPxVideo({\n    \"videoId\": \"drLukas\",\n    \"captionsOnDefault\": false,\n    \"seekInterval\": 10,\n    \"videoTitle\": \"Dr Lukas\",\n    // \"debug\": true\n});\n\nnew InitPxVideo({\n    \"videoId\": \"governor\",\n    \"captionsOnDefault\": false,\n    \"seekInterval\": 20,\n    \"videoTitle\": \"Governor Baker\",\n    // \"debug\": true\n});\n\n\nnew InitPxVideo({\n    \"videoId\": \"sarahWakeman\",\n    \"captionsOnDefault\": false,\n    \"seekInterval\": 10,\n    \"videoTitle\": \"Sarah Wakeman\",\n    \"debug\": true\n});\n\nnew InitPxVideo({\n    \"videoId\": \"cotto\",\n    \"captionsOnDefault\": false,\n    \"seekInterval\": 10,\n    \"videoTitle\": \"Cotto\",\n    // \"debug\": true\n});\n\nnew InitPxVideo({\n    \"videoId\": \"sue\",\n    \"captionsOnDefault\": false,\n    \"seekInterval\": 10,\n    \"videoTitle\": \"Sue\",\n    // \"debug\": true\n});\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#binaryMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/rate_5yr_odc.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([8600])\n        .translate([280, 360]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var colors_5yr = [\"#d3d3d3\", \"#9ecae1\", \"#6baed6\", \"#2171b5\", \"#084594\"];\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313']);\n        .range(colors_5yr);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(function(d) {\n                if (data.key == 2005) {\n                    return '2001 to 2005';\n                } else if (data.key == 2010) {\n                    return '2006 to 2010';\n                } else if (data.key == 2015) {\n                    return '2011 to 2015';\n                }\n            })\n            .attr('class', 'vis-title')\n            .style('padding-bottom', \"3%\");\n\n\n\n\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n\t\treturn d.properties.TOWN.toLowerCase()+' bsasmap';\n            })\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] > 0) {\n                    town_value = d3.format(\".1f\")(data.values[geoData[0].properties.TOWN]);\n                } else { town_value = \"0\"; }\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \"<br>\" + town_value) + \" per 100,000\";\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n\t\td3.selectAll('path.bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313'])\n        .range(colors_5yr);\n    opChgScale.domainStrings = function() {\n        return (['0', '>0-2.1', '>2.1-6.1', '>6.1-17.1', '>17.1']);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'binaryMaps_legend', 'Rate per 100,000 People');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n\n        var legendHeight = 60,\n            legendWidth = '90%';\n\n\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        // legendData.push({\n        //     d: -9999,\n        //     r: '#f1f1f1',\n        //     s: 'N/A*'\n        // });\n        for (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n        var unitWidth = 100 / legendData.length;\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", legendHeight / 3)\n            .attr(\"width\", function(d, i) {\n                return unitWidth + '%';\n            })\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + (unitWidth / 2) + '%';\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-binary-map').click(function() {\n        var date = $(this).data('date');\n        $('#binaryMaps').attr('data-active-date', date);\n        $('.js-toggle-binary-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\nconsole.log(\"file loaded - binary\")\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/maps_susbtance_data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([7500])\n        .translate([280, 330]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([-0.1, 0.01, 0.14, 0.24, 0.33, 0.46, 1.1])\n        .range(['#d1d1d1','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450']);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n    //console.log(geo.features)\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n        return d.properties.TOWN.toLowerCase() + ' bsasmap';\n            })\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] >= 0) {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    //console.log(data.values[geoData[0].properties.TOWN])\n            town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n                //console.log(geoData[0].properties);\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n        d3.selectAll('path.bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(['#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-14%', '>14-24%', '>24-33%', '>33-46%', '>46-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({\n            d: -9999,\n            r: '#d1d1d1',\n        s: 'N/A*'\n        });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n            .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n                return (i * (100 / legendData.length)) + \"%\";\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return ((i * (100 / legendData.length)) + 7) + \"%\";\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-treatment-map').click(function() {\n        var date = $(this).data('date');\n        $('#treatmentMaps').attr('data-active-date', date);\n        $('.js-toggle-treatment-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n    //var lines_hit_area;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    //var yScale = d3.scale.sqrt();\r\n    var yScale = d3.scale.linear();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", (dimensions.width - dimensions.margin.left) / 2)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -(dimensions.height / 2))\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid-related Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n\r\n    //defines a function to be used to append the title to the tooltip.  you can set how you want it to display here.\r\n    //var maketip = function(d) {\r\n    //    var tip = '<p class=\"tip3\">' + d.name + '<p class=\"tip1\">' + NumbType(d.value) + '</p> <p class=\"tip3\">' + formatDate(d.date) + '</p>';\r\n    //    return tip;\r\n    //}\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\").append(\"div\").attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n    var focus = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"focus\")\r\n        .classed(\"hidden\", true);\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(0, 65);\r\n        //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        // var lines_hit_area = groups.selectAll(\"path\")\r\n        //     .data(function(d) { // because there's a group with data already...\r\n        //         return [d.rates]; // it has to be an array for the line function\r\n        //     })\r\n        //     .enter()\r\n        //     .append(\"path\")\r\n        //     .attr(\"class\", \"line-death\")\r\n        //     .attr(\"style\", \"stroke:transparent;stroke-width:10px\")\r\n        //     .style(\"fill\", \"none\");\r\n\r\n            d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if (dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom - dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 700 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", (dimensions.width - dimensions.margin.left) / 2);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if (dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n\r\n       // lines_hit_area.attr(\"d\", line_death);\r\n\r\n        focus.append(\"circle\")\r\n            .style(\"stroke-width\", 1)\r\n            .attr(\"r\", 6)\r\n            .attr('pointer-events', 'none');\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    function mouseoutFunc() {\r\n        d3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n        d3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\r\n        tooltip_death.classed(\"hidden\", true); // this sets it to invisible!\r\n        focus.classed(\"hidden\", true);\r\n    }\r\n\r\n    function mouseoverFunc(d, i) {\r\n\r\n        d3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n        d3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\r\n        d3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1];\r\n        var y1 = yScale.invert(y0);\r\n        var percentVal = d3.format(\".1f\")(y1)\r\n\r\n        tooltip_death.classed(\"hidden\", false)\r\n            .html(percentVal);\r\n        focus.classed(\"hidden\", false);\r\n    }\r\n\r\n    var coordinates = [0, 0];\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1]\r\n        var y1 = yScale.invert(y0);\r\n        var x1 = xScale.invert(x0)\r\n        //console.log(x1)\r\n\r\n        var percentVal = d3.format(\".1f\")(y1);\r\n\r\n        focus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n        tooltip_death\r\n            .style(\"top\", (d3.event.offsetY + 20) + \"px\")\r\n            .style(\"left\", (d3.event.offsetX) + \"px\")\r\n            .html(percentVal);\r\n    }\r\n\r\n    // function bindEvents() {\r\n    //     d3.selectAll(\"g.lines-death\")\r\n    //         .on(\"mouseover\", mouseoverFunc)\r\n    //         .on(\"mouseout\", mouseoutFunc)\r\n    //         .on(\"mousemove\", mousemoveFunc);\r\n\r\n    //     function mouseoutFunc() {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n    //         tooltip_death.classed(\"hidden\", true);\r\n    //     }\r\n\r\n    //     function mouseoverFunc(d, i) {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n    //         d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n    //         tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n    //     }\r\n\r\n    //     var coordinates = [0, 0];\r\n\r\n    //     function mousemoveFunc(d) {\r\n    //         coordinates = d3.mouse(this);\r\n\r\n    //         var x = coordinates[0];\r\n    //         var y = coordinates[1];\r\n    //         tooltip_death\r\n    //             .style(\"top\", y + \"px\")\r\n    //             .style(\"left\", x + \"px\")\r\n    //             .style('position', 'absolute')\r\n    //             .style('z-index', 1001);\r\n    //     }\r\n    // }\r\n\r\n})();","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\n\n    var chartData = [{\n        \"date\": new Date(\"01/01/2014\"),\n        \"FentanylHeroin\": \"0.19\",\n        \"Fentanyl\": \"0.22\",\n        \"Heroin\": \"0.41\",\n        \"Methadone\": \"0.10\"\n    }, {\n        \"date\": new Date(\"04/01/2014\"),\n        \"FentanylHeroin\": \"0.18\",\n        \"Fentanyl\": \"0.19\",\n        \"Heroin\": \"0.49\",\n        \"Methadone\": \"0.07\"\n    }, {\n        \"date\": new Date(\"07/01/2014\"),\n        \"FentanylHeroin\": \"0.14\",\n        \"Fentanyl\": \"0.14\",\n        \"Heroin\": \"0.53\",\n        \"Methadone\": \"0.10\"\n    }, {\n        \"date\": new Date(\"10/01/2014\"),\n        \"FentanylHeroin\": \"0.22\",\n        \"Fentanyl\": \"0.27\",\n        \"Heroin\": \"0.35\",\n        \"Methadone\": \"0.06\"\n    }, {\n        \"date\": new Date(\"01/01/2015\"),\n        \"FentanylHeroin\": \"0.19\",\n        \"Fentanyl\": \"0.40\",\n        \"Heroin\": \"0.30\",\n        \"Methadone\": \"0.04\"\n    }, {\n        \"date\": new Date(\"04/01/2015\"),\n        \"FentanylHeroin\": \"0.24\",\n        \"Fentanyl\": \"0.38\",\n        \"Heroin\": \"0.29\",\n        \"Methadone\": \"0.05\"\n    }, {\n        \"date\": new Date(\"07/01/2015\"),\n        \"FentanylHeroin\": \"0.19\",\n        \"Fentanyl\": \"0.40\",\n        \"Heroin\": \"0.30\",\n        \"Methadone\": \"0.06\"\n    }, {\n        \"date\": new Date(\"10/01/2015\"),\n        \"FentanylHeroin\": \"0.22\",\n        \"Fentanyl\": \"0.43\",\n        \"Heroin\": \"0.24\",\n        \"Methadone\": \"0.05\"\n    }, {\n        \"date\": new Date(\"01/01/2016\"),\n        \"FentanylHeroin\": \"0.15\",\n        \"Fentanyl\": \"0.50\",\n        \"Heroin\": \"0.17\",\n        \"Methadone\": \"0.04\"\n    }];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter(date) {\n        var date2 = new Date();\n        date2.setMonth(date.getMonth() - 10);\n        var q = Math.ceil((date2.getMonth()) / 3);\n        return \"Q\" + q;\n    }\n\n    var seriesColors = [\"#333333\", \"#b71c1c\", \"#0071bc\", \"#333333\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n        top: 10, // space for the legend\n        right: 15,\n        bottom: 50,\n        left: 42\n    };\n\n    var wrapper_width = 540;\n    var wrapper_height = 400;\n    var width = wrapper_width - margin.left - margin.right;\n    var height = wrapper_height - margin.top - margin.bottom;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\")\n        .ticks(d3.time.months, 3)\n        .tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n        .scale(x)\n        .ticks(d3.time.years, 1)\n        .tickFormat(yearformat)\n        .tickSize(3, 0)\n        .tickPadding(1)\n        .orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(formatPercent)\n        .ticks(5)\n        .tickSize(3, 0)\n        .tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n        .x(function(d) {\n            return x(d.label);\n        })\n        .y(function(d) {\n            return y(d.value);\n        });\n\n    var $svg = d3.select(document.querySelector(rootSelector))\n        .append(\"svg\");\n    var $lines_fent = $svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n        return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n        return {\n            name: name,\n            values: chartData.map(function(d) {\n                return {\n                    name: name,\n                    label: d[xLabel],\n                    value: +d[name]\n                };\n            })\n        };\n    });\n\n\n    x.domain(chartData.map(function(d) {\n        return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n        return d.date;\n    }));\n\n    y.domain([\n        d3.min(seriesData, function(c) {\n            return d3.min(c.values, function(d) {\n                //return d.value;\n                return 0;\n            });\n        }),\n        d3.max(seriesData, function(c) {\n            return d3.max(c.values, function(d) {\n                return d.value;\n                //return 0.6\n            });\n        })\n    ]);\n\n    var x_axis = $lines_fent.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis_fent);\n\n    var x_axis_lines = x_axis.append(\"path\")\n        .attr(\"class\", \"line\")\n        .style(\"stroke-width\", \"1.5px\")\n        .call(xAxis_fent);\n\n    var x_axis2 = $lines_fent.append(\"g\")\n        .attr(\"class\", \"vis-axis\")\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n        .call(xAxis2_fent);\n\n    var x_axis2_text = x_axis2\n        .append(\"text\")\n        .attr(\"x\", (width - margin.left) / 2)\n        .attr(\"y\", margin.bottom - 32)\n        .attr(\"dy\", \"1em\")\n        .attr(\"class\", \"vis-x-axis-label\")\n        .text(\"Quarter\");\n\n\n    var y_axis = $lines_fent.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\")\n        .call(yAxis_fent)\n        //.append(\"tspan\")\n        .append(\"text\")\n        .attr(\"x\", -(height / 2))\n        .attr(\"y\", -44)\n        .attr(\"dy\", \"1em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Percent of Opioid-related Deaths\");\n    //.html(\"<sup>1</sup>\");\n\n    var series = $lines_fent.selectAll(\".series\")\n        .data(seriesData)\n        .enter().append(\"g\")\n        .attr(\"class\", \"seriesData\");\n\n\n    var $lines = series.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", function(d) {\n            return line(d.values);\n        })\n        .style(\"stroke\", function(d) {\n            return color(d.name);\n        })\n        .style(\"stroke-width\", function(d) {\n            return lineStroke(d.name);\n        })\n        .style(\"stroke-dasharray\", function(d) {\n            return lineDash(d.name);\n        })\n        .style(\"fill\", \"none\");\n\n\n    var $lines_hit_area = series.append(\"path\")\n        .attr(\"class\", \"hit-area-ext\")\n        .attr(\"d\", function(d) {\n            return line(d.values);\n        })\n        .attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n        .style(\"fill\", \"none\");\n\n\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\n    //  .attr(\"class\", \"vis-data-label\")\n    //  .attr(\"x\", width + 5)\n    //  .attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    //  .attr(\"dy\", \"1em\")\n    //  .text(\"Fentanyl & Heroin\");\n\n    // var x_axis_label_m = $lines_fent.append(\"text\")\n    //  .attr(\"class\", \"vis-data-label\")\n    //  .attr(\"x\", width + 5)\n    //  .attr(\"y\", y(chartData[8].Methadone) - 7)\n    //  .attr(\"dy\", \"1em\")\n    //  .text(\"Methadone\");\n\n    // var x_axis_label_h = $lines_fent.append(\"text\")\n    //  .attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Heroin\");\n\n    // var x_axis_label_f = $lines_fent.append(\"text\")\n    //  .attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n        .style(\"stroke-width\", 1)\n        .attr(\"r\", 6)\n        .attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n        .on(\"mouseover\", mouseoverFunc)\n        .on(\"mouseout\", mouseoutFunc)\n        .on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n        d3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n        d3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n        tooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n        focus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n        d3.selectAll(\"path.line\").classed(\"unfocused\", true);\n        d3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n        // below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n        //         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n        //             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n        //         }\n\n        d3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n        //d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n        var x0 = d3.mouse(this)[0];\n        var y0 = d3.mouse(this)[1]\n        var y1 = y.invert(y0);\n        var percentVal = d3.format(\".0%\")(y1)\n\n        tooltipFent.classed(\"hidden\", false)\n            .html(percentVal);\n        //console.log(d.rates[i]);\n        //console.log(d3.select(this).select(\"path.point\"));\n        focus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n        //console.log(\"events\", window.event, d3.event);\n        var x0 = d3.mouse(this)[0];\n        var y0 = d3.mouse(this)[1]\n        var y1 = y.invert(y0);\n        var percentVal = d3.format(\".0%\")(y1);\n\n        focus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n        tooltipFent\n            .style(\"top\", (d3.event.pageY - 45) + \"px\")\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .html(percentVal);\n    }\n\n\n\n    function render() {\n        updateWidth(rootNode.clientWidth);\n\n        x.rangePoints([0, width]);\n        x2.rangePoints([0, width]);\n        y.range([height, 0]);\n        xAxis_fent.scale(x);\n        xAxis2_fent.scale(x);\n        yAxis_fent.scale(y);\n        // update lines\n        line.x(function(d) {\n                return x(d.label);\n            })\n            .y(function(d) {\n                return y(d.value);\n            });\n\n        x_axis\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis_fent);\n\n        x_axis2\n            .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n            .call(xAxis2_fent);\n\n        x_axis2_text\n            .attr(\"x\", (width - margin.left) / 2)\n            .attr(\"y\", margin.bottom - 32);\n\n\n        y_axis.call(yAxis_fent);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n\n        // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\n\n        // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\n\n        // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\n\n        // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\n\n        $lines.attr(\"d\", function(d) {\n            return line(d.values);\n        });\n\n        $lines_hit_area.attr(\"d\", function(d) {\n            return line(d.values);\n        });\n\n        $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\" + (width - margin.right * 10) + \",0)\");\n    }\n\n    function updateWidth(componentWidth) {\n        wrapper_width = componentWidth;\n        width = wrapper_width - margin.left - margin.right;\n        height = wrapper_height - margin.top - margin.bottom;\n    }\n\n    var $legend = $svg.append(\"g\");\n    var $item = $legend.append(\"g\");\n\n    function renderLegend() {\n\n\n        var legendItems = [\n            \"FentanylHeroin\",\n            \"Fentanyl\",\n            \"Heroin\",\n            \"Methadone\"\n        ];\n\n        var footenote_19 = \"<a href='#footnote-19' class='page-scroll' aria-describedby='footnote-label><span class='sr-only>see footnote</span><sup>19</sup></a>\";\n        var legendItemsTranslate = [\n            \"Both Fentanyl & Heroin\",\n            \"Only Fentanyl\",\n            \"Only Heroin\",\n            \"Only Methadone\"\n        ];\n        $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\" + (width - (margin.right +100)) + \",0)\");\n        var lineHeight = 15;\n        // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n        // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n        // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n        legendItems.forEach(function(item, i) {\n            $item = $legend.append(\"g\")\n                .attr(\"class\", \"legend-item-\" + item)\n                .attr(\"transform\", \"translate(0,\" + (i * lineHeight) + \")\");\n\n            $item.append(\"svg:line\")\n                .attr(\"class\", \"legend-item-\" + item)\n                .attr(\"x1\", 0)\n                .attr(\"y1\", 5)\n                .attr(\"x2\", 30)\n                .attr(\"y2\", 5)\n                .style(\"stroke\", seriesColors[i])\n                .style(\"stroke-dasharray\", seriesLineDash[i])\n                .style(\"stroke-width\", seriesLineStrokes[i]);\n\n            $item.append(\"text\")\n                .attr(\"class\", \"legend-item-\" + item)\n                .attr(\"x\", 40)\n                .attr(\"y\", 10)\n                .html(legendItemsTranslate[i]);\n                // .append(footenote_19);\n        });\n    }\n\n\n    render();\n    renderLegend();\n\n    window.addEventListener('resize', render);\n    //window.addEventListener('resize', renderLegend);\n\n\n\n})();\n","$(document).ready(function() {\n    var prescription = [{\n            \"Yes\": 83,\n            \"No\": 17\n        }, {\n            \"Yes\": 57,\n            \"No\": 43\n        }, {\n            \"Yes\": 50,\n            \"No\": 50\n        }, {\n            \"Yes\": 37,\n            \"No\": 63\n        }],\n\n        heroin = [{\n            \"Yes\": 65,\n            \"No\": 35\n        }, {\n            \"Yes\": 28,\n            \"No\": 72\n        }, {\n            \"Yes\": 20,\n            \"No\": 80\n        }, {\n            \"Yes\": 13,\n            \"No\": 87\n        }],\n\n        fentanyl = [{\n            \"Yes\": 68,\n            \"No\": 32\n        }, {\n            \"Yes\": 30,\n            \"No\": 70\n        }, {\n            \"Yes\": 22,\n            \"No\": 78\n        }, {\n            \"Yes\": 17,\n            \"No\": 83\n        }],\n\n        both = [{\n            \"Yes\": 64,\n            \"No\": 36\n        }, {\n            \"Yes\": 24,\n            \"No\": 76\n        }, {\n            \"Yes\": 15,\n            \"No\": 85\n        }, {\n            \"Yes\": 9,\n            \"No\": 91\n        }],\n\n        methadone = [{\n            \"Yes\": 76,\n            \"No\": 24\n        }, {\n            \"Yes\": 46,\n            \"No\": 54\n        }, {\n            \"Yes\": 41,\n            \"No\": 59\n        }, {\n            \"Yes\": 27,\n            \"No\": 73\n        }],\n\n        buprenorphine = [{\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }],\n\n        dataset = [{\n                data: [{\n                    count: 867,\n                    name: 'Heroin',\n                    alias: heroin\n                }],\n                name: 'Heroin'\n            }, {\n                data: [{\n                    count: 288,\n                    name: 'Fentanyl',\n                    alias: fentanyl\n                }],\n                name: 'Fentanyl'\n            }, {\n                data: [{\n                    count: 249,\n                    name: 'both Fentanyl & Heroin',\n                    alias: both\n                }],\n                name: 'Fentanyl & Heroin'\n            }, {\n                data: [{\n                    count: 154,\n                    name: 'Prescription Opioids',\n                    alias: prescription\n                }],\n                name: 'Prescription Opioids'\n            }, {\n                data: [{\n                    count: 84,\n                    name: 'Methadone',\n                    alias: methadone\n                }],\n                name: 'Methadone'\n            },\n            //  {\n            //     data: [{\n            //         count: 15,\n            //         name: 'Buprenorphine'\n            //     }],\n            //     name: 'Buprenorphine'\n            // }\n\n        ];\n\n\n    //add screen reader text\n    for (var i = 0; i < 5; i++) {\n        var dl_blocks_bar = $(\"<dl>\");\n        dl_blocks_bar.append(\"<dt>\" + dataset[i].data[0].count + \" people had a positive \" + dataset[i].data[0].name.toLowerCase() + \" toxicology screen from 2013-2014.</dt>\");\n        dl_blocks_bar.append(\"<dd>Of those with a positive \" + dataset[i].data[0].name.toLowerCase() + \" toxicology screen, \" +\n            dataset[i].data[0].alias[0].Yes + \"% had a legal opioid prescription at some point from 2011 - 2014, \" + \n            dataset[i].data[0].alias[1].Yes +\"% had a legal opioid prescription 6 month before death, \" + \n            dataset[i].data[0].alias[2].Yes + \"% had a legal opioid prescription 3 month before death, and \" + \n            dataset[i].data[0].alias[3].Yes + \"% had a legal opioid prescription 1 month before death.</dd>\");\n        $(\"#sr-blocks-bar\").append(dl_blocks_bar);\n    };\n\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n\n    $(\".btn-substance\").on('click', function() {\n        var sub = parseInt($(this).val());\n        var substance;\n        $(\".btn-time\").removeClass('disableClick disabled');\n        switch (sub) {\n            case 0:\n                substance = heroin;\n                break;\n            case 1:\n                substance = fentanyl;\n                break;\n            case 2:\n                substance = both;\n                break;\n            case 3:\n                substance = prescription;\n                break;\n            case 4:\n                substance = methadone;\n                break;\n            case 5:\n                substance = buprenorphine;\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\n                $(\"#studyperiod\").addClass('active');\n                break;\n        }\n        data_substance = substance;\n        asignVal_substance(data_substance, time);\n    });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"during 2011–2014\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-period\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n    function asignVal_substance(type, time) {\n        $('#percentage').html(type[time].Yes + '%');\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table table_substance\"><tr><th>Had legal prescription</th><th>Did not have legal prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n\n        })\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        var person_path = '<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>' + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/>';\n        var person_svg_No = '<svg class=\"block type_substance1\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push(person_svg_No);\n\n            //blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            //$(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n            var person_svg_Yes = '<svg class=\"block type_substance0\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n            $(id).append(person_svg_Yes);\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //BAR CHART\n    ///////////////////////\n\n    var width = '100%',\n        height = 30;\n    // series = dataset.map(function(d) {\n    //     return d.name;\n    // }),\n    dataset = dataset.map(function(d) {\n            return d.data.map(function(o, i) {\n                // Structure it so that your numeric\n                // axis (the stacked amount) is y\n                return {\n                    y: o.count,\n                    s: o.name,\n                };\n            });\n        }),\n        stack = d3.layout.stack();\n\n    stack(dataset);\n\n\n    var dataset = dataset.map(function(group) {\n            return group.map(function(d) {\n                // Invert the x and y values, and y0 becomes x0\n                return {\n                    x: d.y,\n                    n: d.s,\n                    y: d.x,\n                    x0: d.y0\n                };\n            });\n        }),\n        $bar = d3.select('#bar')\n        .append('svg')\n        .attr('id', 'bar_svg')\n        .attr('width', width)\n        .attr('height', height)\n    var color = [\"#b71c1c\", '#CFD8DC']\n    var colors;\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\n    draw(colors);\n    $(\".btn-substance\").on('click', function() {\n        $('#bar_svg').empty();\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\n        $('.btn-substance').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        colors[$(this).val()] = color[0];\n        draw(colors);\n        var i = $(this).val(),\n            d = dataset[$(this).val()][0];\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand();\n        console.log(d);\n        console.log(d.n == 'Fentanyl & Heroin')\n\n        if (d.n == 'both Fentanyl & Heroin') {\n            substance_html = d.n + \"<a href=\\\"#footnote-16\\\" class=\\\"page-scroll\\\"><sup>16</sup></a>\";\n        } else if (d.n == 'Prescription Opioids') {\n\t    substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-15\\\" class=\\\"page-scroll\\\"><sup>15</sup></a>\";\n        } else {\n            substance_html = d.n;\n        }\n\n        console.log(substance_html)\n        $('.substance-type').html(substance_html);\n        $('#total').html(d.x);\n\n    });\n\n    function draw(colors) {\n        $('#bar_svg')\n            .append('g')\n            .attr('class', 'bar_g')\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n        xMax = d3.max(dataset, function(group) {\n                return d3.max(group, function(d) {\n                    return d.x + d.x0;\n                });\n            }),\n            xScale = d3.scale.linear()\n            .domain([0, xMax])\n            .range([0, width]),\n            // months = dataset[0].map(function(d) {\n            //     return d.y;\n            // }),\n            yScale = d3.scale.ordinal()\n            //.domain(months)\n            .rangeRoundBands([0, height], .1),\n\n            colours = d3.scale.ordinal()\n            .range(colors),\n\n            bar_groups = $bar.selectAll('.bar_g')\n            .data(dataset)\n            .enter()\n            .append('g')\n            .style('fill', function(d, i) {\n                return colours(i);\n            }),\n\n            rects = bar_groups.selectAll('rect')\n            .data(function(d) {\n                return d;\n            })\n            .enter()\n            .append('rect')\n            .style({ 'stroke': '#b71c1c', 'stroke-width': '1px' })\n            .attr('x', function(d) {\n                return xScale(d.x0);\n            })\n            .attr('y', function(d, i) {\n                return yScale(d.y);\n            })\n            .attr('height', function(d) {\n                return yScale.rangeBand();\n            })\n            .attr('width', function(d) {\n                return xScale(d.x);\n            })\n    };\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n\t'<div class=\"people-blocks\">Prescription Opioids in Toxicology Screen</div><table class=\"table table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\n\t'<div class=\"people-blocks\">Heroin in Toxicology Screen</div><table class=\"table table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\n\t'<div class=\"people-blocks\">Number of Different Prescribers</div><table class=\"table table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n    var value;\n    var option;\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        $option = $(this).data('select');\n        //$value = eval($(this).val());\n        if ($option == 'multi') { $value = 2; } else if ($option == 'heroin') { $value = 1; } else if ($option = 'prescription') { $value = 0; }\n        console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        $option = $(this).attr('id');\n        $value = eval($(this).val());\n        //console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n        //console.log(value);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        if (data_gender == multi) {\n            var index = [0, 1, 2, 3, 4, 5];\n        } else {\n            var index = [0, 0, 2, 3, 5, 5];\n        };\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\n        for (b = 0; b < noOfBlocks; b++) {\n            var person_svg = '<svg class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + ' width=\"25px\" height=\"25px\">'+'<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/></svg>';\n\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            //blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            blockArray.push(person_svg);\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n        .text(\"Age\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .attr(\"y\", 10)\r\n        .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n    // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n            var selected = \"percentOpiodDeaths\";\r\n            //console.log(column);\r\n            var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n            //\r\n            // //console.log(column, dataset);\r\n            //\r\n\r\n\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n\r\n            window.addEventListener('resize', function() {\r\n                updateWidth();\r\n                redraw(dataset, selected);\r\n            });\r\n\r\n            d3.select(\"#POD\").classed(\"selected\", true);\r\n            $(\"#POD\").addClass(\"active\");\r\n\r\n            d3.select(\"#POD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"percentOpiodDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#DR\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"deathRate\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#NOD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"numberOpioidDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age18to24\")\r\n                .on(\"click\", function(d, i) {\r\n                    //selected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", true);    \r\n\r\n                    d3.selectAll(\".bar.malFocus.age18to24\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age18to24\")\r\n                        .classed(\"femSelector\", false);\r\n                    \r\n                     d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);  \r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age25to34\")\r\n                .on(\"click\", function(d, i) {\r\n                    //lected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                     \r\n\r\n                    d3.selectAll(\".bar.malFocus.age25to34\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age25to34\")\r\n                        .classed(\"femSelector\", false);\r\n\r\n                    d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);                    \r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n\r\n\r\n                });\r\n\r\n            //setup our ui -- requires access to data variable, so inside csv\r\n            // d3.select(\"#menu select\")\r\n            //     .on(\"change\", function() {\r\n            //         column = d3.select(\"#menu select\").property(\"value\");\r\n            //         dataset = drawGraph(data, column);\r\n            //         //console.log(column, dataset);\r\n            //         redraw(dataset, column);\r\n            // });\r\n\r\n        }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + (width - 10) + \",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female' && d.age === '35 to 49') {\r\n                    return \"bar femFocus age35to49\";\r\n                } else if (d.gender === 'Male' && d.age === '35 to 49') {\r\n                    return \"bar malFocus age35to49\";\r\n                } else if (d.gender === 'Female' && d.age === '50 to 64') {\r\n                    return \"bar femFocus age50to64\";\r\n                } else if (d.gender === 'Male' && d.age === '50 to 64') {\r\n                    return \"bar malFocus age50to64\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus age65plus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus age65plus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                //console.log(d.age)\r\n                return d.gender_age\r\n            });\r\n             // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            })\r\n            ;\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-axis lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-axis lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-axis\"\r\n                }\r\n            });\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-data-label lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-data-label lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-data-label\"\r\n                }\r\n            });\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent of Opioid-related Deaths Among All Deaths',\r\n            deathRate: 'Opioid-related Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid-related Deaths from 2013 to 2014'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();","$(document).ready(function() {\n\n    dataset = [{\n        raceth: \"All\",\n        \"2014\": 19.9,\n        \"2015\": 23.3\n    }, {\n        raceth: \"White non-Hispanic\",\n        \"2014\": 23.3,\n        \"2015\": 27.5\n    }, {\n        raceth: \"Black non-Hispanic\",\n        \"2014\": 11.1,\n        \"2015\": 13.7\n    }, {\n        raceth: \"Hispanic\",\n        \"2014\": 15.3,\n        \"2015\": 18.8\n    }];\n\n    var color = d3.scale.ordinal()\n        .range([\"rgb(211, 211, 211)\", \"#78909C\"]);\n\n    var width, height, margin = {};\n\n    updateWidth();\n\n    var x0 = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal().rangeBands([0, width], 0);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    var min2014 = [18.8, 22.0, 5.5, 12.4]\n    var max2014 = [20.9, 24.7, 18.5, 18.3]\n    var min2015 = [22.2, 26.0, 7.4, 15.7]\n    var max2015 = [24.5, 29.0, 21.9, 21.9]\n\n    var errorBarArea2014all = d3.svg.area()\n    var errorBarArea2015all = d3.svg.area()\n    var errorBarArea2014white = d3.svg.area()\n    var errorBarArea2015white = d3.svg.area()\n    var errorBarArea2014black = d3.svg.area()\n    var errorBarArea2015black = d3.svg.area()\n    var errorBarArea2014hisp = d3.svg.area()\n    var errorBarArea2015hisp = d3.svg.area()\n\n    var errorBars2014all;\n    var errorBars2015all;\n    var errorBars2014white;\n    var errorBars2015white;\n    var errorBars2014black;\n    var errorBars2015black;\n    var errorBars2014hisp;\n    var errorBars2015hisp;\n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    var $bars_race = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return {\n                name: name,\n                value: +d[name]\n            };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    var xAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n    var yAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\");\n\n    var yAxisLabel = yAxis.append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    var bars = bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\");\n\n    bars\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            //console.log(d.value + \": \" + y(d.value))\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            //console.log(height - y(9.7));\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n            divtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n            divtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    var legendRect = legend.append(\"rect\")\n        .attr(\"x\", width - 24)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n    \n\n    var legendText = legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n\n    var $legend = $svg.append(\"g\");\n    var $item = $legend.append(\"g\");\n    var seriesColors = [\"#0071bc\"];\n     var seriesLineStrokes = [\"1.5px\"];\n     var seriesLineDash = [\"0,0,0,0\"];\n\n    function renderLegend() {\n\n\n      var legendItems = [\n        \"ConfInt\"\n      ];\n      var legendItemsTranslate = [\n        \"Confidence Interval\"\n      ];\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-(margin.right*10))+\",0)\");\n      var lineHeight = 15;\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n      legendItems.forEach(function(item, i) {\n      $item = $legend.append(\"g\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\n\n        $item.append(\"svg:line\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x1\", 133)\n          .attr(\"y1\", 37)\n          .attr(\"x2\", 150)\n          .attr(\"y2\", 37)\n          .style(\"stroke\", seriesColors[i])\n          .style(\"stroke-dasharray\", seriesLineDash[i])\n          .style(\"stroke-width\", seriesLineStrokes[i]);\n\n        $item.append(\"text\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x\", 40)\n          .attr(\"y\", 40)\n          .text(legendItemsTranslate[i]);\n      });\n    }\n\n    \n\n    errorBarArea2014all\n        .x(function(d) {\n            return x0('All') + x1.rangeBand() / 2;\n        })\n        .y0(function(d) {\n            return y(min2014[0]);\n        })\n        .y1(function(d) {\n            return y(max2014[0]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2015all\n        .x(function(d) {\n            return x0('All') + x1.rangeBand() / 2 + x1.rangeBand();\n        })\n        .y0(function(d) {\n            return y(min2015[0]);\n        })\n        .y1(function(d) {\n            return y(max2015[0]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2014white\n        .x(function(d) {\n            return x0('White non-Hispanic') + x1.rangeBand() / 2;\n        })\n        .y0(function(d) {\n            return y(min2014[1]);\n        })\n        .y1(function(d) {\n            return y(max2014[1]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2015white\n        .x(function(d) {\n            return x0('White non-Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n        })\n        .y0(function(d) {\n            return y(min2015[1]);\n        })\n        .y1(function(d) {\n            return y(max2015[1]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2014black\n        .x(function(d) {\n            return x0('Black non-Hispanic') + x1.rangeBand() / 2;\n        })\n        .y0(function(d) {\n            return y(min2014[2]);\n        })\n        .y1(function(d) {\n            return y(max2014[2]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2015black\n        .x(function(d) {\n            return x0('Black non-Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n        })\n        .y0(function(d) {\n            return y(min2015[2]);\n        })\n        .y1(function(d) {\n            return y(max2015[2]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2014hisp\n        .x(function(d) {\n            return x0('Hispanic') + x1.rangeBand() / 2;\n        })\n        .y0(function(d) {\n            return y(min2014[3]);\n        })\n        .y1(function(d) {\n            return y(max2014[3]);\n        })\n        .interpolate(\"linear\");\n    errorBarArea2015hisp\n        .x(function(d) {\n            return x0('Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n        })\n        .y0(function(d) {\n            return y(min2015[3]);\n        })\n        .y1(function(d) {\n            return y(max2015[3]);\n        })\n        .interpolate(\"linear\");\n\n\n    //var errorBarSVG = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    errorBars2014all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n\n    //\n    errorBars2014all.enter().append(\"path\");\n    errorBars2015all.enter().append(\"path\");\n    errorBars2014white.enter().append(\"path\");\n    errorBars2015white.enter().append(\"path\");\n    errorBars2014black.enter().append(\"path\");\n    errorBars2015black.enter().append(\"path\");\n    errorBars2014hisp.enter().append(\"path\");\n    errorBars2015hisp.enter().append(\"path\");\n\n    //\n    errorBars2014all\n        .attr(\"d\", function(d) {\n            return errorBarArea2014all([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2015all\n        .attr(\"d\", function(d) {\n            return errorBarArea2015all([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2014white\n        .attr(\"d\", function(d) {\n            return errorBarArea2014white([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2015white\n        .attr(\"d\", function(d) {\n            return errorBarArea2015white([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2014black\n        .attr(\"d\", function(d) {\n            return errorBarArea2014black([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2015black\n        .attr(\"d\", function(d) {\n            return errorBarArea2015black([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2014hisp\n        .attr(\"d\", function(d) {\n            return errorBarArea2014hisp([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n    errorBars2015hisp\n        .attr(\"d\", function(d) {\n            return errorBarArea2015hisp([d]);\n        })\n        .attr(\"class\", \"bars_race_error\");\n\n\n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n\n    function render() {\n        updateWidth();\n        $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-margin.right*10)+\",0)\");\n        x1.rangeRoundBands([0, x0.rangeBand()]);\n\n        x0.rangeRoundBands([0, width], .1);\n        y.range([height, 0]);\n\n        xAxis_bars.scale(x0);\n        yAxis_bars.scale(y);\n\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\n\n        xAxis\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis_bars)\n            .selectAll(\".tick text\")\n            .call(wrap, x0.rangeBand());\n\n        yAxis.call(yAxis_bars);\n        yAxisLabel.attr(\"x\", -height / 2);\n        legendRect.attr(\"x\", width - 18);\n        legendText.attr(\"x\", width - 24);\n\n        bar.attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n        bars.attr(\"width\", x1.rangeBand())\n            .attr(\"x\", function(d) {\n\n                return x1(d.name) + 10;\n            })\n            .attr(\"y\", function(d) {\n\n                return y(d.value);\n            })\n            .attr(\"value\", function(d) {\n                return d.name;\n            })\n            .attr(\"height\", function(d) {\n                return height - y(d.value);\n            });\n\n\n        errorBarArea2014all\n            .x(function(d) {\n                return x0('All') + x1.rangeBand() / 2;\n            })\n            .y0(function(d) {\n                return y(min2014[0]);\n            })\n            .y1(function(d) {\n                return y(max2014[0]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2015all\n            .x(function(d) {\n                return x0('All') + x1.rangeBand() / 2 + x1.rangeBand();\n            })\n            .y0(function(d) {\n                return y(min2015[0]);\n            })\n            .y1(function(d) {\n                return y(max2015[0]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2014white\n            .x(function(d) {\n                return x0('White non-Hispanic') + x1.rangeBand() / 2;\n            })\n            .y0(function(d) {\n                return y(min2014[1]);\n            })\n            .y1(function(d) {\n                return y(max2014[1]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2015white\n            .x(function(d) {\n                return x0('White non-Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n            })\n            .y0(function(d) {\n                return y(min2015[1]);\n            })\n            .y1(function(d) {\n                return y(max2015[1]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2014black\n            .x(function(d) {\n                return x0('Black non-Hispanic') + x1.rangeBand() / 2;\n            })\n            .y0(function(d) {\n                return y(min2014[2]);\n            })\n            .y1(function(d) {\n                return y(max2014[2]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2015black\n            .x(function(d) {\n                return x0('Black non-Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n            })\n            .y0(function(d) {\n                return y(min2015[2]);\n            })\n            .y1(function(d) {\n                return y(max2015[2]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2014hisp\n            .x(function(d) {\n                return x0('Hispanic') + x1.rangeBand() / 2;\n            })\n            .y0(function(d) {\n                return y(min2014[3]);\n            })\n            .y1(function(d) {\n                return y(max2014[3]);\n            })\n            .interpolate(\"linear\");\n        errorBarArea2015hisp\n            .x(function(d) {\n                return x0('Hispanic') + x1.rangeBand() / 2 + x1.rangeBand();\n            })\n            .y0(function(d) {\n                return y(min2015[3]);\n            })\n            .y1(function(d) {\n                return y(max2015[3]);\n            })\n            .interpolate(\"linear\");\n\n        errorBars2014all\n            .attr(\"d\", function(d) {\n                return errorBarArea2014all([d]);\n            });\n        errorBars2015all\n            .attr(\"d\", function(d) {\n                return errorBarArea2015all([d]);\n            });\n        errorBars2014white\n            .attr(\"d\", function(d) {\n                return errorBarArea2014white([d]);\n            });\n        errorBars2015white\n            .attr(\"d\", function(d) {\n                return errorBarArea2015white([d]);\n            });\n        errorBars2014black\n            .attr(\"d\", function(d) {\n                return errorBarArea2014black([d]);\n            });\n        errorBars2015black\n            .attr(\"d\", function(d) {\n                return errorBarArea2015black([d]);\n            });\n        errorBars2014hisp\n            .attr(\"d\", function(d) {\n                return errorBarArea2014hisp([d]);\n            });\n        errorBars2015hisp\n            .attr(\"d\", function(d) {\n                return errorBarArea2015hisp([d]);\n            });\n\n    }\n\n    function updateWidth() {\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\n        margin = {\n                top: 50,\n                right: 10,\n                bottom: 60,\n                left: 50\n            },\n            width = w - margin.left - margin.right;\n\n        if (w < 500) {\n            height = 350 - margin.top - margin.bottom;\n            linemult = 1.4\n            linepad = 40\n        } else {\n            height = 500 - margin.top - margin.bottom;\n            linemult = 1.35\n            linepad = 30\n        }\n\n    }\n    render();\n    renderLegend();\n    window.addEventListener('resize', render);\n});"],"sourceRoot":"/source/"}