{"version":3,"sources":["custom.js","map-death.js","queue.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","lines-bsas.js","bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","parallelism","pop","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","preventDefault","$anchor","stop","animate","scrollTop","each","$id","$current","parent","find","location","pathname","hostname","target","hash","tab","$target","get","play","load","response","asignVal_svg","val_svg","initialize","console","log","mapWidth","mapHeight","transformX","transformY","legendWidth","legendHeight","unitWidth","Vis","visualize","states","forEach","wrapper","visualizationWrapper","createMap","selector","eventName","el","shape","key","$maps_sub","value","values","palette","self","town_value","geoData","parentNode","getElementsByClassName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","date","setupData","years","keys","dataset","OMRs","y","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","querySelector","time","sqrt","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","mouseoutFunc","symbol","type","size","tooltipFent","focus","mouseoverFunc","y0","y1","invert","percentVal","mousemoveFunc","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","componentWidth","renderLegend","legendItems","legendItemsTranslate","$legend","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","none","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","delay","string_select","value_select","town_names","bisectAge","bisector","category10","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","indexOf","term","ui","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","time_period","o","stack","layout","n","parseFloat","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","words","split","reverse","lineNumber","dy","tspan","join","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","legendRect","legendText","bar","raceth","2014","2015","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"AAQA,QAAAA,UAAAC,GAEA,GAAAD,GAAAE,SAAAC,iBAAA,YAGAC,QAAAC,SAAA,WACA,IAAA,GAAAC,GAAA,EAAAA,EAAAN,EAAAO,OAAAD,IAAA,CAIA,GAAAE,GAAAC,EAAAT,EAAAM,IAAAI,SAGAC,GADAP,OAAAQ,OACAR,OAAAS,YAAAL,EAAAM,KAMAC,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAEAC,IAEAA,GAAAV,GAAA,QAAAS,EAAAT,GAAAK,EAAAV,GAAA,IAIAD,EAAAM,GAAAW,MAAAC,mBAAAF,EAAAV,KAWA,QAAAa,kBACAV,EAAA,WAAAC,SAAAI,IAAA,GACAL,EAAA,qBAAAW,SAAA,oBAEAX,EAAA,qBAAAY,YAAA,oBC7CA,QAAAC,OACAC,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAAC,aAGA,QAAAA,aAAAC,EAAAC,GA6JA,QAAAC,KACAC,EAAA,KACAvB,EAAA,aAAAwB,GAAA,eAAA,WACAD,EAAAvB,EAAAyB,MAAAC,SAIA,QAAAH,GAAAI,GAEA,GAAAC,GAAA,KAAAD,CACA3B,GAAA,gBAAA6B,KAAA,6DACA7B,EAAA,cAAA6B,KAAAF,GACA3B,EAAA,iBAAA6B,KAAA,QACA7B,EAAA,WAAA6B,KAAAC,SAAAH,GAAA,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EAEA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAKA,QAAAI,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,IACAzC,EAAA,GAEA0C,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEA8C,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,OACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GArOA,GAQA9C,GARA+D,EAAAvC,EAAA,GAGAwC,EAAAxC,EAAA,EAMA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CAGA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAMA,WADAC,OAAA,sDAGAL,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAIA,GAAAO,GAAA,IACAzC,EAAA,IAEA4B,EAAAf,GAAA8B,OAAA,cAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEA+B,EAAAvB,GAAAyB,MAAAyB,YAEAZ,QAAA,IAAA,IAAA,KAAA,KAAAa,EAAAA,IACAZ,MAAAa,YAAAC,MAAA,GAEA9B,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAIA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAKAC,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAIAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAGA8C,EAAA,IACAC,cAAAD,EAAAE,OAAAC,YAEA,IAAAC,EAGAA,GADAlD,EAAAE,WAAA6C,cAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eACA,GAAA/C,EAAAE,WAAA6C,cACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eAEA,OAGAK,QAAAC,QAAA,UAAA,GACAxC,KAAA,QAAA,SAAA8B,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,IAAA,iBACAjD,KAAA,MAAA4D,YAAAtD,EAAAE,WAAA2B,MAAA,UAAAqB,KAGA7D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA0F,QAAAC,QAAA,UAAA,GACAxE,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,QAsBAc,KACAkB,EAAAD,EAAA,eAAA,kDAsBAvC,EAAA,iBAAA0F,MAAA,WACA1F,EAAA,aAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,EAAAvB,EAAAyB,MAAAgC,KAAA,aAmFA,QAAAkC,QACA7E,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAA0E,cAGA,QAAAA,cAAAxE,EAAAC,GAyCA,QAAAoE,GAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBA6FA,QAAA7E,KACA8E,EAAA,KACApG,EAAA,aAAAwB,GAAA,eAAA,WACAxB,EAAAyB,MAAAC,KAGA0E,GAAApG,EAAAyB,MAAAC,SAKA,QAAA0E,GAAAzE,GAEA,GAAAC,GAAA,KAAAD,CACAyD,GAAAzD,EAEA3B,EAAA,iBAAA6B,KAAA,mFACA7B,EAAA,cAAA6B,KAAAF,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EACA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAIA,QAAAiE,GAAA5D,EAAAC,EAAAC,GACA,GAAA2D,GAAA,IACAC,EAAA,GAEA1D,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAsD,GACAtD,KAAA,SAAAuD,GAEAtD,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MACAhB,GAAA,KACAiB,EAAA,UACAC,EAAA,OAEA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GA1NA,GAGAyC,GAEAvF,EALA+D,EAAAvC,EAAA,GACAwC,EAAAxC,EAAA,EAKA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAIA,WADAC,OAAA,sDAGAL,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAGA,GAAAO,GAAA,IACAzC,EAAA,IAIA4B,EAAAf,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEAgG,EAAAxF,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAA,mBAEAT,EAAAvB,GAAAyB,MAAAyB,YACAZ,QAAA,IAAA,IAAA,KAAA,KAAAa,EAAAA,IACAZ,MAAAa,YAAAqC,KAAA,GACAlE,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAUA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAEAC,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAEAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAEA8C,EAAA,IACAC,cAAAD,EAAAE,OAAAC,EACA,IAAAC,EAIAA,GADAlD,EAAAE,WAAA6C,cAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eACA,GAAA/C,EAAAE,WAAA6C,cACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,eAEA,OAKAsB,EAAAhB,QAAA,UAAA,GACAxC,KAAA,QAAA,SAAA8B,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,KAAA,iBACAjD,KAAA,MAAA4D,EAAAtD,EAAAE,WAAA2B,MAAA,UAAAqB,KAEA7D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA2G,EAAAhB,QAAA,UAAA,GACAxE,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SACAgB,GAAA,aAAA,SAAAW,EAAAtC,MAMA2B,GAAA,aAAA,SAAAW,KAsBAb,KAEA+E,EAAA9D,EAAA,UAAA,2BC9YA,WAGA,QAAAzB,GAAA4F,GAaA,QAAAC,KACA,KAAAC,EAAAC,EAAAC,EAAAhH,QAAAiH,EAAAL,GAAA,CACA,GAAA7G,GAAAgH,IACAG,EAAAF,EAAAjH,GACAoH,EAAAC,EAAAC,KAAAH,EAAA,EACAC,GAAA9D,KAAAiE,EAAAvH,MACAkH,EACAC,EAAA,GAAAK,MAAA,KAAAJ,IAIA,QAAAG,GAAAvH,GACA,MAAA,UAAAyH,EAAAlE,KACA2D,EACA,MAAA3F,IACA,MAAAkG,GACAlG,EAAAkG,EACAT,EAAAU,EAAAC,IACAC,MAEAX,EAAAjH,GAAAuD,IACAmE,EAAAX,GAAAD,IACAc,OAKA,QAAAA,KACA,MAAArG,EAAAsG,EAAAtG,GACAuG,EAAAD,EAAAtG,EAAA0F,GACAY,EAAAL,MAAA,MAAAjG,GAAA+D,OAAA2B,IA1CA,GAAAc,GAKAhB,EAGAe,EAPAb,KACAD,EAAA,EACAE,EAAA,EACAQ,EAAA,EAEAnG,EAAA,KACAsG,EAAAG,CAsCA,OAnCAnB,KAAAA,EAAAvC,EAAAA,GAmCAyD,GACA7G,MAAA,WAMA,MALAK,KACA0F,EAAA3D,KAAA2E,aACAP,EACAZ,KAEAiB,GAEAF,MAAA,SAAAK,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAJ,GAAAE,IACAG,GAEA1G,SAAA,SAAA6G,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAJ,GAAAE,IACAG,IAKA,QAAAC,MAxEA,GAAAX,MAAAA,KA0EApG,GAAAkH,QAAA,QACA,kBAAAC,SAAAA,OAAAC,IAAAD,OAAA,WAAA,MAAAnH,KACA,gBAAAqH,SAAAA,OAAAC,QAAAD,OAAAC,QAAAtH,EACAW,KAAAX,MAAAA,KF5EArB,SAAA4I,cAAA,WACA5I,SAAA4I,cAAA,UAEA,IAAA7I,QAAA,EACAD,UAAAC,OAgDAQ,EAAAL,QAAA2I,OAAA5H,gBACAV,EAAAP,UAAA8I,MAAA7H,gBAGAV,EAAA,WACAA,EAAA,iBAAAwI,KAAA,QAAA,SAAAC,GACAA,EAAAC,gBACA,IAAAC,GAAA3I,EAAAyB,KACAzB,GAAA,cAAA4I,OAAAC,SACAC,UAAA9I,EAAA2I,EAAA3F,KAAA,SAAA/C,SAAAI,KACA,KAAA,iBACAoI,EAAAC,qBAKA1I,EAAA,4BAAA0F,MAAA,WACA,0BAAA1F,EAAAyB,MAAAuB,KAAA,UAAA,mBAAAhD,EAAAyB,MAAAuB,KAAA,UACAhD,EAAA,0BAAA0F,UAMA1F,EAAAL,QAAA2I,OAAA,WACAtI,EAAAL,QAAAmJ,aAAA,IACA9I,EAAA,eAAAW,SAAA,oBAEAX,EAAA,eAAAY,YAAA,oBAIAZ,EAAA,WAAA+I,KAAA,WACA,GAAA/I,EAAAL,QAAAmJ,aAAA9I,EAAAyB,MAAAxB,SAAA,IAAA,GAAA,CACA,GAAA+I,GAAAhJ,EAAAyB,MAAAuB,KAAA,KACAhD,GAAA,kBAAAY,YAAA,UACAZ,EAAA,qBAAAgJ,EAAA,MAAArI,SAAA,SAEA,IAAAsI,GAAAjJ,EAAAyB,MAAAuB,KAAA,aAEAhD,GAAA,oBAAA6B,KAAAoH,QAMAjJ,EAAA,kBAAAwB,GAAA,QAAA,WACAxB,EAAAyB,MAAAyH,SAAAC,KAAA,MAAAvI,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,YAKAX,EAAA,4BAAA0F,MAAA,WACA,GAAA0D,SAAAC,SAAAvD,QAAA,MAAA,KAAArE,KAAA4H,SAAAvD,QAAA,MAAA,KAAAsD,SAAAE,UAAA7H,KAAA6H,SAAA,CAEA,GAAAC,GAAAvJ,EAAAyB,KAAA+H,KAEA,IADAD,EAAAA,EAAAzJ,OAAAyJ,EAAAvJ,EAAA,SAAAyB,KAAA+H,KAAAtC,MAAA,GAAA,KACAqC,EAAAzJ,OAIA,MAHAE,GAAA,aAAA6I,SACAC,UAAAS,EAAAtJ,SAAAI,KACA,MACA,KAyBAL,EAAA,kBAAA0F,MAAA,SAAA4B,GACAA,EAAAoB,iBACA1I,EAAAyB,MAAAgI,IAAA,UAMAzJ,EAAA,kBAAA0F,MAAA,WACA,GAAAgE,GAAA1J,EAAAA,EAAAyB,MAAAgC,KAAA,UACAiG,GAAAC,IAAA,IACAD,EAAAC,IAAA,GAAAC,SAKA5J,EAAA,WACAA,EAAA,kBAAA6J,KAAA,iBAAA,SAAAC,GAMA,QAAAC,GAAArI,GACA1B,EAAA,YAAAY,YAAA,UACAZ,EAAA,mBAAA0B,EAAA,MAAAf,SAAA,UACA,QAAAe,GACA1B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,iBAAAgD,KAAA,UAAA,GACAhD,EAAA,0BAAA6B,KAAA,iIAEA7B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,0BAAA6B,KAAA,iIAdA,GAEAmI,IAFAhK,EAAAyB,MAAA0H,KAAA,OAEA,MACAY,GAAAC,GAeAhK,EAAA,YAAAwB,GAAA,QAAA,WACAuI,EAAA/J,EAAAyB,MAAAC,SAGA1B,EAAA,iBAAAwB,GAAA,QAAA,WACAuI,EAAA/J,EAAAyB,MAAAgC,KAAA,iBCtLAzD,EAAAP,UAAA8I,MAAA,WACA1H,MACA8E,SECA,WACA,YAcA,SAAAF,GAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBAMA,QAAA8D,KACAnJ,QAEAC,MAAAC,GAAAC,KAAA,yCAGAF,MAAAC,GAAAC,KAAA,yCAEAC,SAAAC,GAGA,QAAAA,GAAAC,EAAAC,GAEA,GAAAuC,GAAAvC,EAAA,GACAwC,EAAAxC,EAAA,EAGArB,GAAA,iBAAA0F,MAAA,WACA1F,EAAA,mBAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,EAAAvB,EAAAyB,MAAAgC,KAAA,YAGA,KAAA,GAAA5D,GAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,OAAAF,EAAAC,SAAAjE,GAAAmE,KAIA,MAHAkG,SAAAC,IAAA,6BAAAtK,OACAqK,SAAAC,IAAAvG,EAAAE,SAAAjE,GAAAwC,WAAA0B,KAAA,kBAAAF,EAAAC,SAAAjE,GAAAmE,KAIAJ,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAGAN,EAAAf,GAAA8B,OAAA,cACA0C,QAAA,iBAAA,GACAzC,OAAA,OACAC,KAAA,sBAAA,iBACAA,KAAA,UAAA,OAAAoH,EAAA,IAAAC,GAEA7E,QAAA,0BAAA,GACAhF,MAAA,SAAA,sBAEA,IAAA+E,GAAAvE,GAAA8B,OAAA,cAAAC,OAAA,OACAC,KAAA,QAAA,qBAIAT,GAAAvB,GAAAyB,MAAAyB,YACAZ,QAAA,IAAA,KAAA,KAAA,MAAA,MAAA,MAAAa,EAAAA,IACAZ,OAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,YACAhB,EAAAiB,cAAA,WACA,OAAA,IAAA,IAAA,MAAA,OAAA,QAAA,QAAA,OAKA,IAAAc,GAAAtD,GAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,MACAkC,WAAAyF,EAAA,IAAA,IAAAC,IAEAzF,EAAA5D,GAAAuD,IAAAM,OACAP,WAAAA,EAEAvC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAyC,QAAA,YAAA,GACAxC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA+E,GAAAzC,KAEA3B,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SACAgB,GAAA,YAAA,SAAAW,GACA,GAAA2C,GAAA9D,GAAA8D,MAAA/C,EAAAgD,QAAAC,IAAA,SAAA7C,GACA,MAAAL,UAAAK,KAGA3B,EAAA,SAAA,IAAAsE,EAAA,GAAAsF,EAAA,GAAA,oBAAA,IAAAtF,EAAA,GAAAuF,EAAA,gBAEAC,EAAAxF,EAAA,GAAAsF,EAAA,EAAA,QAAA,EACAG,EAAAzF,EAAA,GAAAuF,EAAA,EAAA,QAAA,CACA7J,IAAA,wBAAA8J,EAAA,IAAAC,EAAA,IAEA,IAEAlF,GAFAJ,EAAA,KACAC,EAAAD,EAAAE,OAAAC,EAIAC,GADAlD,EAAAE,WAAA6C,GAAA,EACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,IACA,IAAA/C,EAAAE,WAAA6C,GACAlE,GAAAsE,OAAA,OAAAnD,EAAAE,WAAA6C,IAEA,OAGAK,EAAAC,QAAA,UAAA,GACAxC,KAAA,QAAAxC,GACAqB,KAAA,WAAA4D,EAAAtD,EAAAE,WAAA2B,MAAA,eAAAqB,KAGA7D,GAAA,YAAA,SAAAW,EAAAtC,GACAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA0F,EAAAC,QAAA,UAAA,GACAxE,GAAAgB,UAAA,iBACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAIAc,IACAkB,EAAAD,EAAA,eAAA,kDAKA,QAAAjB,KAEAtB,EAAA,mBAAA0B,IAAA,MACAH,EAAA,MACAvB,EAAA,mBAAAwB,GAAA,eAAA,WACAD,EAAAvB,EAAAyB,MAAAC,SAIA,QAAAH,GAAAI,GAEA,GAAAC,GAAA,KAAAD,CACAyD,GAAAzD,EACA3B,EAAA,sBAAA6B,KAAA,qDACA7B,EAAA,mBAAA6B,KAAAF,GAEA3B,EAAA,iBAAA6B,KAAA,oHAGAE,EAAAC,UAAA,iBACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GACA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EACA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAIA,QAAAI,GAAAC,EAAAC,EAAAC,GAeA,IAAA,GAbAE,GAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAwH,GACAxH,KAAA,SAAAyH,GAEAxH,EAAAJ,EAAAE,OAAA,KAGAG,KAMArD,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIA,IAAA6K,GAAA,IAAAxH,EAAApD,MAEAmD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAAyH,EAAA,GACAzH,KAAA,QAAA,SAAAb,EAAAtC,GACA,MAAA6K,GAAA,MAEA1H,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,GAAA6K,EAAA,MAEA1H,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,cAAA,UACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,GAAA6K,EAAAA,EAAA,EAAA,MAEA1H,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAGAJ,EAAAF,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GAnOA,GAKAyC,GACArD,EACAQ,EAPAkI,EAAA,GACAD,EAAA,OACAJ,EAAA,IACAC,EAAA,GAoOArK,GAAAP,UAAA8I,MAAA0B,KC9OA,IAAAU,KAAA,SAAA3J,GACA,YA4BA,SAAA4J,GAAAxJ,EAAAyJ,EAAApH,GAIAA,EAAAA,KAAAqH,QAAA,SAAArH,EAAA5D,GACA,GAAAkL,GAAAC,EAAAjI,OAAA,OAAAC,KAAA,QAAA,eAAAD,OAAA,MAEAkI,GAAAF,EAAAF,EAAApH,KAMA,QAAAwH,GAAAF,EAAAxG,EAAAd,GAuEA,QAAAgE,GAAAyD,EAAAC,GACAnK,EAAAgB,UAAAkJ,GAAA,GAAAJ,QAAA,SAAAM,EAAAvL,GACA,GAAAwL,GAAArK,EAAA8B,OAAAsI,EACAC,GAAA7J,GAAA2J,GAAAE,KAxEAN,EAAAhI,OAAA,QACAY,KAAAF,EAAA6H,KACAtI,KAAA,QAAA,aACA+H,EAAAhI,OAAA,QACAY,KAAA,IACAX,KAAA,QAAA,kBAEA,IAAAuI,GAAAR,EACAvF,QAAA,iBAAA,GACAzC,OAAA,OACAC,KAAA,sBAAA,iBACAA,KAAA,UAAA,OAAAJ,EAAA,IAAAzC,GAEAqF,QAAA,0BAAA,EAEA+F,GAAAvJ,UAAA,QACAyB,KAAAc,EAAAT,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA6B,GACArE,MAAA,SAAA,SACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,GAAA2L,GAAA/H,EAAAgI,OAAAtJ,EAAAE,WAAA2B,KACA,OAAA0H,GAAAF,KAEAhK,GAAA,YAAA,SAAAW,EAAAtC,MAGA2B,GAAA,WAAA,SAAAW,EAAAtC,MAGAmD,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAAE,WAAA2B,KAAAmC,gBAEAnD,KAAA,KAAA,WACAxB,GAAA,aAAA,SAAAW,EAAAtC,GACA4H,EAAA,IAAAtF,EAAAE,WAAA2B,KAAAmC,cAAA,YAKA3E,GAAA,aAAA,SAAAW,GACAsF,EAAA,IAAAtF,EAAAE,WAAA2B,KAAAmC,cAAA,cAGA3E,GAAA,SAAA,SAAAmK,GACA,GACAC,GADAC,EAAAF,EAAAlI,MAKAmI,GAFA,SAAAnI,EAAAgI,OAAAI,EAAA,GAAAxJ,WAAA2B,MAEAhD,EAAAsE,OAAA,SAAA7B,EAAAgI,OAAAI,EAAA,GAAAxJ,WAAA2B,OAEA,MAKA2H,EAAA5G,OAAA+G,WAAAA,WAAAC,uBAAA,mBAAA,GAAAC,UAAAH,EAAA,GAAAxJ,WAAA2B,KAAA,MAAA4H,EACA5K,EAAA8B,OAAA6I,EAAA5G,QAAAvE,MAAA,eAAA,IAAAA,MAAA,SAAA,SAAAA,MAAA,eAAA,WAEAgB,GAAA,WAAA,SAAAmK,GAGAA,EAAA5G,OAAA+G,WAAAA,WAAAC,uBAAA,mBAAA,GAAAC,UAAA,GACAhL,EAAAgB,UAAA,gBAAAxB,OAAAyL,eAAA,IAAAzL,MAAA,SAAA,SAAAA,MAAA,eAAA,WAsBA,QAAA0L,GAAAzJ,EAAAC,EAAAC,GACA,GACAxC,GAAA,GAEAgM,EAAAnL,EAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAA,QACAA,KAAA,SAAA7C,GAEAiM,EAAAD,EAAApJ,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,QACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAuM,GAAApK,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,IAAA,IAAAqD,EAAApD,QAAA,MAEAkD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAgJ,EAAApK,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,cAAA,UACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAA,IAAA,IAAAqD,EAAApD,QAAA,EAAA,MAEAkD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAGA+I,EAAArJ,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAA,IACAW,KAAAhB,GAjLA,GAAAqI,GAAAhK,EAAA8B,OAAA,sBAGAhC,SACAC,MAAAC,EAAAC,KAAA,yBACAF,MAAAC,EAAAC,KAAA,qBACAyG,MAAAkD,EAEA,IAAAhI,GAAA,IACAzC,EAAA,IAEAmE,EAAAtD,EAAAuD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAjC,OAAA,OACAkC,WAAA,IAAA,MAMAE,GAJA7D,EAAA8B,OAAA,UAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEAa,EAAAuD,IAAAM,OAAAP,WAAAA,IACAoH,EAAA1K,EAAAyB,MAAAyB,YAAAZ,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAa,YAAAqC,KAAA,IAiGAlE,EAAAvB,EAAAyB,MAAAyB,YAAAZ,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAa,YAAAqC,KAAA,GACAlE,GAAAiB,cAAA,WACA,OAAA,KAAA,SAAA,UAAA,UACA,UAAA,aAKA0I,EAAA3J,EAAA,uBAAA,gEAuDAvC,EAAA,4BAAA0F,MAAA,WACA,GAAA2G,GAAArM,EAAAyB,MAAAgC,KAAA,OACAzD,GAAA,kBAAAgD,KAAA,mBAAAqJ,GACArM,EAAA,4BAAAY,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,aAGAK,KC9LA,WACA,YAyGA,SAAAsL,GAAA7I,GACA,GAAA8I,GAAAvL,GAAAwL,KAAA/I,EAAA,IAAAyD,MAAA,EAAA,IAEAuF,IAGAhJ,GAAAqH,QAAA,SAAA3I,EAAAtC,GACA,GAAA6M,KACAH,GAAAzB,QAAA,SAAA6B,GACAxK,EAAAwK,IACAD,EAAAvJ,MACAxB,KAAAgL,EACAC,KAAAzK,EAAAwK,GACAE,UAAA1K,EAAA0K,UACAC,SAAA3K,EAAA2K,aAIAL,EAAAtJ,MACA0J,UAAA1K,EAAA0K,UACAC,SAAA3K,EAAA2K,SACAC,MAAAL,MAIAjJ,EAAAgJ,QAAAA,EAGAO,EAAA1J,OACAtC,GAAAiM,OAAAV,EAAA,SAAApK,GACA,MAAA+K,GAAAC,MAAAhL,MAIAiL,EAAA9J,QACAtC,GAAAqM,IAAAZ,EAAA,SAAAtK,GACA,MAAAnB,IAAAqM,IAAAlL,EAAA4K,MAAA,SAAA5K,GACA,OAAAA,EAAAyK,SAGA,GAGA,IAAAU,GAAAC,EAAAvL,UAAA,iBACAyB,KAAAgJ,GACA/I,QACAX,OAAA,KACAC,KAAA,QAAA,cAEAwK,GAAAF,EAAAtL,UAAA,QACAyB,KAAA,SAAAtB,GACA,OAAAA,EAAA4K,SAEArJ,QACAX,OAAA,QACAC,KAAA,QAAA,cACAwC,QAAA,gBAAA,SAAArD,EAAAtC,GAEA,MAAAG,GAAAyN,QAAAtL,EAAAtC,GAAAgN,UAAAa,MAAA,IAQAlI,QAAA,MAAA,SAAArD,EAAAtC,GAEA,MAAAG,GAAAyN,QAAAtL,EAAAtC,GAAAgN,UAAAc,MAAA,IAYA,QAAAC,KACAC,EAAAjL,MAAAkL,EAAAC,YACAF,EAAAjL,MAAA,IACAiL,EAAAG,OAAAC,KAAA,GAEAJ,EAAAG,OAAAC,KAAA,GASA,QAAAC,KACAN,IAEAL,EAAAvK,KAAA,QAAA6K,EAAAjL,OAEAoK,EAAAzJ,OAAAsK,EAAAG,OAAAC,KAAAJ,EAAAjL,MAAAiL,EAAAG,OAAAG,MAAAN,EAAAG,OAAAC,OACAb,EAAA7J,OAAAsK,EAAAG,OAAA3N,IAAAwN,EAAA1N,OAAA0N,EAAAG,OAAAI,OAAAP,EAAAG,OAAA3N,MAGAgO,EAAA5L,MAAAuK,GACAsB,OAAA,UACAC,MAAAV,EAAAjL,MAAA,IAAA,EAAA,IACA4L,WAAA,SAAArM,GACA,MAAA+K,GAAA/K,KAEAsM,eAAA,IAEAC,EAAAjM,MAAA2K,GACAkB,OAAAT,EAAAjL,MAAA,IAAA,QAAA,QACA6L,eAAA,IAEAE,EACA3L,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,MAEAW,EACA5L,KAAA,KAAA6K,EAAAG,OAAAC,MAEAJ,EAAAjL,MAAA,IACAiM,EACA7L,KAAA,YAAA,aAAA6K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA3N,IAAA,EAAA,KAEAwO,EACA7L,KAAA,YAAA,aAAA6K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA3N,IAAA,EAAA,KAKAyO,EAAAC,EAAA,SAAA5M,GACA,MAAA6K,GAAAE,EAAAC,MAAAhL,EAAAR,SAEAgL,EAAA,SAAAxK,GACA,MAAAiL,IAAAjL,EAAAyK,QAEAoC,QAAA,SAAA7M,GACA,MAAAiL,IAAAjL,EAAAyK,QAIAqC,EACA9H,KAAAkH,GAEAQ,EACA1H,KAAAuH,GAGAQ,EACAlM,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,KAAA,IACAjL,KAAA,IAAAoK,EAAA,MAAA,GAEA+B,EACAnM,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,KAAA,IACAjL,KAAA,IAAAoK,EAAA,IAAA,GAEAI,EAAAxK,KAAA,IAAA8L,GApQA,GAqBAtB,GArBAtC,EAAA,cACA4C,EAAArO,SAAA2P,cAAAlE,GAGA2C,GACAG,QACA3N,IAAA,GACA8N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEArL,MAAAkL,EAAAC,YACA5N,OAAA,KAMAuN,GAAA,MACAC,GAAA,OAQAT,EAAAlM,GAAAqO,KAAA/J,OAAA,MAEA0H,EAAAhM,GAAAqO,KAAA5M,QACA2K,EAAApM,GAAAyB,MAAA6M,OACAjB,EAAArN,GAAA6B,IAAA0M,OACAb,EAAA1N,GAAA6B,IAAA0M,OACAT,EAAA9N,GAAA6B,IAAA2M,OAGAjC,EAAAvM,GAAA8B,OAAAoI,GACAnI,OAAA,OACAC,KAAA,QAAA6K,EAAAjL,OACAI,KAAA,SAAA6K,EAAA1N,QAGA8O,EAAA1B,EAAAxK,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,gBAAA6K,EAAA1N,OAAA0N,EAAAG,OAAAI,OAAAP,EAAAG,OAAA3N,KAAA,KACA8G,KAAAkH,GAEAM,EAAAM,EACAlM,OAAA,QACAC,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,MACAjL,KAAA,IAAA6K,EAAAG,OAAAI,QACApL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,QAEAkL,EAAAtB,EAAAxK,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,aAAA6K,EAAAG,OAAAC,KAAA,KAAAJ,EAAAG,OAAA3N,IAAA,EAAA,KACA8G,KAAAuH,GAEAE,EAAAC,EACA9L,OAAA,QACAC,KAAA,KAAA6K,EAAAG,OAAA3N,KACA2C,KAAA,KAAA6K,EAAAG,OAAAC,MACAjL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,qDAGAuL,EAAA3B,EAAAxK,OAAA,QACAC,KAAA,QAAA,YACAA,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,KAAA,IACAjL,KAAA,IAAAoK,EAAA,MAAA,GACApK,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,MAEAwL,EAAA5B,EAAAxK,OAAA,QACAC,KAAA,QAAA,aACAA,KAAA,IAAA6K,EAAAjL,MAAAiL,EAAAG,OAAAC,KAAA,IACAjL,KAAA,IAAAoK,EAAA,IAAA,GACApK,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,MAGA3C,IAAA8B,OAAA,eACAC,OAAA,OACAC,KAAA,QAAA,qBAOAhC,IAAAyO,IAAA,2BAAA,SAAAhM,GACA6I,EAAA7I,GACAyK,IAEAvO,OAAA+P,iBAAA,SAAAxB,QCvGA,WACA,YAkEA,SAAAyB,GAAAtD,GACA,GAAAuD,GAAA,GAAAC,KACAD,GAAAE,SAAAzD,EAAA0D,WAAA,GACA,IAAAnI,GAAAoI,KAAAC,KAAAL,EAAAG,WAAA,EACA,OAAA,IAAAnI,EAyPA,QAAAsI,KAEAlP,GAAAgB,UAAA,aAAAwD,QAAA,aAAA,GAAAA,QAAA,WAAA,GACAxE,GAAAgB,UAAA,cAAAwD,QAAA,aAAA,GAAAA,QAAA,WAAA,GAAAxC,KAAA,IAAAhC,GAAA6B,IAAAsN,SAAAC,KAAA,UAAAC,KAAA,KAAA7P,MAAA,eAAA,KACA8P,EAAA9K,QAAA,UAAA,GACA+K,EAAA/K,QAAA,UAAA,GAGA,QAAAgL,GAAArO,EAAAtC,GAEAmB,GAAAgB,UAAA,aAAAwD,QAAA,aAAA,GACAxE,GAAAgB,UAAA,cAAAwD,QAAA,aAAA,GAAAxC,KAAA,IAAAhC,GAAA6B,IAAAsN,SAAAC,KAAA,UAAAC,KAAA,KAAA7P,MAAA,eAAA,KAMAQ,GAAA8B,OAAArB,MAAAqB,OAAA,aAAA0C,QAAA,aAAA,GAAAA,QAAA,WAAA,EAEA,IACAiL,IADAzP,GAAA8D,MAAArD,MAAA,GACAT,GAAA8D,MAAArD,MAAA,IACAiP,EAAA/D,EAAAgE,OAAAF,GACAG,EAAA5P,GAAAsE,OAAA,OAAAoL,EAEAJ,GAAA9K,QAAA,UAAA,GACA3D,KAAA+O,GAGAL,EAAA/K,QAAA,UAAA,GAGA,QAAAqL,GAAA1O,GAGA,GAAA2O,GAAA9P,GAAA8D,MAAArD,MAAA,GACAgP,EAAAzP,GAAA8D,MAAArD,MAAA,GACAiP,EAAA/D,EAAAgE,OAAAF,GACAG,EAAA5P,GAAAsE,OAAA,OAAAoL,EAEAH,GAAAvN,KAAA,YAAA,aAAA8N,EAAA,IAAAL,EAAA,KAIAH,EACA9P,MAAA,MAAAQ,GAAAyH,MAAAsI,MAAA,GAAA,MACAvQ,MAAA,OAAAQ,GAAAyH,MAAAuI,MAAA,EAAA,MACAnP,KAAA+O,GAKA,QAAA1C,KACA+C,EAAAnD,EAAAC,aAEAgB,EAAAmC,aAAA,EAAAtO,IACAuO,EAAAD,aAAA,EAAAtO,IACA+J,EAAApJ,OAAApD,EAAA,IACAiR,EAAA3O,MAAAsM,GACAsC,EAAA5O,MAAAsM,GACAuC,EAAA7O,MAAAkK,GAEA6C,EAAAT,EAAA,SAAA5M,GACA,MAAA4M,GAAA5M,EAAAoP,SAEA5E,EAAA,SAAAxK,GACA,MAAAwK,GAAAxK,EAAAqJ,SAGAgG,EACAxO,KAAA,YAAA,eAAA7C,EAAA,KACAgH,KAAAiK,GAEAK,EACAzO,KAAA,YAAA,gBAAA7C,EAAA,IAAA,KACAgH,KAAAkK,GAEAK,EACA1O,KAAA,IAAAJ,EAAAoL,EAAAC,MACAjL,KAAA,IAAAgL,EAAAI,OAAA,IAGAuD,EAAAxK,KAAAmK,GAEAM,EAAA5O,KAAA,QAAA6O,GAAA7O,KAAA,SAAA8O,GAUAC,EAAA/O,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAArN,EAAAsJ,UAGAuG,EAAAhP,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAArN,EAAAsJ,UAKA,QAAAwF,GAAAgB,GACAJ,EAAAI,EACArP,EAAAiP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAhO,EAAA2R,EAAA9D,EAAA3N,IAAA2N,EAAAI,OAGA,QAAA8D,KACA,GAAAC,IACA,iBACA,WACA,SACA,aAEAC,GACA,oBACA,WACA,SACA,aAEAC,EAAAT,EAAA7O,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,aAAAgL,EAAAC,KAAA,OACAqE,EAAA,EAKAH,GAAArH,QAAA,SAAAyH,EAAA1S,GACA,GAAA2S,GAAAH,EAAAtP,OAAA,KACAC,KAAA,QAAA,eAAAuP,GACAvP,KAAA,YAAA,eAAAnD,EAAAyS,EAAA,IAEAE,GAAAzP,OAAA,YACAC,KAAA,QAAA,eAAAuP,GACAvP,KAAA,KAAA,GACAA,KAAA,KAAA,GACAA,KAAA,KAAA,IACAA,KAAA,KAAA,GACAxC,MAAA,SAAAiS,EAAA5S,IACAW,MAAA,mBAAAkS,EAAA7S,IACAW,MAAA,eAAAmS,EAAA9S,IAEA2S,EAAAzP,OAAA,QACAC,KAAA,QAAA,eAAAuP,GACAvP,KAAA,IAAA,IACAA,KAAA,IAAA,IACAW,KAAAyO,EAAAvS,MAldA,GAAA+S,GAAA,kBACA9E,EAAArO,SAAA2P,cAAA,mBAEAyD,IACAxG,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAEA5G,KAAA,GAAAwD,MAAA,cACAiD,eAAA,OACAC,SAAA,OACAC,OAAA,OACAC,UAAA,SAMAC,EAAAlS,GAAAqO,KAAA/J,OAAA,MASAmN,GAAA,UAAA,UAAA,UAAA,WACAE,GAAA,QAAA,QAAA,QAAA,OACAD,GAAA,cAAA,UAAA,UAAA,WACAS,GAAA,SAAA,SAAA,SAAA,UACAC,GAAA,MAAA,QAAA,QAAA,OACAC,GAAA,UAAA,UAAA,UAAA,WACAC,EAAA,OAOAtF,GACA3N,IAAA,GACA8N,MAAA,GACAC,OAAA,GACAH,KAAA,IAGA4D,EAAA,IACAC,EAAA,IACAlP,EAAAiP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAhO,EAAA2R,EAAA9D,EAAA3N,IAAA2N,EAAAI,OAGAW,EAAA/N,GAAAyB,MAAA8Q,UAAArC,aAAA,EAAAtO,IACAuO,EAAAnQ,GAAAyB,MAAA8Q,UAAArC,aAAA,EAAAtO,IAEA+J,EAAA3L,GAAAyB,MAAA+Q,SAAAjQ,OAAApD,EAAA,IAEAsT,EAAAzS,GAAAyB,MAAA8Q,UAAAhQ,MAAAkP,GAEAiB,EAAA1S,GAAAyB,MAAA8Q,UAAAhQ,MAAAoP,GAEAgB,EAAA3S,GAAAyB,MAAA8Q,UAAAhQ,MAAAmP,GAEAkB,EAAA5S,GAAAyB,MAAA8Q,UAAAhQ,MAAA4P,GAEAU,EAAA7S,GAAAyB,MAAA8Q,UAAAhQ,MAAA6P,GAEAU,EAAA9S,GAAAyB,MAAA8Q,UAAAhQ,MAAA8P,GAEAjC,EAAApQ,GAAA6B,IAAA0M,OACA9M,MAAAsM,GACAT,OAAA,UACAC,MAAAvN,GAAAqO,KAAA0E,OAAA,GACAvF,WAAAmB,GAGA0B,EAAArQ,GAAA6B,IAAA0M,OACA9M,MAAAsM,GACAR,MAAAvN,GAAAqO,KAAA9C,MAAA,GACAiC,WAAA0E,GACAc,SAAA,EAAA,GACAC,YAAA,GACA3F,OAAA,UAGA4F,EAAAlT,GAAAsE,OAAA,OAEAgM,EAAAtQ,GAAA6B,IAAA0M,OACA9M,MAAAkK,GACA2B,OAAA,QACAE,WAAA0F,GACA3F,MAAA,GACAyF,SAAA,EAAA,GACAC,YAAA,GAKA3D,EAAAtP,GAAA8B,OAAA,QAAAC,OAAA,OAAAC,KAAA,QAAA,eAEAwM,EAAAxO,GAAA6B,IAAA2M,OACAT,EAAA,SAAA5M,GACA,MAAA4M,GAAA5M,EAAAoP,SAEA5E,EAAA,SAAAxK,GACA,MAAAwK,GAAAxK,EAAAqJ,SAGAoG,EAAA5Q,GAAA8B,OAAArD,SAAA2P,cAAAwD,IACA7P,OAAA,OACAoR,EAAAvC,EAAA7O,OAAA,KACAC,KAAA,YAAA,aAAAgL,EAAAC,KAAA,IAAAD,EAAA3N,IAAA,KAEA+T,EAAApT,GAAAwL,KAAAqG,EAAA,IAAAwB,OAAA,SAAA/I,GACA,MAAAA,KAAAgI,GAGAG,GAAAnQ,OAAA8Q,GACAV,EAAApQ,OAAA8Q,GACAT,EAAArQ,OAAA8Q,GACAR,EAAAtQ,OAAA8Q,GACAP,EAAAvQ,OAAA8Q,GACAN,EAAAxQ,OAAA8Q,EAEA,IAAAE,GAAAF,EAAApP,IAAA,SAAAuP,GACA,OACAA,KAAAA,EACA9I,OAAAoH,EAAA7N,IAAA,SAAA7C,GACA,OACAoS,KAAAA,EACAhD,MAAApP,EAAAmR,GACA9H,OAAArJ,EAAAoS,QAOAxF,GAAAzL,OAAAuP,EAAA7N,IAAA,SAAA7C,GACA,MAAAA,GAAAkK,QAGA8E,EAAA7N,OAAAuP,EAAA7N,IAAA,SAAA7C,GACA,MAAAA,GAAAkK,QAGAM,EAAArJ,QACAtC,GAAAwT,IAAAF,EAAA,SAAAG,GACA,MAAAzT,IAAAwT,IAAAC,EAAAhJ,OAAA,SAAAtJ,GAEA,MAAA,OAGAnB,GAAAqM,IAAAiH,EAAA,SAAAG,GACA,MAAAzT,IAAAqM,IAAAoH,EAAAhJ,OAAA,SAAAtJ,GACA,MAAAA,GAAAqJ,WAKA,IAAAgG,GAAA2C,EAAApR,OAAA,KACAC,KAAA,QAAA,cACAA,KAAA,YAAA,eAAA7C,EAAA,KACAgH,KAAAiK,GAOAK,GALAD,EAAAzO,OAAA,QACAC,KAAA,QAAA,QACAxC,MAAA,eAAA,SACA2G,KAAAiK,GAEA+C,EAAApR,OAAA,KACAC,KAAA,QAAA,YACAA,KAAA,YAAA,gBAAA7C,EAAA,IAAA,KACAgH,KAAAkK,IACAK,EAAAD,EACA1O,OAAA,QACAC,KAAA,IAAAJ,EAAAoL,EAAAC,MACAjL,KAAA,IAAAgL,EAAAI,OAAA,IACApL,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,WAGAgO,EAAAwC,EAAApR,OAAA,KACAC,KAAA,QAAA,cACAmE,KAAAmK,GACAvO,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,IACAA,KAAA,KAAA,OACAA,KAAA,QAAA,oBACAW,KAAA,yBAEA+Q,EAAAP,EAAAnS,UAAA,WACAyB,KAAA6Q,GACA5Q,QAAAX,OAAA,KACAC,KAAA,QAAA,cAGA+O,EAAA2C,EAAA3R,OAAA,QACAC,KAAA,QAAA,QACAA,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAArN,EAAAsJ,UAEAjL,MAAA,SAAA,SAAA2B,GACA,MAAAsR,GAAAtR,EAAAoS,QAEA/T,MAAA,eAAA,SAAA2B,GACA,MAAAuR,GAAAvR,EAAAoS,QAEA/T,MAAA,mBAAA,SAAA2B,GACA,MAAAwR,GAAAxR,EAAAoS,QAEA/T,MAAA,OAAA,QAGAwR,EAAA0C,EAAA3R,OAAA,QACAC,KAAA,QAAA,gBACAA,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAArN,EAAAsJ,UAEAzI,KAAA,QAAA,wCACAxC,MAAA,OAAA,QAoCA+P,EAAA4D,EAAApR,OAAA,KACAC,KAAA,QAAA,SACAwC,QAAA,UAAA,EAEA+K,GAAAxN,OAAA,UACAvC,MAAA,eAAA,GACAwC,KAAA,IAAA,GACAA,KAAA,iBAAA,QAEAhC,GAAAgB,UAAA,gBACAR,GAAA,YAAAgP,GACAhP,GAAA,WAAA0O,GACA1O,GAAA,YAAAqP,GA4JA3C,IACAgE,IAEAvS,OAAA+P,iBAAA,SAAAxB,MC7dA,WAibA,QAAAA,KACA+C,EAAAnD,EAAAC,aAEA6D,EAAA5O,KAAA,QAAA6O,GAAA7O,KAAA,SAAA8O,GACA/C,EAAAxL,OAAA,EAAAX,IACA+J,EAAApJ,OAAApD,EAAA,IAEAwU,EACAlS,MAAAsM,GACAP,WAAA0E,GACA3E,MAAA3L,EAAA,IAAA,EAAA,IACA0L,OAAA,UACAsG,cAAA,GAEAC,EACApS,MAAAkK,GACAqH,SAAApR,GACA0L,OAAA,SACAE,WAAAsG,GAGAtF,EAAAT,EAAA,SAAA5M,GACA,MAAA4M,GAAA5M,EAAA4S,OAEApI,EAAA,SAAAxK,GACA,MAAAwK,GAAAxK,EAAAqJ,SAEAwD,QAAA,SAAA7M,GACA,MAAAwK,GAAAxK,EAAAqJ,SAGAwJ,EAAAhS,KAAA,YAAA,eAAA7C,EAAA,KAAAgH,KAAAwN,GACAM,EAAA9N,KAAA0N,GACAK,EAAAlT,UAAA,oBAAAgB,KAAA,KAAA,GAAAA,KAAA,KAAA,GAAAxC,MAAA,cAAA,OACA2U,EAAAnS,KAAA,QAAAJ,GAAAI,KAAA,SAAA7C,GAGA+R,IACAkD,IACAC,IAIA,QAAApE,GAAAqE,GACAzD,EAAAyD,EACA1S,EAAAiP,EAAA7D,EAAAC,KAAAD,EAAAG,MAGA,QAAAoH,KACAlD,EAAAmD,QAAAC,OAAAP,EAAAnS,OAAA,UAAAC,KAAA,QAAA,kBAAAA,KAAA,IAAA,GACAqP,EAAAmD,QAAA7R,KAAAuR,EAAAnS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,iBAAAW,KAAA,WACA0O,EAAAqD,QAAAD,OAAAP,EAAAnS,OAAA,UAAAC,KAAA,QAAA,kBAAAA,KAAA,IAAA,GACAqP,EAAAqD,QAAA/R,KAAAuR,EAAAnS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,iBAAAW,KAAA,WACA0O,EAAAsD,UAAAF,OAAAP,EAAAnS,OAAA,UAAAC,KAAA,QAAA,oBAAAA,KAAA,IAAA,GACAqP,EAAAsD,UAAAhS,KAAAuR,EAAAnS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,mBAAAW,KAAA,aACA0O,EAAAuD,MAAAH,OAAAP,EAAAnS,OAAA,UAAAC,KAAA,QAAA,gBAAAA,KAAA,IAAA,GACAqP,EAAAuD,MAAAjS,KAAAuR,EAAAnS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,eAAAW,KAAA,SACA0O,EAAAwD,KAAAJ,OAAAP,EAAAnS,OAAA,UAAAC,KAAA,QAAA,eAAAA,KAAA,IAAA,GACAqP,EAAAwD,KAAAlS,KAAAuR,EAAAnS,OAAA,KAAAA,OAAA,QAAAC,KAAA,QAAA,cAAAW,KAAA,QAGA,QAAAuO,KACA,GAAA4D,GAAA,EACAC,EAAA,EACA1D,GAAAmD,QAAAC,OAAAzS,KAAA,KAAAJ,EAAAoT,GAAAhT,KAAA,KAAA8S,EAAA,EAAAC,GACA1D,EAAAmD,QAAA7R,KAAAX,KAAA,IAAAJ,EAAAqT,GAAAjT,KAAA,IAAA8S,EAAA,EAAAC,EAAA,GACA1D,EAAAqD,QAAAD,OAAAzS,KAAA,KAAAJ,EAAAoT,GAAAhT,KAAA,KAAA8S,EAAA,EAAAC,GACA1D,EAAAqD,QAAA/R,KAAAX,KAAA,IAAAJ,EAAAqT,GAAAjT,KAAA,IAAA8S,EAAA,EAAAC,EAAA,GACA1D,EAAAsD,UAAAF,OAAAzS,KAAA,KAAAJ,EAAAoT,GAAAhT,KAAA,KAAA8S,EAAA,EAAAC,GACA1D,EAAAsD,UAAAhS,KAAAX,KAAA,IAAAJ,EAAAqT,GAAAjT,KAAA,IAAA8S,EAAA,EAAAC,EAAA,GACA1D,EAAAuD,MAAAH,OAAAzS,KAAA,KAAAJ,EAAAoT,GAAAhT,KAAA,KAAA8S,EAAA,EAAAC,GACA1D,EAAAuD,MAAAjS,KAAAX,KAAA,IAAAJ,EAAAqT,GAAAjT,KAAA,IAAA8S,EAAA,EAAAC,EAAA,GACA1D,EAAAwD,KAAAJ,OAAAzS,KAAA,KAAAJ,EAAAoT,GAAAhT,KAAA,KAAA8S,EAAA,EAAAC,GACA1D,EAAAwD,KAAAlS,KAAAX,KAAA,IAAAJ,EAAAqT,GAAAjT,KAAA,IAAA8S,EAAA,EAAAC,EAAA,GAGA,QAAAG,KAEA,IADAnE,EAAA2D,QAAAR,EAAAnS,OAAA,QAAAC,KAAA,QAAA,gBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,WAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GACAuW,IADA9I,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,IACAzH,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,MAEA4K,IAAA,GAKAlB,EAAAnS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAmL,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,MAEA/R,KAAA,KAAA+L,EAAAzB,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,MACA/R,KAAA,KAAA2J,EAAAW,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADA+O,EAAA4D,UAAAT,EAAAnS,OAAA,QAAAC,KAAA,QAAA,kBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,aAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GACAuW,IADA9I,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAAkV,IACAzH,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAA2L,MAEA4K,IAAA,GAKAlB,EAAAnS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,qBAAAmL,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAAkV,MAEA/R,KAAA,KAAA+L,EAAAzB,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAAkV,MACA/R,KAAA,KAAA2J,EAAAW,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADA+O,EAAA8D,KAAAX,EAAAnS,OAAA,QAAAC,KAAA,QAAA,aAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,QAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GACAuW,IADA9I,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAAkV,IACAzH,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAA2L,MAEA4K,IAAA,GAKAlB,EAAAnS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,gBAAAmL,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAAkV,MAEA/R,KAAA,KAAA+L,EAAAzB,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAAkV,MACA/R,KAAA,KAAA2J,EAAAW,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADA+O,EAAAyD,QAAAN,EAAAnS,OAAA,QAAAC,KAAA,QAAA,gBAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,WAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GACAuW,IADA9I,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,IACAzH,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,MAEA4K,IAAA,GAKAlB,EAAAnS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAmL,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,MAEA/R,KAAA,KAAA+L,EAAAzB,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,MACA/R,KAAA,KAAA2J,EAAAW,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,QAKA,IADA+O,EAAA6D,MAAAV,EAAAnS,OAAA,QAAAC,KAAA,QAAA,cAAAA,KAAA,iBAAA,QACAnD,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,SAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GACAuW,IADA9I,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAAkV,IACAzH,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAA2L,MAEA4K,IAAA,GAKAlB,EAAAnS,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,iBAAAmL,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAAkV,MAEA/R,KAAA,KAAA+L,EAAAzB,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAAkV,MACA/R,KAAA,KAAA2J,EAAAW,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAA2L,QACAxI,KAAA,IAAA,GACAA,KAAA,iBAAA,SAMA,QAAAoS,KACArD,EAAA2D,QAAA1S,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,WAAA1K,UAEAsG,EAAAyD,QAAAxS,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,WAAA1K,UAEAsG,EAAA4D,UAAA3S,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,aAAA1K,UAEAsG,EAAA6D,MAAA5S,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,SAAA1K,UAEAsG,EAAA8D,KAAA7S,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,QAAA1K,UAQA,QAAA4J,KAeA,IAXAH,EAAApS,OAAA,iBACAb,aACAC,SAAA,KACAmU,MAAA,KACArT,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,WAAA1K,UAMA5L,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,WAAA1K,OAAA3L,OAAAD,IAAA,CACA,GAAAyW,GAAA,oBAAAhJ,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,GAGAzH,GAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,OAAA,EACA0J,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA4M,GAAAzB,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,OAEA/R,KAAA,KAAA,SAAAb,GACA,MAAAwK,GAAAW,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAkS,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,IAAA,GAeA,IAPAkS,EAAApS,OAAA,mBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,aAAA1K,UAGA5L,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,aAAA1K,OAAA3L,OAAAD,IAAA,CACA,GAAAyW,GAAA,sBAAAhJ,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAAkV,GAGAzH,GAAA6I,EAAA,aAAA1K,OAAA5L,GAAA2L,OAAA,EACA0J,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA4M,GAAAzB,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAAkV,OAEA/R,KAAA,KAAA,SAAAb,GACA,MAAAwK,GAAAW,EAAA6I,EAAA,aAAA1K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAkS,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPAkS,EAAApS,OAAA,cACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,QAAA1K,UAGA5L,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,QAAA1K,OAAA3L,OAAAD,IAAA,CAGA,GAAAyW,GAAA,iBAAAhJ,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAAkV,IACAwB,EAAAjJ,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAA2L,KAKA8B,GAAA6I,EAAA,QAAA1K,OAAA5L,GAAA2L,OAAA,EACA0J,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA4M,GAAAzB,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAAkV,OAEA/R,KAAA,KAAA,SAAAb,GACA,MAAAwK,GAAAW,EAAA6I,EAAA,QAAA1K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAkS,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPAkS,EAAApS,OAAA,iBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,WAAA1K,UAGA5L,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,WAAA1K,OAAA3L,OAAAD,IAAA;AAGA,GAAAyW,GAAA,oBAAAhJ,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,IACAwB,EAAAjJ,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,KAKA+K,IAAA,EACArB,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA4M,GAAAzB,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAAkV,OAEA/R,KAAA,KAAA,SAAAb,GACA,MAAAwK,GAAAW,EAAA6I,EAAA,WAAA1K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAkS,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPAkS,EAAApS,OAAA,eACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAqN,GAAAlC,EAAA6I,EAAA,SAAA1K,UAGA5L,EAAA,EAAAA,EAAAyN,EAAA6I,EAAA,SAAA1K,OAAA3L,OAAAD,IAAA,CAEA,GAAAyW,GAAA,kBAAAhJ,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAAkV,IACAwB,EAAAjJ,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAA2L,KAKA+K,IAAA,EACArB,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAA4M,GAAAzB,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAAkV,OAEA/R,KAAA,KAAA,SAAAb,GACA,MAAAwK,GAAAW,EAAA6I,EAAA,SAAA1K,OAAA5L,GAAA2L,SAEAxI,KAAA,IAAA,GAEAkS,EAAAlT,UAAAsU,GACArU,aACAC,SAAA,KACAc,KAAA,IAAA,IAoQA,QAAAoN,GAAAjO,EAAAtC,GAqBA,MAnBAmB,IAAAwL,KAAArK,GAAA2I,QAAA,SAAAQ,GACAnJ,EAAAmJ,IAAAnJ,EAAAmJ,GACA,OAAAA,IACAA,IAAAgC,GAQAA,EAAAhC,GAAA,OAAAnI,MACA4R,IAAA5S,EAAA4S,IACAvJ,MAAArJ,EAAAmJ,KATAgC,EAAAhC,IACAG,SACAsJ,IAAA5S,EAAA4S,IACAvJ,MAAArJ,EAAAmJ,SAYAnJ,EA9kCA,GAAA2L,GAAArO,SAAA2P,cAAA,eACAoH,GAEA,WACA,QACA,WACA,QACA,SACA,SACA,WACA,UACA,UACA,WACA,YACA,aACA,QACA,WACA,UACA,QACA,YACA,SACA,OACA,OACA,aACA,QACA,SACA,UACA,cACA,aACA,UACA,UACA,SACA,cACA,UACA,YACA,aACA,YACA,SACA,SACA,SACA,aACA,UACA,WACA,YACA,WACA,cACA,YACA,WACA,aACA,WACA,cACA,YACA,WACA,aACA,YACA,WACA,aACA,YACA,SACA,WACA,SACA,aACA,WACA,UACA,aACA,UACA,WACA,UACA,eACA,WACA,WACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,SACA,UACA,YACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,YACA,UACA,kBACA,iBACA,iBACA,UACA,cACA,SACA,YACA,WACA,SACA,QACA,UACA,YACA,YACA,WACA,YACA,UACA,aACA,aACA,WACA,WACA,UACA,WACA,aACA,OACA,aACA,SACA,UACA,UACA,SACA,YACA,kBACA,aACA,SACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,UACA,YACA,UACA,WACA,YACA,cACA,SACA,OACA,aACA,UACA,WACA,YACA,YACA,eACA,WACA,MACA,YACA,QACA,aACA,WACA,YACA,SACA,UACA,YACA,aACA,SACA,SACA,YACA,OACA,YACA,SACA,aACA,YACA,aACA,SACA,cACA,aACA,UACA,eACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,gBACA,cACA,YACA,UACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,aACA,kBACA,SACA,YACA,SACA,UACA,aACA,aACA,eACA,iBACA,WACA,UACA,cACA,SACA,UACA,YACA,cACA,mBACA,iBACA,cACA,cACA,eACA,cACA,aACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,aACA,aACA,aACA,WACA,WACA,YACA,eACA,SACA,WACA,UACA,UACA,WACA,SACA,WACA,YACA,WACA,WACA,OACA,SACA,YACA,UACA,UACA,QACA,YACA,cACA,WACA,SACA,QACA,WACA,UACA,SACA,YACA,YACA,WACA,UACA,aACA,aACA,WACA,aACA,cACA,cACA,eACA,cACA,YACA,UACA,cACA,WACA,cACA,WACA,YACA,OACA,aACA,UACA,aACA,SACA,aACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,WACA,QACA,eACA,YACA,QACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,SACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,UACA,SACA,eACA,kBACA,iBACA,cACA,kBACA,kBACA,cACA,cACA,YACA,WACA,cACA,cACA,SACA,WACA,WACA,WACA,UACA,UACA,YACA,eACA,eACA,aACA,aACA,aACA,UACA,WACA,SACA,YACA,cACA,WACA,YAEAL,EAAA,gBAEAnI,GACA3N,IAAA,EACA8N,MAAA,GACAC,OAAA,GACAH,KAAA,IAEA4D,EAAA/D,EAAAC,YACA+D,EAAA,IACAlP,EAAAiP,EAAA7D,EAAAC,KAAAD,EAAAG,MACAhO,EAAA2R,EAAA9D,EAAA3N,IAAA2N,EAAAI,OAEAqI,EAAAzV,GAAA0V,SAAA,SAAAvU,GACA,MAAAA,GAAA4S,MACA9G,KACA6G,EAAA9T,GAAAsE,OAAA,QACA4N,EAAAlS,GAAAsE,OAAA,KAGAgI,KAEAyB,EAAA/N,GAAAyB,MAAA+Q,SAEA7G,EAAA3L,GAAAyB,MAAA+Q,SAIAmB,GAFA3T,GAAAyB,MAAAkU,aAEA3V,GAAA6B,IAAA0M,QAEAsF,EAAA7T,GAAA6B,IAAA0M,OAEAC,EAAAxO,GAAA6B,IAAA2M,OAGAoC,EAAA5Q,GAAA8B,OAAA,eAAAC,OAAA,OAEAmS,EAAAtD,EACA7O,OAAA,KACAC,KAAA,YAAA,aAAAgL,EAAAC,KAAA,IAAAD,EAAA3N,IAAA,KAGA2U,EAAAE,EAAAnS,OAAA,KAAAC,KAAA,QAAA,aACAgS,GACAjS,OAAA,QACAC,KAAA,IAAA,KACAA,KAAA,IAAA,IACAA,KAAA,cAAA,UACAW,KAAA,OAEA,IAAAsR,GAAA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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        event.preventDefault();\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n$('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\n\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n        if (target.length) {\n            $('html,body').animate({\n                scrollTop: target.offset().top\n            }, 500);\n            return false;\n        }\n    }\n    // });\n\n\n});\n\n\n/////////////////////////////Accordion\n// $(function() {\n//     var icons = {\n//         header: \"iconClosed\",\n//         activeHeader: \"iconOpen\",\n//         hoverHeader: 'iconHover'\n\n//     };\n//     $(\"#accordion\").accordion({\n//         icons: icons,\n//         heightStyle: \"content\"\n//     });\n// });\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$('.js-play-video').click(function() {\n    var $target = $($(this).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n\t//for (i = 0; i < usStates.features.length; i++) {\r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n\t\t//return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);\r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    //console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n           // console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            //console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n       // console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","/* global d3, $, queue */\n// Dependency on queue.js\n\n(function() {\n    \"use strict\";\n\n    // Heights & Widths\n    var legendHeight = 60,\n\tlegendWidth = '100%',\n\tmapWidth = 600,\n\tmapHeight = 400;\n\n    var currentyear;\n    var svgContainer;\n    var opChgScale;\n\n    // Helper functions\n\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n\n\n    function initialize() {\n\tqueue()\n\t//should be town polym data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.json, \"us_states_5m.geo.json\")\n\t//should be opioid death data\n\t.defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n\t//.defer(d3.csv, \"us_pop.csv\")\n\t.awaitAll(generateMap);\n    }\n\n    function generateMap(error, results) {\n\n\tvar maTowns = results[0];\n\tvar maOpioid = results[1];\n\n\n\t$('.controls-map').click(function() {\n\t    $(\"#odMap_timeline\").val($(this).data('select'));\n\t    setSymbology($(this).data('select'));\n\t});\n\n\tfor (var i = 0; i < maTowns.features.length; i++) {\n\t    if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\n\t\tconsole.log('ASSERT failure for index: ' + i);\n\t\tconsole.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n\t\t// alert('Input data corrupted: generation of map terminated.');\n\t\treturn;\n            }\n\t    maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n\t}\n\n\tsvgContainer = d3.select(\"#odMap_map\")\n\t    .classed(\"svg-container\", true) //container class to make it responsive\n\t    .append(\"svg\")\n\t    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n\t    .attr(\"viewBox\", \"0 0 \"+mapWidth+\" \"+mapHeight)\n\t    //class to make it responsive\n\t    .classed(\"svg-content-responsive\", true)\n\t    .style(\"border\", \"0px solid steelblue\");\n\n\tvar tooltip = d3.select('#odMap_map').append('div')\n\t    .attr('class', 'hidden vis-tooltip');\n\n\t//#eff3ff\n\n\topChgScale = d3.scale.threshold()\n\t    .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\n\t    .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\n\topChgScale.domainStrings = function() {\n\t    return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64'\n\t    ]);\n\t};\n\n\n\tvar projection = d3.geo.conicConformal()\n\t    .parallels([41 + 43 / 60, 42 + 41 / 60])\n\t    .rotate([71 + 30 / 60, -41])\n\t    .scale([10000])\n\t    .translate([mapWidth/1.8, mapHeight*1.1]);\n\n\tvar geoPath = d3.geo.path()\n\t    .projection(projection);\n\n\tsvgContainer.selectAll(\"path\")\n\t    .data(maTowns.features)\n\t    .enter()\n\t    .append(\"path\")\n\t    .classed(\"deathmap\", true)\n\t    .attr(\"d\", function(d, i) {\n\t\treturn geoPath(d);\n\t    })\n\t    .style(\"stroke\", \"#2f363d\")\n\t    .style(\"stroke-width\", \"0.1px\")\n\t    .style(\"fill\", \"white\")\n\t    .on('mousemove', function(d) {\n\t\tvar mouse = d3.mouse(svgContainer.node()).map(function(d) {\n\t\t    return parseInt(d);\n\t\t});\n\n\t\tvar style = 'left:'+((100*mouse[0]/mapWidth)+3)+'% !important;top:'+(100*mouse[1]/mapHeight)+'% !important;';\n\t\t// Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\n\t\tvar transformX= mouse[0] > mapWidth/2 ? '-160%' : 0,\n\t\t    transformY= mouse[1] > mapHeight/2 ? '-100%' : 0;\n\t\tstyle += 'transform: translate('+transformX+','+transformY+');';\n\n\t\tvar string_base = \"yr\";\n\t\tvar currentvalue = string_base.concat(currentyear);\n\t\tvar currentrate;\n\n\t\tif (d.properties[currentvalue] > 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else if (d.properties[currentvalue] === 0) {\n\t\t    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n\t\t} else {\n\t\t    currentrate = \"N/A*\";\n\t\t}\n\n\t\ttooltip.classed('hidden', false)\n\t\t    .attr('style', style)\n\t\t    .html(\"<strong>\" + toTitleCase(d.properties.TOWN) + \"</strong> | \" + currentrate);\n\t    })\n\n\t    .on('mouseover', function(d, i) {\n\t\td3.select(this).style('fill-opacity', 0.25)\n\t\t    .style(\"stroke\", \"white\")\n\t\t    .style(\"stroke-width\", \"2px\");\n\t    })\n\t    .on('mouseout', function(d, i) {\n\t\ttooltip.classed('hidden', true);\n\t\td3.selectAll('path.deathmap')\n\t\t    .style(\"fill-opacity\", 1)\n\t\t    .style(\"stroke\", \"#2f363d\")\n\t\t\t.style(\"stroke-width\", \"0.1px\");\n\t    });\n\n\n\tgetYear();\n\tgenerateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\n\n\n    } // generateMap\n\n    function getYear() {\n        // initial setting on load\n        $(\"#odMap_timeline\").val(2015);\n        setSymbology(2015);\n        $(\"#odMap_timeline\").on('input change', function() {\n            setSymbology($(this).val());\n        });\n    }\n\n    function setSymbology(year) {\n\n        var szAttr = 'yr' + year;\n        currentyear = year;\n        $('#odMap_titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\n        $('#odMap_fromYear').html(year);\n\n        $('#odMap_source').html('Sources: Massachusetts Department of Public Health,' +\n                             '<br>Massachusetts Registry of Vital Records and Statistics</>');\n\n        svgContainer.selectAll(\"path.deathmap\")\n            .transition()\n            .duration(500)\n            .style(\"fill\", function(d, i) {\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n            });\n    }\n\n    function generateLegend(scale, szDivId, szCaption) {\n\n        var svg = d3.select('#' + szDivId).append(\"svg\")\n\t    .attr(\"width\", legendWidth)\n\t    .attr(\"height\", legendHeight);\n\n        var g = svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        //legendData.push({\n            //d: -9999,\n            //r: '#f1f1f1',\n            //s: 'N/A'\n        //});\n\tfor (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n\tvar unitWidth = 100/legendData.length;\n\n        g.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n\t    .attr(\"height\", legendHeight/3)\n\t    .attr(\"width\", function(d, i) {\n\t\treturn unitWidth+'%';\n\t    })\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        g.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\treturn (i * unitWidth) + (unitWidth/2) + '%';\n            })\n\t    .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        g.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    } // generateLegend()\n\n\n    $(document).ready(initialize);\n})();\n\n\n\n\n\n\n\n// ///////////////////Map Composite\n\n\n\n\n\n\n\n\n\n\n// function app2() {\n//     queue()\n//     //should be town polym data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\n//     //should be opioid death data\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\n//     //.defer(d3.csv, \"us_pop.csv\")\n//     .awaitAll(generateMap2);\n// }\n\n// function generateMap2(error, results) {\n//     $('.controls-map').click(function() {\n//         $(\"#timeline\").val($(this).data('select'));\n//         setSymbology2($(this).data('select'));\n//     });\n\n//     var maTowns = results[0];\n//     var maOpioid = results[1];\n\n//     var currentyear\n\n//     var i;\n//     for (i = 0; i < maTowns.features.length; i++) {\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\n//             // console.log('ASSERT failure for index: ' + i);\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n//             alert('Input data corrupted: generation of map terminated.');\n//             return;\n//         }\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n//     }\n\n//     var width = 960,\n//         height = 450;\n\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"0px solid steelblue\");\n\n//     var tooltip2 = d3.select('#map2').append('div')\n//         .attr('class', 'hidden tooltip2');\n\n//     var opChgScale = d3.scale.threshold()\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\n//         .range(colorbrewer.RdPu[5]);\n//     opChgScale.domainStrings = function() {\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\n//             '15.9-31.5', '>31.5'\n//         ]);\n//     };\n\n//     function toTitleCase(str) {\n//         return str.replace(/\\w\\S*/g, function(txt) {\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n//         });\n//     }\n\n//     var projection = d3.geo.conicConformal()\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\n//         .rotate([71 + 30 / 60, -41])\n//         .scale([10000])\n//         .translate([330, 480]);\n\n//     var geoPath = d3.geo.path()\n//         .projection(projection);\n\n//     var map = svgContainer.selectAll(\"path\")\n//         .data(maTowns.features)\n//         .enter()\n//         .append(\"path\")\n//         .attr(\"d\", function(d, i) {\n//             return geoPath(d);\n//         })\n//         .on('mousemove', function(d) {\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\n//                 return parseInt(d);\n//             });\n//             var string_base = \"yr\"\n//             currentvalue = string_base.concat(currentyear);\n//             var currentrate\n\n//             if (d.properties[currentvalue] > 0) {\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\n//             } else if (d.properties[currentvalue] == 0) {\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n//             } else {\n//                 currentrate = \"N/A*\";\n//             }\n\n\n//             tooltip2.classed('hidden', false)\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\n//         })\n//         .on('mouseover', function(d, i) {\n\n//             var currentState = this;\n//             d3.select(this).style('fill-opacity', 0.25)\n//                 .style(\"stroke\", \"white\")\n//                 .style(\"stroke-width\", \"2px\");\n//         })\n//         .on('mouseout', function(d, i) {\n//             tooltip2.classed('hidden', true);\n//             d3.selectAll('path')\n//                 .style(\"fill-opacity\", 1)\n//                 .style(\"stroke\", \"#2f363d\")\n//                 .style(\"stroke-width\", \"0.1px\");\n//         })\n//         .style(\"stroke\", \"#2f363d\")\n//         .style(\"stroke-width\", \"0.1px\")\n//         .style(\"fill\", \"white\")\n//         .on('mouseenter', function(d, i) {\n\n//             //var string_base = \"yr\"\n//             //currentvalue = string_base.concat(currentyear);\n//             //console.log(d.properties[currentvalue]);\n//         })\n//         .on('mouseleave', function(d) {\n\n//         });\n\n//     var aYears = [\n//         [2000, 2001],\n//         [2001, 2002],\n//         [2002, 2003],\n//         [2003, 2004],\n//         [2004, 2005],\n//         [2005, 2006],\n//         [2006, 2007],\n//         [2007, 2008],\n//         [2008, 2009],\n//         [2010, 2011],\n//         [2011, 2012],\n//         [2012, 2013],\n//         [2013, 2014],\n//         [2014, 2014.5]\n//     ];\n\n//     var index = 0;\n//     getYear();\n\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\n\n//     function getYear() {\n//         setSymbology2(2000);\n//         $(\"#timeline\").on('input change', function() {\n//             var year = $(this).val()\n//             setSymbology2($(this).val());\n//         });\n//     };\n\n\n//     function setSymbology2(year) {\n\n//         var szAttr = 'yr' + year;\n//         currentyear = year\n//         var toyear = eval(year) + 1\n\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\n//         $('#fromYear2').html(year);\n//         $('#titleMidfix2').html('to');\n//         $('#toYear2').html(toyear).append('<span>*</span>');\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\n//                             '<br />Executive Office of Health and Human Services'+\n//                             '<br />(Registry of Vital Records and Statistics,' +\n//                             '<br />Massachusetts Department of Public Health)');\n\n\n\n//         svgContainer.selectAll(\"path\")\n//             .transition()\n//             .duration(500)\n//             .style(\"fill\", function(d, i) {\n\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n//             });\n//     }\n\n//     function generateLegend2(scale, szDivId, szCaption) {\n//         var width2 = 550,\n//             height2 = 80;\n\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\n//             .attr(\"width\", width2)\n//             .attr(\"height\", height2);\n\n//         var g = svg.append(\"g\");\n\n//         // Create data array.\n//         var legendData = [];\n//         legendData.push({\n//             d: -9999,\n//             r: '#f1f1f1',\n//             s: 'N/A'\n//         });\n//         var i;\n//         for (i = 0; i < scale.domain().length; i++) {\n//             legendData.push({\n//                 d: scale.domain()[i],\n//                 r: scale.range()[i],\n//                 s: scale.domainStrings()[i]\n//             });\n//         }\n\n//         g.selectAll(\"rect\")\n//             .data(legendData)\n//             .enter().append(\"rect\")\n//             .attr(\"height\", 20)\n//             .attr(\"width\", 50)\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 20)\n//             .style(\"stroke\", \"black\")\n//             .style(\"stroke-width\", \"0.25px\")\n//             .style(\"fill\", function(d, i) {\n//                 return d.r;\n//             });\n\n//         g.selectAll(\"text\")\n//             .data(legendData)\n//             .enter().append(\"text\")\n//             .attr(\"x\", function(d, i) {\n//                 return i * 55;\n//             })\n//             .attr(\"y\", 60)\n//             .text(function(d, i) {\n//                 return d.s;\n//             });\n\n//         g.append(\"text\")\n//             .attr(\"class\", \"vis-caption\")\n//             .attr(\"y\", 12)\n//             .text(szCaption);\n//     } // generateLegend2()\n// } // generateMap2\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([8600])\n        .translate([280, 360]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.RdPu[6]);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n\t    wrapper.append('span')\n            .text(\"\")\n\t    .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \"+width+\" \"+height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n            //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n            //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n\t\tself.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n                d3.selectAll('path#bsasmap').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.RdPu[6])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\n            '>35-60%', '>60-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n\t    .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n                return (i * (100/legendData.length)) + \"%\";\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n\t    .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n\t\t      return ((i * (100/legendData.length))+7) + \"%\";\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n\t    });\n\n        $maps_sub_legends.append(\"text\")\n\t    .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-treatment-map').click(function() {\n        var date = $(this).data('date');\n        $('#treatmentMaps').attr('data-active-date', date);\n        $('.js-toggle-treatment-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    var yScale = d3.scale.sqrt();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -dimensions.margin.top)\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(1, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    function bindEvents() {\r\n        d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n\r\n        function mouseoutFunc() {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n            tooltip_death.classed(\"hidden\", true);\r\n        }\r\n\r\n        function mouseoverFunc(d, i) {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n            d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n            tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n        }\r\n\r\n        var coordinates = [0, 0];\r\n\r\n        function mousemoveFunc(d) {\r\n            coordinates = d3.mouse(this);\r\n            var x = coordinates[0];\r\n            var y = coordinates[1];\r\n            tooltip_death\r\n                .style(\"top\", y + \"px\")\r\n                .style(\"left\", x + \"px\")\r\n                .style('position', 'absolute')\r\n                .style('z-index', 1001);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\n\n    var chartData = [{\n    \t\"date\": new Date(\"01/01/2014\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.22\",\n    \t\"Heroin\": \"0.41\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2014\"),\n    \t\"FentanylHeroin\": \"0.18\",\n    \t\"Fentanyl\": \"0.19\",\n    \t\"Heroin\": \"0.49\",\n    \t\"Methadone\": \"0.07\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2014\"),\n    \t\"FentanylHeroin\": \"0.14\",\n    \t\"Fentanyl\": \"0.14\",\n    \t\"Heroin\": \"0.53\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2014\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.27\",\n    \t\"Heroin\": \"0.35\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.04\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2015\"),\n    \t\"FentanylHeroin\": \"0.24\",\n    \t\"Fentanyl\": \"0.38\",\n    \t\"Heroin\": \"0.29\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2015\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.43\",\n    \t\"Heroin\": \"0.24\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2016\"),\n    \t\"FentanylHeroin\": \"0.15\",\n    \t\"Fentanyl\": \"0.50\",\n    \t\"Heroin\": \"0.17\",\n    \t\"Methadone\": \"0.04\"\n   }];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n    \tvar date2 = new Date();\n    \tdate2.setMonth(date.getMonth() - 10);\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\n    \treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n      top: 60, // space for the legend\n      right: 15,\n      bottom: 50,\n      left: 42\n    };\n\n    var wrapper_width = 540;\n    var wrapper_height = 400;\n    var width = wrapper_width - margin.left - margin.right;\n    var height = wrapper_height - margin.top - margin.bottom;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n                    \t.scale(x)\n                    \t.orient(\"bottom\")\n                    \t.ticks(d3.time.months, 3)\n                    \t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n                      \t.scale(x)\n                      \t.ticks(d3.time.years, 1)\n                      \t.tickFormat(yearformat)\n                      \t.tickSize(3, 0)\n                      \t.tickPadding(1)\n                      \t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n                    \t.scale(y)\n                    \t.orient(\"left\")\n                    \t.tickFormat(formatPercent)\n                    \t.ticks(5)\n                    \t.tickSize(3, 0)\n                    \t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n              \t.x(function(d) {\n              \t    return x(d.label);\n              \t})\n              \t.y(function(d) {\n              \t    return y(d.value);\n              \t});\n\n    var $svg = d3.select(document.querySelector(rootSelector))\n      .append(\"svg\");\n    var $lines_fent = $svg.append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n      return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n    \treturn {\n    \t    name: name,\n    \t    values: chartData.map(function(d) {\n        \t\treturn {\n        \t\t    name: name,\n        \t\t    label: d[xLabel],\n        \t\t    value: +d[name]\n        \t\t};\n    \t    })\n    \t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(seriesData, function(c) {\n          return d3.min(c.values, function(d) {\n      \t//return d.value;\n      \treturn 0;\n          });\n      }),\n      d3.max(seriesData, function(c) {\n          return d3.max(c.values, function(d) {\n      \treturn d.value;\n          });\n      })\n    ]);\n\n    var x_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-x-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis_fent);\n\n    var x_axis_lines = x_axis.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.style(\"stroke-width\", \"1.5px\")\n    \t.call(xAxis_fent);\n\n    var x_axis2 = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n    \t.call(xAxis2_fent)\n    var x_axis2_text = x_axis2\n    \t.append(\"text\")\n    \t.attr(\"x\", width - margin.left)\n    \t.attr(\"y\", margin.bottom - 32)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-x-axis-label\")\n    \t.text(\"Quarter\");\n\n\n    var y_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-y-axis\")\n    \t.call(yAxis_fent)\n    \t.append(\"text\")\n    \t.attr(\"x\", 0)\n    \t.attr(\"y\", -44)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-y-axis-label\")\n    \t.text(\"Percent Opioid Deaths\");\n\n    var series = $lines_fent.selectAll(\".series\")\n    \t.data(seriesData)\n    \t.enter().append(\"g\")\n    \t.attr(\"class\", \"seriesData\");\n\n\n    var $lines = series.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.style(\"stroke\", function(d) {\n    \t    return color(d.name);\n    \t})\n    \t.style(\"stroke-width\", function(d) {\n    \t    return lineStroke(d.name);\n    \t})\n    \t.style(\"stroke-dasharray\", function(d) {\n    \t    return lineDash(d.name);\n    \t})\n    \t.style(\"fill\", \"none\");\n\n\n    var $lines_hit_area = series.append(\"path\")\n    \t.attr(\"class\", \"hit-area-ext\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n    \t.style(\"fill\", \"none\");\n\n\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Fentanyl & Heroin\");\n\n    // var x_axis_label_m = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Methadone\");\n\n    // var x_axis_label_h = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Heroin\");\n\n    // var x_axis_label_f = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"focus\")\n    \t.classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n    \t.style(\"stroke-width\", 1)\n    \t.attr(\"r\", 6)\n    \t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n    \t.on(\"mouseover\", mouseoverFunc)\n    \t.on(\"mouseout\", mouseoutFunc)\n    \t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n      \tfocus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n    \t//         }\n\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1)\n\n    \ttooltipFent.classed(\"hidden\", false)\n    \t.html(percentVal);\n    \t//console.log(d.rates[i]);\n    \t//console.log(d3.select(this).select(\"path.point\"));\n    \tfocus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n    \t//console.log(\"events\", window.event, d3.event);\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1);\n\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n    \ttooltipFent\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n    \t    .html(percentVal);\n    }\n\n\n\n    function render () {\n      updateWidth(rootNode.clientWidth);\n\n      x.rangePoints([0, width]);\n      x2.rangePoints([0, width]);\n      y.range([height, 0]);\n      xAxis_fent.scale(x);\n      xAxis2_fent.scale(x);\n      yAxis_fent.scale(y);\n      // update lines\n      line.x(function(d) {\n          return x(d.label);\n        })\n        .y(function(d) {\n            return y(d.value);\n        });\n\n      x_axis\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis_fent);\n\n      x_axis2\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n        .call(xAxis2_fent);\n\n      x_axis2_text\n      .attr(\"x\", width - margin.left)\n      .attr(\"y\", margin.bottom - 32);\n\n\n      y_axis.call(yAxis_fent);\n\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\n\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\n\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\n\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\n\n      $lines.attr(\"d\", function(d) {\n          return line(d.values);\n      });\n\n      $lines_hit_area.attr(\"d\", function(d) {\n        return line(d.values);\n      });\n\n    }\n\n    function updateWidth(componentWidth) {\n      wrapper_width = componentWidth;\n      width = wrapper_width - margin.left - margin.right;\n      height = wrapper_height - margin.top - margin.bottom;\n    }\n\n    function renderLegend() {\n      var legendItems = [\n        \"FentanylHeroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var legendItemsTranslate = [\n        \"Fentanyl & Heroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var $legend = $svg.append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", \"translate(\"+margin.left+\",0)\");\n      var lineHeight = 15;\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n      legendItems.forEach(function(item, i) {\n        var $item = $legend.append(\"g\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\n\n        $item.append(\"svg:line\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 5)\n          .attr(\"x2\", 30)\n          .attr(\"y2\", 5)\n          .style(\"stroke\", seriesColors[i])\n          .style(\"stroke-dasharray\", seriesLineDash[i])\n          .style(\"stroke-width\", seriesLineStrokes[i]);\n\n        $item.append(\"text\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x\", 40)\n          .attr(\"y\", 10)\n          .text(legendItemsTranslate[i]);\n      });\n    }\n\n\n    render();\n    renderLegend();\n\n    window.addEventListener('resize', render);\n\n\n\n})();\n","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n     var town_names = [\n         //\"massachusetts\",\n         \"abington\",\n         \"acton\",\n         \"acushnet\",\n         \"adams\",\n         \"agawam\",\n         \"alford\",\n         \"amesbury\",\n         \"amherst\",\n         \"andover\",\n         \"aquinnah\",\n         \"arlington\",\n         \"ashburnham\",\n         \"ashby\",\n         \"ashfield\",\n         \"ashland\",\n         \"athol\",\n         \"attleboro\",\n         \"auburn\",\n         \"avon\",\n         \"ayer\",\n         \"barnstable\",\n         \"barre\",\n         \"becket\",\n         \"bedford\",\n         \"belchertown\",\n         \"bellingham\",\n         \"belmont\",\n         \"berkley\",\n         \"berlin\",\n         \"bernardston\",\n         \"beverly\",\n         \"billerica\",\n         \"blackstone\",\n         \"blandford\",\n         \"bolton\",\n         \"boston\",\n         \"bourne\",\n         \"boxborough\",\n         \"boxford\",\n         \"boylston\",\n         \"braintree\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brewster\",\n         \"bridgewater\",\n         \"brimfield\",\n         \"brockton\",\n         \"brookfield\",\n         \"brookline\",\n         \"buckland\",\n         \"burlington\",\n         \"cambridge\",\n         \"canton\",\n         \"carlisle\",\n         \"carver\",\n         \"charlemont\",\n         \"charlton\",\n         \"chatham\",\n         \"chelmsford\",\n         \"chelsea\",\n         \"cheshire\",\n         \"chester\",\n         \"chesterfield\",\n         \"chicopee\",\n         \"chilmark\",\n         \"clarksburg\",\n         \"clinton\",\n         \"cohasset\",\n         \"colrain\",\n         \"concord\",\n         \"conway\",\n         \"cummington\",\n         \"dalton\",\n         \"danvers\",\n         \"dartmouth\",\n         \"dedham\",\n         \"deerfield\",\n         \"dennis\",\n         \"dighton\",\n         \"douglas\",\n         \"dover\",\n         \"dracut\",\n         \"dudley\",\n         \"dunstable\",\n         \"duxbury\",\n         \"eastbridgewater\",\n         \"eastbrookfield\",\n         \"eastlongmeadow\",\n         \"eastham\",\n         \"easthampton\",\n         \"easton\",\n         \"edgartown\",\n         \"egremont\",\n         \"erving\",\n         \"essex\",\n         \"everett\",\n         \"fairhaven\",\n         \"fallriver\",\n         \"falmouth\",\n         \"fitchburg\",\n         \"florida\",\n         \"foxborough\",\n         \"framingham\",\n         \"franklin\",\n         \"freetown\",\n         \"gardner\",\n         \"gay head\",\n         \"georgetown\",\n         \"gill\",\n         \"gloucester\",\n         \"goshen\",\n         \"gosnold\",\n         \"grafton\",\n         \"granby\",\n         \"granville\",\n         \"greatbarrington\",\n         \"greenfield\",\n         \"groton\",\n         \"groveland\",\n         \"hadley\",\n         \"halifax\",\n         \"hamilton\",\n         \"hampden\",\n         \"hancock\",\n         \"hanover\",\n         \"hanson\",\n         \"hardwick\",\n         \"harvard\",\n         \"harwich\",\n         \"hatfield\",\n         \"haverhill\",\n         \"hawley\",\n         \"heath\",\n         \"hingham\",\n         \"hinsdale\",\n         \"holbrook\",\n         \"holden\",\n         \"holland\",\n         \"holliston\",\n         \"holyoke\",\n         \"hopedale\",\n         \"hopkinton\",\n         \"hubbardston\",\n         \"hudson\",\n         \"hull\",\n         \"huntington\",\n         \"ipswich\",\n         \"kingston\",\n         \"lakeville\",\n         \"lancaster\",\n         \"lanesborough\",\n         \"lawrence\",\n         \"lee\",\n         \"leicester\",\n         \"lenox\",\n         \"leominster\",\n         \"leverett\",\n         \"lexington\",\n         \"leyden\",\n         \"lincoln\",\n         \"littleton\",\n         \"longmeadow\",\n         \"lowell\",\n         \"ludlow\",\n         \"lunenburg\",\n         \"lynn\",\n         \"lynnfield\",\n         \"malden\",\n         \"manchester\",\n         \"mansfield\",\n         \"marblehead\",\n         \"marion\",\n         \"marlborough\",\n         \"marshfield\",\n         \"mashpee\",\n         \"mattapoisett\",\n         \"maynard\",\n         \"medfield\",\n         \"medford\",\n         \"medway\",\n         \"melrose\",\n         \"mendon\",\n         \"merrimac\",\n         \"methuen\",\n         \"middleborough\",\n         \"middlefield\",\n         \"middleton\",\n         \"milford\",\n         \"millbury\",\n         \"millis\",\n         \"millville\",\n         \"milton\",\n         \"monroe\",\n         \"monson\",\n         \"montague\",\n         \"monterey\",\n         \"montgomery\",\n         \"mountwashington\",\n         \"nahant\",\n         \"nantucket\",\n         \"natick\",\n         \"needham\",\n         \"newashford\",\n         \"newbedford\",\n         \"newbraintree\",\n         \"newmarlborough\",\n         \"newsalem\",\n         \"newbury\",\n         \"newburyport\",\n         \"newton\",\n         \"norfolk\",\n         \"westadams\",\n         \"westandover\",\n         \"westattleborough\",\n         \"westbrookfield\",\n         \"westreading\",\n         \"northampton\",\n         \"northborough\",\n         \"northbridge\",\n         \"northfield\",\n         \"norton\",\n         \"norwell\",\n         \"norwood\",\n         \"oak bluffs\",\n         \"oakham\",\n         \"orange\",\n         \"orleans\",\n         \"otis\",\n         \"oxford\",\n         \"palmer\",\n         \"paxton\",\n         \"peabody\",\n         \"pelham\",\n         \"pembroke\",\n         \"pepperell\",\n         \"peru\",\n         \"petersham\",\n         \"phillipston\",\n         \"pittsfield\",\n         \"plainfield\",\n         \"plainville\",\n         \"plymouth\",\n         \"plympton\",\n         \"princeton\",\n         \"provincetown\",\n         \"quincy\",\n         \"randolph\",\n         \"raynham\",\n         \"reading\",\n         \"rehoboth\",\n         \"revere\",\n         \"richmond\",\n         \"rochester\",\n         \"rockland\",\n         \"rockport\",\n         \"rowe\",\n         \"rowley\",\n         \"royalston\",\n         \"russell\",\n         \"rutland\",\n         \"salem\",\n         \"salisbury\",\n         \"sandisfield\",\n         \"sandwich\",\n         \"saugus\",\n         \"savoy\",\n         \"scituate\",\n         \"seekonk\",\n         \"sharon\",\n         \"sheffield\",\n         \"shelburne\",\n         \"sherborn\",\n         \"shirley\",\n         \"shrewsbury\",\n         \"shutesbury\",\n         \"somerset\",\n         \"somerville\",\n         \"southhadley\",\n         \"southampton\",\n         \"southborough\",\n         \"southbridge\",\n         \"southwick\",\n         \"spencer\",\n         \"springfield\",\n         \"sterling\",\n         \"stockbridge\",\n         \"stoneham\",\n         \"stoughton\",\n         \"stow\",\n         \"sturbridge\",\n         \"sudbury\",\n         \"sunderland\",\n         \"sutton\",\n         \"swampscott\",\n         \"swansea\",\n         \"taunton\",\n         \"templeton\",\n         \"tewksbury\",\n         \"tisbury\",\n         \"tolland\",\n         \"topsfield\",\n         \"townsend\",\n         \"truro\",\n         \"tyngsborough\",\n         \"tyringham\",\n         \"upton\",\n         \"uxbridge\",\n         \"wakefield\",\n         \"wales\",\n         \"walpole\",\n         \"waltham\",\n         \"ware\",\n         \"wareham\",\n         \"warren\",\n         \"warwick\",\n         \"washington\",\n         \"watertown\",\n         \"wayland\",\n         \"webster\",\n         \"wellesley\",\n         \"wellfleet\",\n         \"wendell\",\n         \"wenham\",\n         \"westboylston\",\n         \"westbridgewater\",\n         \"westbrookfield\",\n         \"westnewbury\",\n         \"westspringfield\",\n         \"weststockbridge\",\n         \"westtisbury\",\n         \"westborough\",\n         \"westfield\",\n         \"westford\",\n         \"westhampton\",\n         \"westminster\",\n         \"weston\",\n         \"westport\",\n         \"westwood\",\n         \"weymouth\",\n         \"whately\",\n         \"whitman\",\n         \"wilbraham\",\n         \"williamsburg\",\n         \"williamstown\",\n         \"wilmington\",\n         \"winchendon\",\n         \"winchester\",\n         \"windsor\",\n         \"winthrop\",\n         \"woburn\",\n         \"worcester\",\n         \"worthington\",\n         \"wrentham\",\n         \"yarmouth\"\n     ];\n     var current_town = \"massachusetts\";\n\n     var margin = {\n             top: 0,\n             right: 25,\n             bottom: 30,\n             left: 30\n         },\n         wrapper_width = rootNode.clientWidth,\n         wrapper_height = 400,\n         width = wrapper_width - margin.left - margin.right,\n         height = wrapper_height - margin.top - margin.bottom;\n\n     var bisectAge = d3.bisector(function(d) {\n         return d.age;\n     }).left;\n     var percent = d3.format(',.0%');\n     var yearformat = d3.format(\"d\");\n     // var min_age = 2005;\n     // var fields = ['emp', 'edu', 'race', 'orig'];\n     var groups = {};\n\n     var x = d3.scale.linear();\n\n     var y = d3.scale.linear();\n\n     var color = d3.scale.category10();\n\n     var xAxis_bsas = d3.svg.axis();\n\n     var yAxis_bsas = d3.svg.axis();\n\n     var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n     var $lines_bsas = $svg\n         .append(\"g\")\n         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n         .append(\"text\")\n         .attr(\"x\", 635)\n         .attr(\"y\", 15)\n         .attr(\"text-anchor\", \"middle\")\n         .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n\n    var legend_pos_text = -60,\n         legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n    function render () {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n         .scale(x)\n         .tickFormat(yearformat)\n         .ticks((width < 500 ? 4 : 10))\n         .orient(\"bottom\")\n         .outerTickSize(0);\n\n        yAxis_bsas\n         .scale(y)\n         .tickSize(width)\n         .orient(\"right\")\n         .tickFormat(percent);\n\n\n        line.x(function(d) {\n             return x(d.age);\n         })\n         .y(function(d) {\n             return y(d.value);\n         })\n         .defined(function(d) {\n             return y(d.value);\n         }); // Omit empty values.\n\n         $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n         $y_axis.call(yAxis_bsas);\n         $lines_bsas.selectAll(\".vis-y-axis text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n         $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        renderLegend();\n        renderLines();\n        updateDots();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        $legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        $legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(1*line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(1*line_height)+3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(2*line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(2*line_height)+3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(3*line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(3*line_height)+3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(4*line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(4*line_height)+3);\n        $legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset+(5*line_height));\n        $legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset+(5*line_height)+3);\n    }\n\n    function setupLines () {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n             var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n             var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n             if (y_circle_alcohol >= 0) {\n\n             //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                 // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                 $lines_bsas.append(\"circle\")\n                     .attr(\"class\", function(d) {\n                         return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                     })\n                     .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                     .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                     .attr(\"r\", 3)\n                     .attr(\"pointer-events\", \"none\");\n             }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        $lines.none.attr(\"d\", function(d) {\n            return line(groups[current_town + \"none\"].values);\n        });\n    }\n\n\n\n\n\n    function updateDots() {\n\n             // marriages = groups[current_town];\n             //update alcohol line\n             $lines_bsas.select(\".line.alcohol\")\n                 .transition()\n                 .duration(600)\n                 .delay(180)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"alcohol\"].values);\n                 });\n\n             //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n             //update alcohol circles\n             for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n                 var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                     // console.log(string_select);\n\n                 if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"alcohol\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"alcohol\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n\n\n             //marijuana\n             $lines_bsas.select(\".line.marijuana\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"marijuana\"].values);\n                 });\n             //update marijuana circles\n             for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n                 var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                     //console.log(string_select);\n\n                 if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"marijuana\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"marijuana\"].values[i].value)\n                         })\n                         .attr(\"r\", 3)\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0)\n                 }\n\n             }\n\n             //none\n             $lines_bsas.select(\".line.none\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"none\"].values);\n                 });\n             //update none circles\n             for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n                 var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n                 var value_select = groups[current_town + \"none\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (groups[current_town + \"none\"].values[i].value >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"none\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"none\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //opioids\n             $lines_bsas.select(\".line.opioids\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"opioids\"].values);\n                 });\n             //update opioids circles\n             for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n                 var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n                 var value_select = groups[current_town + \"opioids\"].values[i].value\n                     //console.log(string_select);\n                     //console.log(value_select);\n                     //console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"opioids\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"opioids\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n             //other\n             $lines_bsas.select(\".line.other\")\n                 .transition()\n                 .duration(600)\n                 .attr(\"d\", function(d) {\n                     return line(groups[current_town + \"other\"].values);\n                 });\n             //update other circles\n             for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n                 var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n                 var value_select = groups[current_town + \"other\"].values[i].value\n                     // console.log(string_select);\n                     // console.log(value_select);\n                     // console.log(value_select >= 0);\n\n                 if (value_select >= 0) {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"cx\", function(d) {\n                             return x(groups[current_town + \"other\"].values[i].age)\n                         })\n                         .attr(\"cy\", function(d) {\n                             return y(groups[current_town + \"other\"].values[i].value)\n                         })\n                         .attr(\"r\", 3);\n                 } else {\n                     $lines_bsas.selectAll(string_select)\n                         .transition()\n                         .duration(600)\n                         .attr(\"r\", 0);\n                 }\n\n             }\n\n         }\n\n\n\n\n\n     d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\n         if (error) throw error;\n         //console.log(groups);\n         // var marriages = groups[current_town];\n\n         x.domain([2005, d3.max(data, function(d) {\n             return d.age;\n         })]);\n         y.domain([0, .99]);\n\n         setupLines();\n         render();\n         window.addEventListener('resize', render);\n\n\n\n         // Autocomplete\n\n         $(\".btn-bsas\").addClass('active');\n         d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n             current_town = d3.select(this).attr(\"data-val\");\n             updateDots();\n             d3.select(this).classed('active', true);\n             $(\"#tags\").val('');\n         });\n\n\n         $(\"#tags\").autocomplete({\n             source: function(request, response) {\n                 var matches = $.map(town_names, function(acItem) {\n                     if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                         return acItem;\n                     }\n                 });\n                 response(matches);\n                 //$(\"#tags\").focus(function() {\n                     // if (matches.length == 1) {\n                     //     current_town = matches[0];\n                     //     $(\".btn-bsas\").removeClass('active');\n                     //     updateDots();\n                     // }\n                 //});\n                 //console.log(matches);\n             },\n             select: function(event, ui) {\n                 current_town = ui.item.value;\n                 $(\".btn-bsas\").removeClass('active');\n                 updateDots();\n             }\n         });\n\n\n\n\n         // alcohol\n         var focusalcohol = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus alcohol\")\n             .style(\"display\", \"none\");\n         focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // marijuana\n         var focusmarijuana = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus marijuana\")\n             .style(\"display\", \"none\");\n         focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusnone = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus none\")\n             .style(\"display\", \"none\");\n         focusnone.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusnone.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // opioids\n         var focusopioids = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus opioids\")\n             .style(\"display\", \"none\");\n         focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // none\n         var focusother = $lines_bsas.append(\"g\")\n             .attr(\"class\", \"focus other\")\n             .style(\"display\", \"none\");\n         focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"r\", 3);\n         focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n             .attr(\"x\", 9)\n             .attr(\"dy\", \".35em\");\n\n         // Events\n        $eventOverlay\n             .on(\"mouseover\", function() {\n                 focusmarijuana.style(\"display\", null);\n                 focusalcohol.style(\"display\", null);\n                 focusnone.style(\"display\", null);\n                 focusopioids.style(\"display\", null);\n                 focusother.style(\"display\", null);\n                 //focusage.style(\"display\", null);\n             })\n             .on(\"mouseout\", function() {\n                 focusmarijuana.style(\"display\", \"none\");\n                 focusalcohol.style(\"display\", \"none\");\n                 focusnone.style(\"display\", \"none\");\n                 focusopioids.style(\"display\", \"none\");\n                 focusother.style(\"display\", \"none\");\n                 //focusage.style(\"display\", \"none\");\n             })\n             .on(\"mousemove\", mousemove);\n\n         function mousemove() {\n\n\n\n             var x0 = x.invert(d3.mouse(this)[0])\n\n             // Alcohol\n             var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                 d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                 d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                 d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n             if (d_alcohol.value >= 0) {\n                 focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                 focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform',\"translate(-28,0)\");\n                 focusalcohol.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusalcohol.select(\"circle\").attr(\"r\", 0);\n                 focusalcohol.select(\"text\").text(\"\");\n             }\n\n             // Marijuana\n\n             var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                 d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                 d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                 d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n             // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n             // console.log(d_marijuana.value >= 0);\n\n             if (d_marijuana.value >= 0) {\n                 focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                 focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform',\"translate(-28,0)\");\n                 focusmarijuana.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                 focusmarijuana.select(\"text\").text(\"\");\n             }\n\n             // None\n\n             var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n                 d0_none = groups[current_town + \"none\"].values[i_none - 1],\n                 d1_none = groups[current_town + \"none\"].values[i_none],\n                 d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n             if (d_none.value >= 0) {\n                 focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n                 focusnone.select(\"text\").text(percent(d_none.value));\n                 focusnone.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusnone.select(\"circle\").attr(\"r\", 0);\n                 focusnone.select(\"text\").text(\"\");\n             }\n\n\n             // Opioids\n             var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                 d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                 d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                 d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n             if (d_opioids.value >= 0) {\n                 focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                 focusopioids.select(\"text\").text(percent(d_opioids.value));\n                 focusopioids.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusopioids.select(\"circle\").attr(\"r\", 0);\n                 focusopioids.select(\"text\").text(\"\");\n             }\n\n\n             // other\n             var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                 d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                 d1_other = groups[current_town + \"other\"].values[i_other],\n                 d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n             //console.log(d_other.value);\n\n             if (d_other.value >= 0) {\n                 focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                 focusother.select(\"text\").text(percent(d_other.value));\n                 focusother.select(\"circle\").attr(\"r\", 4);\n             } else {\n                 focusother.select(\"circle\").attr(\"r\", 0);\n                 focusother.select(\"text\").text(\"\");\n             }\n\n\n             // Adjust label horizontal positions.\n             if (x0 > 80) {\n                 focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n             } else {\n                 focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                 focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n             }\n\n\n\n         }\n\n\n     }); // @end d3.tsv()\n\n\n     function type(d, i) {\n\n         d3.keys(d).forEach(function(key) {\n             d[key] = +d[key];\n             if (key != 'age') {\n                 if (!(key in groups)) {\n                     groups[key] = {\n                         'values': [{\n                             age: d.age,\n                             value: d[key]\n                         }]\n                     };\n                 } else {\n                     groups[key]['values'].push({\n                         age: d.age,\n                         value: d[key]\n                     });\n                 }\n             }\n         });\n\n         return d;\n\n     }\n})();\n","$(document).ready(function() {\n    var prescription = [{\n            \"Yes\": 83,\n            \"No\": 17\n        }, {\n            \"Yes\": 57,\n            \"No\": 43\n        }, {\n            \"Yes\": 50,\n            \"No\": 50\n        }, {\n            \"Yes\": 37,\n            \"No\": 63\n        }],\n\n        heroin = [{\n            \"Yes\": 65,\n            \"No\": 35\n        }, {\n            \"Yes\": 28,\n            \"No\": 72\n        }, {\n            \"Yes\": 20,\n            \"No\": 80\n        }, {\n            \"Yes\": 13,\n            \"No\": 87\n        }],\n\n        fentanyl = [{\n            \"Yes\": 68,\n            \"No\": 32\n        }, {\n            \"Yes\": 30,\n            \"No\": 70\n        }, {\n            \"Yes\": 22,\n            \"No\": 78\n        }, {\n            \"Yes\": 17,\n            \"No\": 83\n        }],\n\n        both = [{\n            \"Yes\": 64,\n            \"No\": 36\n        }, {\n            \"Yes\": 24,\n            \"No\": 76\n        }, {\n            \"Yes\": 15,\n            \"No\": 85\n        }, {\n            \"Yes\": 9,\n            \"No\": 91\n        }],\n\n        methadone = [{\n            \"Yes\": 76,\n            \"No\": 24\n        }, {\n            \"Yes\": 46,\n            \"No\": 54\n        }, {\n            \"Yes\": 41,\n            \"No\": 59\n        }, {\n            \"Yes\": 27,\n            \"No\": 73\n        }],\n\n        buprenorphine = [{\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }],\n\n        dataset = [{\n                data: [{\n                    count: 867,\n                    name: 'Heroin'\n                }],\n                name: 'Heroin'\n            }, {\n                data: [{\n                    count: 288,\n                    name: 'Fentanyl'\n                }],\n                name: 'Fentanyl'\n            }, {\n                data: [{\n                    count: 249,\n                    name: 'Fentanyl & Heroin'\n                }],\n                name: 'Fentanyl & Heroin'\n            }, {\n                data: [{\n                    count: 154,\n                    name: 'Prescription Opioids'\n                }],\n                name: 'Prescription Opioids'\n            }, {\n                data: [{\n                    count: 84,\n                    name: 'Methadone'\n                }],\n                name: 'Methadone'\n            }, {\n                data: [{\n                    count: 15,\n                    name: 'Buprenorphine'\n                }],\n                name: 'Buprenorphine'\n            }\n\n        ];\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n\n    $(\".btn-substance\").on('click', function() {\n        var sub = parseInt($(this).val());\n        var substance;\n        $(\".btn-time\").removeClass('disableClick disabled');\n        switch (sub) {\n            case 0:\n                substance = prescription;\n                break;\n            case 1:\n                substance = heroin;\n                break;\n            case 2:\n                substance = fentanyl;\n                break;\n            case 3:\n                substance = both;\n                break;\n            case 4:\n                substance = methadone;\n                break;\n            case 5:\n                substance = buprenorphine;\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\n                $(\"#studyperiod\").addClass('active');\n                break;\n        }\n        data_substance = substance;\n        asignVal_substance(data_substance, time);\n    });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"During the Study Period\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-perioid\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n    function asignVal_substance(type, time) {\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Had prescription</th><th>Did not have prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n\n        })\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //BAR CHART\n    ///////////////////////\n\n    var width = '100%',\n        height = 30;\n    // series = dataset.map(function(d) {\n    //     return d.name;\n    // }),\n    dataset = dataset.map(function(d) {\n            return d.data.map(function(o, i) {\n                // Structure it so that your numeric\n                // axis (the stacked amount) is y\n                return {\n                    y: o.count,\n                    s: o.name,\n                };\n            });\n        }),\n        stack = d3.layout.stack();\n\n    stack(dataset);\n\n\n    var dataset = dataset.map(function(group) {\n            return group.map(function(d) {\n                // Invert the x and y values, and y0 becomes x0\n                return {\n                    x: d.y,\n                    n: d.s,\n                    y: d.x,\n                    x0: d.y0\n                };\n            });\n        }),\n        $bar = d3.select('#bar')\n        .append('svg')\n        .attr('id', 'bar_svg')\n        .attr('width', width)\n        .attr('height', height)\n    var color = [\"#b71c1c\", '#CFD8DC']\n    var colors;\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\n    draw(colors);\n    $(\".btn-substance\").on('click', function() {\n        $('#bar_svg').empty();\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\n        $('.btn-substance').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        colors[$(this).val()] = color[0];\n        draw(colors);\n        var i = $(this).val(),\n            d = dataset[$(this).val()][0];\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand() / 2;\n        console.log(d);\n\n    });\n\n    function draw(colors) {\n        $('#bar_svg')\n            .append('g')\n            .attr('class', 'bar_g')\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n        xMax = d3.max(dataset, function(group) {\n                return d3.max(group, function(d) {\n                    return d.x + d.x0;\n                });\n            }),\n            xScale = d3.scale.linear()\n            .domain([0, xMax])\n            .range([0, width]),\n            // months = dataset[0].map(function(d) {\n            //     return d.y;\n            // }),\n            yScale = d3.scale.ordinal()\n            //.domain(months)\n            .rangeRoundBands([0, height], .1),\n\n            colours = d3.scale.ordinal()\n            .range(colors),\n\n            bar_groups = $bar.selectAll('.bar_g')\n            .data(dataset)\n            .enter()\n            .append('g')\n            .style('fill', function(d, i) {\n                return colours(i);\n            }),\n\n            rects = bar_groups.selectAll('rect')\n            .data(function(d) {\n                return d;\n            })\n            .enter()\n            .append('rect')\n            .style('stroke', '#b71c1c')\n            .attr('x', function(d) {\n                return xScale(d.x0);\n            })\n            .attr('y', function(d, i) {\n                return yScale(d.y);\n            })\n            .attr('height', function(d) {\n                return yScale.rangeBand();\n            })\n            .attr('width', function(d) {\n                return xScale(d.x);\n            })\n    };\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        var $option = $(this).data('select');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        var $option = $(this).attr('id');\n        var $value = eval($(this).val());\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        if (data_gender == multi) {\n            var index = [0, 1, 2, 3, 4, 5];\n        } else {\n            var index = [0, 0, 2, 3, 5, 5];\n        };\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\n        for (b = 0; b < noOfBlocks; b++) {\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n            .text(\"Age\")\r\n            .attr(\"class\", \"vis-x-axis-label\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .attr(\"y\", 10)\r\n            .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n        // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n\r\n\r\n        updateWidth();\r\n        redraw(dataset, selected);\r\n\r\n        window.addEventListener('resize', function() {\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n        });\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\"+(width - 10)+\",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-axis\");\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-data-label\");\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".2f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 10,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();\r\n","$(document).ready(function(){\n\n    dataset = [\n        { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\n        { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\n        { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\n        { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\n    ];\n\n    var color = d3.scale.ordinal()\n        .range([\"#2166ac\", \"#92c5de\"]);\n\n    var width, height, margin = {};\n\n    updateWidth();\n\n    var x0 = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal();\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    //var colorRange = d3.scale.category20();\n    //var color = d3.scale.ordinal()\n    //.range(colorRange.range());\n\n\n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    var $bars_race = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return { name: name, value: +d[name] };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    var xAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(10,\" + height + \")\");\n\n    var yAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\");\n\n    yAxis.append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    var bars = bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\");\n\n    bars\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n    \tdivtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n    \tdivtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    var legendRect = legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    var legendText = legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n\n    function render () {\n        updateWidth();\n\n        x1.rangeRoundBands([0, x0.rangeBand()]);\n\n        x0.rangeRoundBands([0, width], .1);\n        y.range([height, 0]);\n\n        xAxis_bars.scale(x0);\n        yAxis_bars.scale(y);\n\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\n\n        xAxis\n            .attr(\"transform\", \"translate(10,\" + height + \")\")\n            .call(xAxis_bars)\n            .selectAll(\".tick text\")\n            .call(wrap, x0.rangeBand());\n\n        yAxis.call(yAxis_bars);\n        legendRect.attr(\"x\", width - 18);\n        legendText.attr(\"x\", width - 24);\n\n        bar.attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n        bars.attr(\"width\", x1.rangeBand())\n            .attr(\"x\", function(d) {\n                return x1(d.name) + 20;\n            })\n            .attr(\"y\", function(d) {\n                return y(d.value);\n            })\n            .attr(\"value\", function(d) {\n                return d.name;\n            })\n            .attr(\"height\", function(d) {\n                return height - y(d.value);\n            });\n\n    }\n\n    function updateWidth () {\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\n        margin = {\n            top: 50,\n            right: 10,\n            bottom: 60,\n            left: 50\n        },\n        width = w - margin.left - margin.right;\n\n        if(w < 500) {\n            height = 350 - margin.top - margin.bottom;\n        } else {\n            height = 500 - margin.top - margin.bottom;\n        }\n\n    }\n\n    render();\n    window.addEventListener('resize', render);\n});\n"],"sourceRoot":"/source/"}