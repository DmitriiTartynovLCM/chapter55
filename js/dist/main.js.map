{"version":3,"sources":["custom.js","lines-bsas.js","queue.js","maps_binary5yr.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","BoldText","elem","currElem","fontWeight","opioidsY2000","d","d3","select","attr","classed","opioidsY2015","queue","parallelism","pop","popping","started","tasks","active","t","a","slice","call","push","callback","apply","e","r","error","remaining","NaN","notify","await","all","concat","q","noop","Infinity","defer","arguments","f","awaitAll","version","define","amd","module","exports","this","createElement","scroll","ready","bind","event","preventDefault","href","stop","animate","scrollTop","location","hash","on","tab","target","newTabHeight","querySelector","clientHeight","parent","click","each","$id","$current","html","find","$target","data","get","play","load","response","asignVal_svg","val","val_svg","innerHTML","words","trim","split","potentialWidow","newWords","join","Vis","visualize","states","forEach","wrapper","visualizationWrapper","append","createMap","geo","selector","eventName","selectAll","el","shape","text","key","$maps_sub","width","features","enter","path","value","values","properties","TOWN_1","palette","toLowerCase","self","town_value","geoData","format","TOWN","node","parentNode","getElementsByClassName","fill-opacity","generateLegend_map_sub","scale","szDivId","szCaption","legendHeight","legendWidth","$maps_sub_svg","$maps_sub_legends","legendData","domain","range","s","domainStrings","unitWidth","json","projection","conicConformal","parallels","rotate","translate","colors_5yr","threshold","opChgScale","date","console","log","setupData","years","keys","dataset","OMRs","y","year","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","mouseoutFunc","tooltip_death","mouseoverFunc","y0","mouse","y1","invert","percentVal","mousemoveFunc","offsetY","time","linear","svg","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","symbol","type","size","tooltipFent","focus","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","$legend","componentWidth","renderLegend","legendItems","legendItemsTranslate","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","map","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","$lines_bsas_x_axis_label","$lines_bsas_y_axis_label","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","transition","duration","delay","string_select","value_select","town_names","abington","acton","acushnet","adams","agawam","alford","amesbury","amherst","andover","aquinnah","arlington","ashburnham","ashby","ashfield","ashland","athol","attleboro","auburn","avon","ayer","barnstable","barre","becket","bedford","belchertown","bellingham","belmont","berkley","berlin","bernardston","beverly","billerica","blackstone","blandford","bolton","boston","bourne","boxborough","boxford","boylston","braintree","brewster","bridgewater","brimfield","brockton","brookfield","brookline","buckland","burlington","cambridge","canton","carlisle","carver","charlemont","charlton","chatham","chelmsford","chelsea","cheshire","chester","chesterfield","chicopee","chilmark","clarksburg","clinton","cohasset","colrain","concord","conway","cummington","dalton","danvers","dartmouth","dedham","deerfield","dennis","dighton","douglas","dover","dracut","dudley","dunstable","duxbury","eastbridgewater","eastbrookfield","eastham","easthampton","eastlongmeadow","easton","edgartown","egremont","erving","essex","everett","fairhaven","fallriver","falmouth","fitchburg","florida","foxborough","framingham","franklin","freetown","gardner","georgetown","gill","gloucester","goshen","gosnold","grafton","granby","granville","greatbarrington","greenfield","groton","groveland","hadley","halifax","hamilton","hampden","hancock","hanover","hanson","hardwick","harvard","harwich","hatfield","haverhill","hawley","heath","hingham","hinsdale","holbrook","holden","holland","holliston","holyoke","hopedale","hopkinton","hubbardston","hudson","hull","huntington","ipswich","kingston","lakeville","lancaster","lanesborough","lawrence","lee","leicester","lenox","leominster","leverett","lexington","leyden","lincoln","littleton","longmeadow","lowell","ludlow","lunenburg","lynn","lynnfield","malden","manchester","mansfield","marblehead","marion","marlborough","marshfield","mashpee","mattapoisett","maynard","medfield","medford","medway","melrose","mendon","merrimac","methuen","middleborough","middlefield","middleton","milford","millbury","millis","millville","milton","monroe","monson","montague","monterey","montgomery","mountwashington","nahant","nantucket","natick","needham","newashford","newbedford","newbraintree","newbury","newburyport","newmarlborough","newsalem","newton","norfolk","northadams","northampton","northandover","northattleborough","northborough","northbridge","northbrookfield","northfield","northreading","norton","norwell","norwood","oakbluffs","oakham","orange","orleans","otis","oxford","palmer","paxton","peabody","pelham","pembroke","pepperell","peru","petersham","phillipston","pittsfield","plainfield","plainville","plymouth","plympton","princeton","provincetown","quincy","randolph","raynham","reading","rehoboth","revere","richmond","rochester","rockland","rockport","rowe","rowley","royalston","russell","rutland","salem","salisbury","sandisfield","sandwich","saugus","savoy","scituate","seekonk","sharon","sheffield","shelburne","sherborn","shirley","shrewsbury","shutesbury","somerset","somerville","southampton","southborough","southbridge","southhadley","southwick","spencer","springfield","sterling","stockbridge","stoneham","stoughton","stow","sturbridge","sudbury","sunderland","sutton","swampscott","swansea","taunton","templeton","tewksbury","tisbury","tolland","topsfield","townsend","truro","tyngsborough","tyringham","upton","uxbridge","wakefield","wales","walpole","waltham","ware","wareham","warren","warwick","washington","watertown","wayland","webster","wellesley","wellfleet","wendell","wenham","westborough","westboylston","westbridgewater","westbrookfield","westfield","westford","westhampton","westminster","westnewbury","weston","westport","westspringfield","weststockbridge","westtisbury","westwood","weymouth","whately","whitman","wilbraham","williamsburg","williamstown","wilmington","winchendon","winchester","windsor","winthrop","woburn","worcester","worthington","wrentham","yarmouth","bisectAge","bisector","category10","none","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","toUpperCase","indexOf","term","ui","asignVal_substance","Yes","empty","makeChart_substance","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","person_path","person_svg_No","b","person_svg_Yes","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","stroke","stroke-width","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","parseInt","time_period","o","stack","layout","n","parseFloat","substance_html","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","person_svg","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","reverse","lineNumber","dy","tspan","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","yAxisLabel","legendRect","legendText","bar","raceth","errorBarArea2014all","min2014","max2014","interpolate","errorBarArea2015all","min2015","max2015","errorBarArea2014white","errorBarArea2015white","errorBarArea2014black","errorBarArea2015black","errorBarArea2014hisp","errorBarArea2015hisp","errorBars2014all","errorBars2015all","errorBars2014white","errorBars2015white","errorBars2014black","errorBars2015black","errorBars2014hisp","errorBars2015hisp","linemult","linepad","2014","2015","area","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        event.preventDefault();\n\tvar href = $(this).attr('href');\n        $('html, body').stop().animate({\n\t    scrollTop: $(href).offset().top\n\t}, 750, function() {\n\t    window.location.hash = href;\n\t});\n        event.preventDefault();\n    });\n});\n\n\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n  var tab = $(e.target).attr('href');\n  var newTabHeight = document.querySelector(tab).clientHeight;\n  $(tab).parent().animate({ height: newTabHeight });\n});\n\n\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$(document).click('.js-play-video', function(e) {\n    var $target = $($(e.target).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids in 2013 and 2014 had an opioid prescription at some point from 2011–2014')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n\n\n// Fix widows (no words on own line at the end of a <p>)\n$('p').each(function() {\n    var innerHTML = $(this).html();\n    var words = innerHTML.trim().split(' ');\n    if(words.length > 2) {\n        var potentialWidow = words[words.length-1];\n        var newWords = words.slice(0,-1).join(' ');\n        $(this).html(newWords+'&nbsp;'+potentialWidow);\n    }\n})\n\n//bold footnote on in text num click\n\nvar currElem = null; //will hold the element that is bold now\n\n function BoldText(elem) {\n    //console.log(elem)\n    //document.getElementById(\"footnote-4\")\n \n  if (elem != currElem) { //do thing if you're clicking on a bold link\n\n   if (currElem) //if a link bold right now unbold it\n\n    currElem.style.fontWeight='lighter';\n\n   currElem = elem; //assign this element as the current one\n\n   elem.style.fontWeight='bolder';  //make the element clicked bold\n \n  }\n\n }","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n    var town_names = {\n        //\"massachusetts\" : \"Massachusetts\",\n        \"abington\": \"Abington\",\n        \"acton\": \"Acton\",\n        \"acushnet\": \"Acushnet\",\n        \"adams\": \"Adams\",\n        \"agawam\": \"Agawam\",\n        \"alford\": \"Alford\",\n        \"amesbury\": \"Amesbury\",\n        \"amherst\": \"Amherst\",\n        \"andover\": \"Andover\",\n        \"aquinnah\": \"Aquinnah\",\n        \"arlington\": \"Arlington\",\n        \"ashburnham\": \"Ashburnham\",\n        \"ashby\": \"Ashby\",\n        \"ashfield\": \"Ashfield\",\n        \"ashland\": \"Ashland\",\n        \"athol\": \"Athol\",\n        \"attleboro\": \"Attleboro\",\n        \"auburn\": \"Auburn\",\n        \"avon\": \"Avon\",\n        \"ayer\": \"Ayer\",\n        \"barnstable\": \"Barnstable\",\n        \"barre\": \"Barre\",\n        \"becket\": \"Becket\",\n        \"bedford\": \"Bedford\",\n        \"belchertown\": \"Belchertown\",\n        \"bellingham\": \"Bellingham\",\n        \"belmont\": \"Belmont\",\n        \"berkley\": \"Berkley\",\n        \"berlin\": \"Berlin\",\n        \"bernardston\": \"Bernardston\",\n        \"beverly\": \"Beverly\",\n        \"billerica\": \"Billerica\",\n        \"blackstone\": \"Blackstone\",\n        \"blandford\": \"Blandford\",\n        \"bolton\": \"Bolton\",\n        \"boston\": \"Boston\",\n        \"bourne\": \"Bourne\",\n        \"boxborough\": \"Boxborough\",\n        \"boxford\": \"Boxford\",\n        \"boylston\": \"Boylston\",\n        \"braintree\": \"Braintree\",\n        \"brewster\": \"Brewster\",\n        \"bridgewater\": \"Bridgewater\",\n        \"brimfield\": \"Brimfield\",\n        \"brockton\": \"Brockton\",\n        \"brookfield\": \"Brookfield\",\n        \"brookline\": \"Brookline\",\n        \"buckland\": \"Buckland\",\n        \"burlington\": \"Burlington\",\n        \"cambridge\": \"Cambridge\",\n        \"canton\": \"Canton\",\n        \"carlisle\": \"Carlisle\",\n        \"carver\": \"Carver\",\n        \"charlemont\": \"Charlemont\",\n        \"charlton\": \"Charlton\",\n        \"chatham\": \"Chatham\",\n        \"chelmsford\": \"Chelmsford\",\n        \"chelsea\": \"Chelsea\",\n        \"cheshire\": \"Cheshire\",\n        \"chester\": \"Chester\",\n        \"chesterfield\": \"Chesterfield\",\n        \"chicopee\": \"Chicopee\",\n        \"chilmark\": \"Chilmark\",\n        \"clarksburg\": \"Clarksburg\",\n        \"clinton\": \"Clinton\",\n        \"cohasset\": \"Cohasset\",\n        \"colrain\": \"Colrain\",\n        \"concord\": \"Concord\",\n        \"conway\": \"Conway\",\n        \"cummington\": \"Cummington\",\n        \"dalton\": \"Dalton\",\n        \"danvers\": \"Danvers\",\n        \"dartmouth\": \"Dartmouth\",\n        \"dedham\": \"Dedham\",\n        \"deerfield\": \"Deerfield\",\n        \"dennis\": \"Dennis\",\n        \"dighton\": \"Dighton\",\n        \"douglas\": \"Douglas\",\n        \"dover\": \"Dover\",\n        \"dracut\": \"Dracut\",\n        \"dudley\": \"Dudley\",\n        \"dunstable\": \"Dunstable\",\n        \"duxbury\": \"Duxbury\",\n        \"eastbridgewater\": \"East Bridgewater\",\n        \"eastbrookfield\": \"East Brookfield\",\n        \"eastham\": \"Eastham\",\n        \"easthampton\": \"Easthampton\",\n        \"eastlongmeadow\": \"East Longmeadow\",\n        \"easton\": \"Easton\",\n        \"edgartown\": \"Edgartown\",\n        \"egremont\": \"Egremont\",\n        \"erving\": \"Erving\",\n        \"essex\": \"Essex\",\n        \"everett\": \"Everett\",\n        \"fairhaven\": \"Fairhaven\",\n        \"fallriver\": \"Fall River\",\n        \"falmouth\": \"Falmouth\",\n        \"fitchburg\": \"Fitchburg\",\n        \"florida\": \"Florida\",\n        \"foxborough\": \"Foxborough\",\n        \"framingham\": \"Framingham\",\n        \"franklin\": \"Franklin\",\n        \"freetown\": \"Freetown\",\n        \"gardner\": \"Gardner\",\n        \"georgetown\": \"Georgetown\",\n        \"gill\": \"Gill\",\n        \"gloucester\": \"Gloucester\",\n        \"goshen\": \"Goshen\",\n        \"gosnold\": \"Gosnold\",\n        \"grafton\": \"Grafton\",\n        \"granby\": \"Granby\",\n        \"granville\": \"Granville\",\n        \"greatbarrington\": \"Great Barrington\",\n        \"greenfield\": \"Greenfield\",\n        \"groton\": \"Groton\",\n        \"groveland\": \"Groveland\",\n        \"hadley\": \"Hadley\",\n        \"halifax\": \"Halifax\",\n        \"hamilton\": \"Hamilton\",\n        \"hampden\": \"Hampden\",\n        \"hancock\": \"Hancock\",\n        \"hanover\": \"Hanover\",\n        \"hanson\": \"Hanson\",\n        \"hardwick\": \"Hardwick\",\n        \"harvard\": \"Harvard\",\n        \"harwich\": \"Harwich\",\n        \"hatfield\": \"Hatfield\",\n        \"haverhill\": \"Haverhill\",\n        \"hawley\": \"Hawley\",\n        \"heath\": \"Heath\",\n        \"hingham\": \"Hingham\",\n        \"hinsdale\": \"Hinsdale\",\n        \"holbrook\": \"Holbrook\",\n        \"holden\": \"Holden\",\n        \"holland\": \"Holland\",\n        \"holliston\": \"Holliston\",\n        \"holyoke\": \"Holyoke\",\n        \"hopedale\": \"Hopedale\",\n        \"hopkinton\": \"Hopkinton\",\n        \"hubbardston\": \"Hubbardston\",\n        \"hudson\": \"Hudson\",\n        \"hull\": \"Hull\",\n        \"huntington\": \"Huntington\",\n        \"ipswich\": \"Ipswich\",\n        \"kingston\": \"Kingston\",\n        \"lakeville\": \"Lakeville\",\n        \"lancaster\": \"Lancaster\",\n        \"lanesborough\": \"Lanesborough\",\n        \"lawrence\": \"Lawrence\",\n        \"lee\": \"Lee\",\n        \"leicester\": \"Leicester\",\n        \"lenox\": \"Lenox\",\n        \"leominster\": \"Leominster\",\n        \"leverett\": \"Leverett\",\n        \"lexington\": \"Lexington\",\n        \"leyden\": \"Leyden\",\n        \"lincoln\": \"Lincoln\",\n        \"littleton\": \"Littleton\",\n        \"longmeadow\": \"Longmeadow\",\n        \"lowell\": \"Lowell\",\n        \"ludlow\": \"Ludlow\",\n        \"lunenburg\": \"Lunenburg\",\n        \"lynn\": \"Lynn\",\n        \"lynnfield\": \"Lynnfield\",\n        \"malden\": \"Malden\",\n        \"manchester\": \"Manchester\",\n        \"mansfield\": \"Mansfield\",\n        \"marblehead\": \"Marblehead\",\n        \"marion\": \"Marion\",\n        \"marlborough\": \"Marlborough\",\n        \"marshfield\": \"Marshfield\",\n        \"mashpee\": \"Mashpee\",\n        \"mattapoisett\": \"Mattapoisett\",\n        \"maynard\": \"Maynard\",\n        \"medfield\": \"Medfield\",\n        \"medford\": \"Medford\",\n        \"medway\": \"Medway\",\n        \"melrose\": \"Melrose\",\n        \"mendon\": \"Mendon\",\n        \"merrimac\": \"Merrimac\",\n        \"methuen\": \"Methuen\",\n        \"middleborough\": \"Middleborough\",\n        \"middlefield\": \"Middlefield\",\n        \"middleton\": \"Middleton\",\n        \"milford\": \"Milford\",\n        \"millbury\": \"Millbury\",\n        \"millis\": \"Millis\",\n        \"millville\": \"Millville\",\n        \"milton\": \"Milton\",\n        \"monroe\": \"Monroe\",\n        \"monson\": \"Monson\",\n        \"montague\": \"Montague\",\n        \"monterey\": \"Monterey\",\n        \"montgomery\": \"Montgomery\",\n        \"mountwashington\": \"Mount Washington\",\n        \"nahant\": \"Nahant\",\n        \"nantucket\": \"Nantucket\",\n        \"natick\": \"Natick\",\n        \"needham\": \"Needham\",\n        \"newashford\": \"New Ashford\",\n        \"newbedford\": \"New Bedford\",\n        \"newbraintree\": \"New Braintree\",\n        \"newbury\": \"Newbury\",\n        \"newburyport\": \"Newburyport\",\n        \"newmarlborough\": \"New Marlborough\",\n        \"newsalem\": \"New Salem\",\n        \"newton\": \"Newton\",\n        \"norfolk\": \"Norfolk\",\n        \"northadams\": \"North Adams\",\n        \"northampton\": \"Northampton\",\n        \"northandover\": \"North Andover\",\n        \"northattleborough\": \"North Attleborough\",\n        \"northborough\": \"Northborough\",\n        \"northbridge\": \"Northbridge\",\n        \"northbrookfield\": \"North Brookfield\",\n        \"northfield\": \"Northfield\",\n        \"northreading\": \"North Reading\",\n        \"norton\": \"Norton\",\n        \"norwell\": \"Norwell\",\n        \"norwood\": \"Norwood\",\n        \"oakbluffs\": \"Oak Bluffs\",\n        \"oakham\": \"Oakham\",\n        \"orange\": \"Orange\",\n        \"orleans\": \"Orleans\",\n        \"otis\": \"Otis\",\n        \"oxford\": \"Oxford\",\n        \"palmer\": \"Palmer\",\n        \"paxton\": \"Paxton\",\n        \"peabody\": \"Peabody\",\n        \"pelham\": \"Pelham\",\n        \"pembroke\": \"Pembroke\",\n        \"pepperell\": \"Pepperell\",\n        \"peru\": \"Peru\",\n        \"petersham\": \"Petersham\",\n        \"phillipston\": \"Phillipston\",\n        \"pittsfield\": \"Pittsfield\",\n        \"plainfield\": \"Plainfield\",\n        \"plainville\": \"Plainville\",\n        \"plymouth\": \"Plymouth\",\n        \"plympton\": \"Plympton\",\n        \"princeton\": \"Princeton\",\n        \"provincetown\": \"Provincetown\",\n        \"quincy\": \"Quincy\",\n        \"randolph\": \"Randolph\",\n        \"raynham\": \"Raynham\",\n        \"reading\": \"Reading\",\n        \"rehoboth\": \"Rehoboth\",\n        \"revere\": \"Revere\",\n        \"richmond\": \"Richmond\",\n        \"rochester\": \"Rochester\",\n        \"rockland\": \"Rockland\",\n        \"rockport\": \"Rockport\",\n        \"rowe\": \"Rowe\",\n        \"rowley\": \"Rowley\",\n        \"royalston\": \"Royalston\",\n        \"russell\": \"Russell\",\n        \"rutland\": \"Rutland\",\n        \"salem\": \"Salem\",\n        \"salisbury\": \"Salisbury\",\n        \"sandisfield\": \"Sandisfield\",\n        \"sandwich\": \"Sandwich\",\n        \"saugus\": \"Saugus\",\n        \"savoy\": \"Savoy\",\n        \"scituate\": \"Scituate\",\n        \"seekonk\": \"Seekonk\",\n        \"sharon\": \"Sharon\",\n        \"sheffield\": \"Sheffield\",\n        \"shelburne\": \"Shelburne\",\n        \"sherborn\": \"Sherborn\",\n        \"shirley\": \"Shirley\",\n        \"shrewsbury\": \"Shrewsbury\",\n        \"shutesbury\": \"Shutesbury\",\n        \"somerset\": \"Somerset\",\n        \"somerville\": \"Somerville\",\n        \"southampton\": \"Southampton\",\n        \"southborough\": \"Southborough\",\n        \"southbridge\": \"Southbridge\",\n        \"southhadley\": \"South Hadley\",\n        \"southwick\": \"Southwick\",\n        \"spencer\": \"Spencer\",\n        \"springfield\": \"Springfield\",\n        \"sterling\": \"Sterling\",\n        \"stockbridge\": \"Stockbridge\",\n        \"stoneham\": \"Stoneham\",\n        \"stoughton\": \"Stoughton\",\n        \"stow\": \"Stow\",\n        \"sturbridge\": \"Sturbridge\",\n        \"sudbury\": \"Sudbury\",\n        \"sunderland\": \"Sunderland\",\n        \"sutton\": \"Sutton\",\n        \"swampscott\": \"Swampscott\",\n        \"swansea\": \"Swansea\",\n        \"taunton\": \"Taunton\",\n        \"templeton\": \"Templeton\",\n        \"tewksbury\": \"Tewksbury\",\n        \"tisbury\": \"Tisbury\",\n        \"tolland\": \"Tolland\",\n        \"topsfield\": \"Topsfield\",\n        \"townsend\": \"Townsend\",\n        \"truro\": \"Truro\",\n        \"tyngsborough\": \"Tyngsborough\",\n        \"tyringham\": \"Tyringham\",\n        \"upton\": \"Upton\",\n        \"uxbridge\": \"Uxbridge\",\n        \"wakefield\": \"Wakefield\",\n        \"wales\": \"Wales\",\n        \"walpole\": \"Walpole\",\n        \"waltham\": \"Waltham\",\n        \"ware\": \"Ware\",\n        \"wareham\": \"Wareham\",\n        \"warren\": \"Warren\",\n        \"warwick\": \"Warwick\",\n        \"washington\": \"Washington\",\n        \"watertown\": \"Watertown\",\n        \"wayland\": \"Wayland\",\n        \"webster\": \"Webster\",\n        \"wellesley\": \"Wellesley\",\n        \"wellfleet\": \"Wellfleet\",\n        \"wendell\": \"Wendell\",\n        \"wenham\": \"Wenham\",\n        \"westborough\": \"Westborough\",\n        \"westboylston\": \"West Boylston\",\n        \"westbridgewater\": \"West Bridgewater\",\n        \"westbrookfield\": \"West Brookfield\",\n        \"westfield\": \"Westfield\",\n        \"westford\": \"Westford\",\n        \"westhampton\": \"Westhampton\",\n        \"westminster\": \"Westminster\",\n        \"westnewbury\": \"West Newbury\",\n        \"weston\": \"Weston\",\n        \"westport\": \"Westport\",\n        \"westspringfield\": \"West Springfield\",\n        \"weststockbridge\": \"West Stockbridge\",\n        \"westtisbury\": \"West Tisbury\",\n        \"westwood\": \"Westwood\",\n        \"weymouth\": \"Weymouth\",\n        \"whately\": \"Whately\",\n        \"whitman\": \"Whitman\",\n        \"wilbraham\": \"Wilbraham\",\n        \"williamsburg\": \"Williamsburg\",\n        \"williamstown\": \"Williamstown\",\n        \"wilmington\": \"Wilmington\",\n        \"winchendon\": \"Winchendon\",\n        \"winchester\": \"Winchester\",\n        \"windsor\": \"Windsor\",\n        \"winthrop\": \"Winthrop\",\n        \"woburn\": \"Woburn\",\n        \"worcester\": \"Worcester\",\n        \"worthington\": \"Worthington\",\n        \"wrentham\": \"Wrentham\",\n        \"yarmouth\": \"Yarmouth\"\n    };\n    var current_town = \"massachusetts\";\n\n    var margin = {\n            top: 0,\n            right: 25,\n            bottom: 35,\n            left: 45\n        },\n        wrapper_width = rootNode.clientWidth,\n        wrapper_height = 400,\n        width = wrapper_width - margin.left - margin.right,\n        height = wrapper_height - margin.top - margin.bottom;\n\n    var bisectAge = d3.bisector(function(d) {\n        return d.age;\n    }).left;\n    var percent = d3.format(',.0%');\n    var yearformat = d3.format(\"d\");\n    // var min_age = 2005;\n    // var fields = ['emp', 'edu', 'race', 'orig'];\n    var groups = {};\n\n    var x = d3.scale.linear();\n\n    var y = d3.scale.linear();\n\n    var color = d3.scale.category10();\n\n    var xAxis_bsas = d3.svg.axis();\n\n    var yAxis_bsas = d3.svg.axis();\n\n    var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n    var $lines_bsas = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n        .append(\"text\")\n        .attr(\"x\", 635)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n    var $lines_bsas_x_axis_label = $x_axis.append(\"text\");\n    var $lines_bsas_y_axis_label = $y_axis.append(\"text\");\n\n    var legend_pos_text = -60,\n        legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n\n\n\n\n    function render() {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n            .scale(x)\n            .tickFormat(yearformat)\n            .ticks((width < 500 ? 4 : 10))\n            .orient(\"bottom\")\n            .outerTickSize(0);\n\n        yAxis_bsas\n            .scale(y)\n            .tickSize(width)\n            .orient(\"right\")\n            .tickFormat(percent);\n\n\n\n        line.x(function(d) {\n                return x(d.age);\n            })\n            .y(function(d) {\n                return y(d.value);\n            })\n            .defined(function(d) {\n                return y(d.value);\n            }); // Omit empty values.\n\n        $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n        $y_axis.call(yAxis_bsas);\n        $lines_bsas.selectAll(\".vis-y-axis .tick text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n        $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        $lines_bsas_x_axis_label\n            .attr(\"x\", (width - margin.left)/2)\n            .attr(\"y\", (margin.bottom) / 2)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-x-axis-label\")\n            .text(\"Fiscal Year\");\n\n\n        $lines_bsas_y_axis_label\n            .attr(\"x\", -(height - margin.top)/2)\n            .attr(\"y\", -margin.left)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-y-axis-label\")\n            .text(\"Percent Primary Substance of Use\");\n\n\n\n        renderLegend();\n        renderLines();\n        updateDots();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        //$legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        //$legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (1 * line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (1 * line_height) + 3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (2 * line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (2 * line_height) + 3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (3 * line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (3 * line_height) + 3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (4 * line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (4 * line_height) + 3);\n        //$legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (5 * line_height));\n        //$legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (5 * line_height) + 3);\n    }\n\n    function setupLines() {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        // $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n        //     var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n        //     var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n        //     if (y_circle_alcohol >= 0) {\n\n        //         //console.log(groups[current_town+\"alcohol\"].values[i].age);\n        //         //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n        //         $lines_bsas.append(\"circle\")\n        //             .attr(\"class\", function(d) {\n        //                 return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n        //             })\n        //             .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n        //             .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n        //             .attr(\"r\", 3)\n        //             .attr(\"pointer-events\", \"none\");\n        //     }\n        // }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        // $lines.none.attr(\"d\", function(d) {\n        //     return line(groups[current_town + \"none\"].values);\n        // });\n    }\n\n\n\n    function updateDots() {\n\n        // marriages = groups[current_town];\n        //update alcohol line\n        $lines_bsas.select(\".line.alcohol\")\n            .transition()\n            .duration(1000)\n            .delay(180)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"alcohol\"].values);\n            });\n\n        //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n        //update alcohol circles\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n            var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                // console.log(string_select);\n\n            if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"alcohol\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"alcohol\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n\n\n        //marijuana\n        $lines_bsas.select(\".line.marijuana\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"marijuana\"].values);\n            });\n        //update marijuana circles\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n            var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                //console.log(string_select);\n\n            if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"marijuana\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"marijuana\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n        //none\n        // $lines_bsas.select(\".line.none\")\n        //     .transition()\n        //     .duration(1000)\n        //     .attr(\"d\", function(d) {\n        //         return line(groups[current_town + \"none\"].values);\n        //     });\n        // //update none circles\n        // for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n        //     var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n        //     var value_select = groups[current_town + \"none\"].values[i].value\n        //         // console.log(string_select);\n        //         // console.log(value_select);\n        //         // console.log(value_select >= 0);\n\n        //     if (groups[current_town + \"none\"].values[i].value >= 0) {\n        //         $lines_bsas.selectAll(string_select)\n        //             .transition()\n        //             .duration(1000)\n        //             .attr(\"cx\", function(d) {\n        //                 return x(groups[current_town + \"none\"].values[i].age)\n        //             })\n        //             .attr(\"cy\", function(d) {\n        //                 return y(groups[current_town + \"none\"].values[i].value)\n        //             })\n        //             .attr(\"r\", 3);\n        //     } else {\n        //         $lines_bsas.selectAll(string_select)\n        //             .transition()\n        //             .duration(1000)\n        //             .attr(\"r\", 0);\n        //     }\n\n        // }\n\n        //opioids\n        $lines_bsas.select(\".line.opioids\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"opioids\"].values);\n            });\n        //update opioids circles\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n            var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n            var value_select = groups[current_town + \"opioids\"].values[i].value\n                //console.log(string_select);\n                //console.log(value_select);\n                //console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"opioids\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"opioids\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n        //other\n        $lines_bsas.select(\".line.other\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"other\"].values);\n            });\n        //update other circles\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n            var value_select = groups[current_town + \"other\"].values[i].value\n                // console.log(string_select);\n                // console.log(value_select);\n                // console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"other\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"other\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n    }\n\n\n\n\n\n    d3.csv(\"js/data/bsas-data-2000to2015.csv\", type, function(error, data) {\n        if (error) throw error;\n        //console.log(groups);\n        // var marriages = groups[current_town];\n\n        x.domain([2000, d3.max(data, function(d) {\n            return d.age;\n        })]);\n        y.domain([0, 1.00]);\n\n        setupLines();\n        render();\n        window.addEventListener('resize', render);\n\n\n\n        // Autocomplete\n\n        $(\".btn-bsas\").addClass('active');\n        d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n            current_town = d3.select(this).attr(\"data-val\");\n            updateDots();\n            d3.select(this).classed('active', true);\n            $(\"#tags\").val('');\n        });\n\n\n\n        $(\"#tags\").autocomplete({\n            source: function(request, response) {\n                //console.log(town_names);\n                var matches = $.map(town_names, function(acItem) {\n                    if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                        return acItem;\n                    }\n                });\n                response(matches);\n                //$(\"#tags\").focus(function() {\n                // if (matches.length == 1) {\n                //     current_town = matches[0];\n                //     $(\".btn-bsas\").removeClass('active');\n                //     updateDots();\n                // }\n                //});\n                //console.log(matches);\n            },\n            select: function(event, ui) {\n                $.each(town_names, function(key, value) {\n                    if (value === ui.item.value) {\n                        current_town = key;\n                        console.log(value)\n                    }\n                });\n\n\n                $(\".btn-bsas\").removeClass('active');\n                updateDots();\n            }\n        });\n\n\n\n\n        // alcohol\n        var focusalcohol = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus alcohol\")\n            .style(\"display\", \"none\");\n        focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // marijuana\n        var focusmarijuana = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus marijuana\")\n            .style(\"display\", \"none\");\n        focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        // var focusnone = $lines_bsas.append(\"g\")\n        //     .attr(\"class\", \"focus none\")\n        //     .style(\"display\", \"none\");\n        // focusnone.append(\"circle\")\n        //     .attr(\"pointer-events\", \"none\")\n        //     .attr(\"r\", 3);\n        // focusnone.append(\"text\")\n        //     .attr(\"pointer-events\", \"none\")\n        //     .attr(\"x\", 9)\n        //     .attr(\"dy\", \".35em\");\n\n        // opioids\n        var focusopioids = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus opioids\")\n            .style(\"display\", \"none\");\n        focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        var focusother = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus other\")\n            .style(\"display\", \"none\");\n        focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // Events\n        $eventOverlay\n            .on(\"mouseover\", function() {\n                focusmarijuana.style(\"display\", null);\n                focusalcohol.style(\"display\", null);\n                //focusnone.style(\"display\", null);\n                focusopioids.style(\"display\", null);\n                focusother.style(\"display\", null);\n                //focusage.style(\"display\", null);\n            })\n            .on(\"mouseout\", function() {\n                focusmarijuana.style(\"display\", \"none\");\n                focusalcohol.style(\"display\", \"none\");\n                //focusnone.style(\"display\", \"none\");\n                focusopioids.style(\"display\", \"none\");\n                focusother.style(\"display\", \"none\");\n                //focusage.style(\"display\", \"none\");\n            })\n            .on(\"mousemove\", mousemove);\n\n        function mousemove() {\n\n\n\n            var x0 = x.invert(d3.mouse(this)[0])\n\n            // Alcohol\n            var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n            if (d_alcohol.value >= 0) {\n                focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform', \"translate(-28,0)\");\n                focusalcohol.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusalcohol.select(\"circle\").attr(\"r\", 0);\n                focusalcohol.select(\"text\").text(\"\");\n            }\n\n            // Marijuana\n\n            var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n            // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n            // console.log(d_marijuana.value >= 0);\n\n            if (d_marijuana.value >= 0) {\n                focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform', \"translate(-28,0)\");\n                focusmarijuana.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                focusmarijuana.select(\"text\").text(\"\");\n            }\n\n            // None\n\n            // var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n            //     d0_none = groups[current_town + \"none\"].values[i_none - 1],\n            //     d1_none = groups[current_town + \"none\"].values[i_none],\n            //     d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n            // if (d_none.value >= 0) {\n            //     focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n            //     focusnone.select(\"text\").text(percent(d_none.value));\n            //     focusnone.select(\"circle\").attr(\"r\", 4);\n            // } else {\n            //     focusnone.select(\"circle\").attr(\"r\", 0);\n            //     focusnone.select(\"text\").text(\"\");\n            // }\n\n\n            // Opioids\n            var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n            if (d_opioids.value >= 0) {\n                focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                focusopioids.select(\"text\").text(percent(d_opioids.value));\n                focusopioids.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusopioids.select(\"circle\").attr(\"r\", 0);\n                focusopioids.select(\"text\").text(\"\");\n            }\n\n\n            // other\n            var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                d1_other = groups[current_town + \"other\"].values[i_other],\n                d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n            //console.log(d_other.value);\n\n            if (d_other.value >= 0) {\n                focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                focusother.select(\"text\").text(percent(d_other.value));\n                focusother.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusother.select(\"circle\").attr(\"r\", 0);\n                focusother.select(\"text\").text(\"\");\n            }\n\n\n            // Adjust label horizontal positions.\n            if (x0 > 80) {\n                focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                //focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n            } else {\n                focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                //focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n            }\n\n\n\n        }\n\n\n    }); // @end d3.tsv()\n\n\n    function type(d, i) {\n\n        d3.keys(d).forEach(function(key) {\n            d[key] = +d[key];\n            if (key != 'age') {\n                if (!(key in groups)) {\n                    groups[key] = {\n                        'values': [{\n                            age: d.age,\n                            value: d[key]\n                        }]\n                    };\n                } else {\n                    groups[key]['values'].push({\n                        age: d.age,\n                        value: d[key]\n                    });\n                }\n            }\n        });\n\n        return d;\n\n    }\n\n\n\n\n})();\n\nfunction opioidsY2000(d, i) {\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };\n\n        function opioidsY2015(d, i) {\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };\n","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#binaryMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/rate_5yr_odc.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([8600])\n        .translate([280, 360]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var colors_5yr = [\"#d3d3d3\", \"#9ecae1\", \"#6baed6\", \"#2171b5\", \"#084594\"];\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313']);\n        .range(colors_5yr);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(function(d) {\n                if (data.key == 2005) {\n                    return '2001 to 2005';\n                } else if (data.key == 2010) {\n                    return '2006 to 2010';\n                } else if (data.key == 2015) {\n                    return '2011 to 2015';\n                }\n            })\n            .attr('class', 'vis-title')\n            .style('padding-bottom', \"3%\");\n\n\n\n\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN_1];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n\t\treturn d.properties.TOWN_1.toLowerCase()+' bsasmap';\n            })\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN_1] > 0) {\n                    town_value = d3.format(\".1f\")(data.values[geoData[0].properties.TOWN]);\n                } else { town_value = \"0\"; }\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \"<br>\" + town_value) + \" per 100,000\";\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n\t\td3.selectAll('path.bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity])\n        //.range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313'])\n        .range(colors_5yr);\n    opChgScale.domainStrings = function() {\n        return (['0', '>0-2.1', '>2.1-6.1', '>6.1-17.1', '>17.1']);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'binaryMaps_legend', 'Average Annual Opioid-Related Death Rate per 100,000 People');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n\n        var legendHeight = 60,\n            legendWidth = '90%';\n\n\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        // legendData.push({\n        //     d: -9999,\n        //     r: '#f1f1f1',\n        //     s: 'N/A*'\n        // });\n        for (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n        var unitWidth = 100 / legendData.length;\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", legendHeight / 3)\n            .attr(\"width\", function(d, i) {\n                return unitWidth + '%';\n            })\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + (unitWidth / 2) + '%';\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-binary-map').click(function() {\n        var date = $(this).data('date');\n        $('#binaryMaps').attr('data-active-date', date);\n        $('.js-toggle-binary-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\nconsole.log(\"file loaded - binary\")\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/maps_susbtance_data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([7500])\n        .translate([280, 330]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([-0.1, 0.01, 0.14, 0.24, 0.33, 0.46, 1.1])\n        .range(['#d1d1d1','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450']);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n    //console.log(geo.features)\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n\t\treturn d.properties.TOWN.toLowerCase() + ' bsasmap';\n            })\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] >= 0) {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    //console.log(data.values[geoData[0].properties.TOWN])\n                    town_value = \"N/A<a href=\\\"#footnote-13\\\" class=\\\"page-scroll\\\"><sup>13</sup></a>\";\n                };\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n                //console.log(geoData[0].properties);\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n\t\td3.selectAll('path.bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(['#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-14%', '>14-24%', '>24-33%', '>33-46%', '>46-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)<a href=\\\"#footnote-13\\\" class=\\\"page-scroll\\\"><sup>13</sup></a>');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({\n            d: -9999,\n            r: '#d1d1d1',\n            s: \"N/A\"\n        });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n            .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n                return (i * (100 / legendData.length)) + \"%\";\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return ((i * (100 / legendData.length)) + 7) + \"%\";\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-treatment-map').click(function() {\n        var date = $(this).data('date');\n        $('#treatmentMaps').attr('data-active-date', date);\n        $('.js-toggle-treatment-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\n","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    //var yScale = d3.scale.sqrt();\r\n    var yScale = d3.scale.linear();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", (dimensions.width - dimensions.margin.left)/2)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -(dimensions.height/2))\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(0, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 700 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", (dimensions.width - dimensions.margin.left)/2);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (0) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    var focus = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"focus\")\r\n        .classed(\"hidden\", true);\r\n\r\n    $lines_death\r\n        .on(\"mouseover\", mouseoverFunc)\r\n        .on(\"mouseout\", mouseoutFunc)\r\n        .on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n        //d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n        tooltip_death.classed(\"hidden\", true);\r\n    }\r\n    function mouseoverFunc(d, i) {\r\n\r\n        //d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n\r\n        //d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n        //d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1];\r\n        //console.log(y0);\r\n        var y1 = yScale.invert(y0);\r\n        var percentVal = d3.format(\".1f\")(y1)\r\n\r\n        tooltip_death.classed(\"hidden\", false)\r\n        .html(percentVal);\r\n        //console.log(d.rates[i]);\r\n        //console.log(d3.select(this).select(\"path.point\"));\r\n        //focus.classed(\"hidden\", false);\r\n    }\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n        //console.log(\"events\", d3.event.offsetX, d3.event.layerY/2);\r\n        //console.log(\"d3.events\", d3.event);\r\n        var x0 = d3.mouse(this)[0];\r\n        var y0 = d3.mouse(this)[1]\r\n        var y1 = yScale.invert(y0);\r\n        var percentVal = d3.format(\".1f\")(y1);\r\n\r\n       //focus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n\r\n\r\n        tooltip_death\r\n            .style(\"top\", (d3.event.offsetY+20) + \"px\")\r\n            .style(\"left\", (d3.event.offsetX) + \"px\")\r\n            .html(percentVal);\r\n    }\r\n\r\n    // function bindEvents() {\r\n    //     d3.selectAll(\"g.lines-death\")\r\n    //         .on(\"mouseover\", mouseoverFunc)\r\n    //         .on(\"mouseout\", mouseoutFunc)\r\n    //         .on(\"mousemove\", mousemoveFunc);\r\n\r\n    //     function mouseoutFunc() {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n    //         tooltip_death.classed(\"hidden\", true);\r\n    //     }\r\n\r\n    //     function mouseoverFunc(d, i) {\r\n    //         d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n    //         d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n    //         tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n    //     }\r\n\r\n    //     var coordinates = [0, 0];\r\n\r\n    //     function mousemoveFunc(d) {\r\n    //         coordinates = d3.mouse(this);\r\n\r\n    //         var x = coordinates[0];\r\n    //         var y = coordinates[1];\r\n    //         tooltip_death\r\n    //             .style(\"top\", y + \"px\")\r\n    //             .style(\"left\", x + \"px\")\r\n    //             .style('position', 'absolute')\r\n    //             .style('z-index', 1001);\r\n    //     }\r\n    // }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\n\n    var chartData = [{\n    \t\"date\": new Date(\"01/01/2014\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.22\",\n    \t\"Heroin\": \"0.41\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2014\"),\n    \t\"FentanylHeroin\": \"0.18\",\n    \t\"Fentanyl\": \"0.19\",\n    \t\"Heroin\": \"0.49\",\n    \t\"Methadone\": \"0.07\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2014\"),\n    \t\"FentanylHeroin\": \"0.14\",\n    \t\"Fentanyl\": \"0.14\",\n    \t\"Heroin\": \"0.53\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2014\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.27\",\n    \t\"Heroin\": \"0.35\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.04\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2015\"),\n    \t\"FentanylHeroin\": \"0.24\",\n    \t\"Fentanyl\": \"0.38\",\n    \t\"Heroin\": \"0.29\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2015\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.43\",\n    \t\"Heroin\": \"0.24\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2016\"),\n    \t\"FentanylHeroin\": \"0.15\",\n    \t\"Fentanyl\": \"0.50\",\n    \t\"Heroin\": \"0.17\",\n    \t\"Methadone\": \"0.04\"\n   }];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n    \tvar date2 = new Date();\n    \tdate2.setMonth(date.getMonth() - 10);\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\n    \treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#333333\", \"#b71c1c\", \"#0071bc\", \"#333333\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n      top: 10, // space for the legend\n      right: 15,\n      bottom: 50,\n      left: 42\n    };\n\n    var wrapper_width = 540;\n    var wrapper_height = 400;\n    var width = wrapper_width - margin.left - margin.right;\n    var height = wrapper_height - margin.top - margin.bottom;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n                    \t.scale(x)\n                    \t.orient(\"bottom\")\n                    \t.ticks(d3.time.months, 3)\n                    \t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n                      \t.scale(x)\n                      \t.ticks(d3.time.years, 1)\n                      \t.tickFormat(yearformat)\n                      \t.tickSize(3, 0)\n                      \t.tickPadding(1)\n                      \t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n                    \t.scale(y)\n                    \t.orient(\"left\")\n                    \t.tickFormat(formatPercent)\n                    \t.ticks(5)\n                    \t.tickSize(3, 0)\n                    \t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n              \t.x(function(d) {\n              \t    return x(d.label);\n              \t})\n              \t.y(function(d) {\n              \t    return y(d.value);\n              \t});\n\n    var $svg = d3.select(document.querySelector(rootSelector))\n      .append(\"svg\");\n    var $lines_fent = $svg.append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n      return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n    \treturn {\n    \t    name: name,\n    \t    values: chartData.map(function(d) {\n        \t\treturn {\n        \t\t    name: name,\n        \t\t    label: d[xLabel],\n        \t\t    value: +d[name]\n        \t\t};\n    \t    })\n    \t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(seriesData, function(c) {\n          return d3.min(c.values, function(d) {\n      \t//return d.value;\n      \treturn 0;\n          });\n      }),\n      d3.max(seriesData, function(c) {\n          return d3.max(c.values, function(d) {\n      \treturn d.value;\n        //return 0.6\n          });\n      })\n    ]);\n\n    var x_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-x-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis_fent);\n\n    var x_axis_lines = x_axis.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.style(\"stroke-width\", \"1.5px\")\n    \t.call(xAxis_fent);\n\n    var x_axis2 = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n    \t.call(xAxis2_fent);\n\n    var x_axis2_text = x_axis2\n    \t.append(\"text\")\n    \t.attr(\"x\", (width - margin.left)/2)\n    \t.attr(\"y\", margin.bottom - 32)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-x-axis-label\")\n    \t.text(\"Quarter\");\n\n\n    var y_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-y-axis\")\n    \t.call(yAxis_fent)\n      //.append(\"tspan\")\n      .append(\"text\")\n    \t.attr(\"x\", -(height/2))\n    \t.attr(\"y\", -44)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-y-axis-label\")\n    \t.text(\"Percent Opioid Deaths\");\n      //.html(\"<sup>1</sup>\");\n\n    var series = $lines_fent.selectAll(\".series\")\n    \t.data(seriesData)\n    \t.enter().append(\"g\")\n    \t.attr(\"class\", \"seriesData\");\n\n\n    var $lines = series.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.style(\"stroke\", function(d) {\n    \t    return color(d.name);\n    \t})\n    \t.style(\"stroke-width\", function(d) {\n    \t    return lineStroke(d.name);\n    \t})\n    \t.style(\"stroke-dasharray\", function(d) {\n    \t    return lineDash(d.name);\n    \t})\n    \t.style(\"fill\", \"none\");\n\n\n    var $lines_hit_area = series.append(\"path\")\n    \t.attr(\"class\", \"hit-area-ext\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n    \t.style(\"fill\", \"none\");\n\n\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Fentanyl & Heroin\");\n\n    // var x_axis_label_m = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Methadone\");\n\n    // var x_axis_label_h = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Heroin\");\n\n    // var x_axis_label_f = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"focus\")\n    \t.classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n    \t.style(\"stroke-width\", 1)\n    \t.attr(\"r\", 6)\n    \t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n    \t.on(\"mouseover\", mouseoverFunc)\n    \t.on(\"mouseout\", mouseoutFunc)\n    \t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n      \tfocus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n    \t//         }\n\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1)\n\n    \ttooltipFent.classed(\"hidden\", false)\n    \t.html(percentVal);\n    \t//console.log(d.rates[i]);\n    \t//console.log(d3.select(this).select(\"path.point\"));\n    \tfocus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n    \t//console.log(\"events\", window.event, d3.event);\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1);\n\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n    \ttooltipFent\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n    \t    .html(percentVal);\n    }\n\n\n\n    function render () {\n      updateWidth(rootNode.clientWidth);\n\n      x.rangePoints([0, width]);\n      x2.rangePoints([0, width]);\n      y.range([height, 0]);\n      xAxis_fent.scale(x);\n      xAxis2_fent.scale(x);\n      yAxis_fent.scale(y);\n      // update lines\n      line.x(function(d) {\n          return x(d.label);\n        })\n        .y(function(d) {\n            return y(d.value);\n        });\n\n      x_axis\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis_fent);\n\n      x_axis2\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n        .call(xAxis2_fent);\n\n      x_axis2_text\n      .attr(\"x\", (width - margin.left)/2)\n      .attr(\"y\", margin.bottom - 32);\n\n\n      y_axis.call(yAxis_fent);\n\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\n\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\n\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\n\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\n\n      $lines.attr(\"d\", function(d) {\n          return line(d.values);\n      });\n\n      $lines_hit_area.attr(\"d\", function(d) {\n        return line(d.values);\n      });\n\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-margin.right*10)+\",0)\");\n    }\n\n    function updateWidth(componentWidth) {\n      wrapper_width = componentWidth;\n      width = wrapper_width - margin.left - margin.right;\n      height = wrapper_height - margin.top - margin.bottom;\n    }\n\n    var $legend = $svg.append(\"g\");\n    var $item = $legend.append(\"g\");\n\n    function renderLegend() {\n\n\n      var legendItems = [\n        \"FentanylHeroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var legendItemsTranslate = [\n        \"Both Fentanyl & Heroin\",\n        \"Only Fentanyl\",\n        \"Only Heroin\",\n        \"Only Methadone\"\n      ];\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-(margin.right*10))+\",0)\");\n      var lineHeight = 15;\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n      legendItems.forEach(function(item, i) {\n      $item = $legend.append(\"g\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\n\n        $item.append(\"svg:line\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 5)\n          .attr(\"x2\", 30)\n          .attr(\"y2\", 5)\n          .style(\"stroke\", seriesColors[i])\n          .style(\"stroke-dasharray\", seriesLineDash[i])\n          .style(\"stroke-width\", seriesLineStrokes[i]);\n\n        $item.append(\"text\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x\", 40)\n          .attr(\"y\", 10)\n          .text(legendItemsTranslate[i]);\n      });\n    }\n\n\n    render();\n    renderLegend();\n\n    window.addEventListener('resize', render);\n    //window.addEventListener('resize', renderLegend);\n\n\n\n})();\n","$(document).ready(function() {\n    var prescription = [{\n            \"Yes\": 83,\n            \"No\": 17\n        }, {\n            \"Yes\": 57,\n            \"No\": 43\n        }, {\n            \"Yes\": 50,\n            \"No\": 50\n        }, {\n            \"Yes\": 37,\n            \"No\": 63\n        }],\n\n        heroin = [{\n            \"Yes\": 65,\n            \"No\": 35\n        }, {\n            \"Yes\": 28,\n            \"No\": 72\n        }, {\n            \"Yes\": 20,\n            \"No\": 80\n        }, {\n            \"Yes\": 13,\n            \"No\": 87\n        }],\n\n        fentanyl = [{\n            \"Yes\": 68,\n            \"No\": 32\n        }, {\n            \"Yes\": 30,\n            \"No\": 70\n        }, {\n            \"Yes\": 22,\n            \"No\": 78\n        }, {\n            \"Yes\": 17,\n            \"No\": 83\n        }],\n\n        both = [{\n            \"Yes\": 64,\n            \"No\": 36\n        }, {\n            \"Yes\": 24,\n            \"No\": 76\n        }, {\n            \"Yes\": 15,\n            \"No\": 85\n        }, {\n            \"Yes\": 9,\n            \"No\": 91\n        }],\n\n        methadone = [{\n            \"Yes\": 76,\n            \"No\": 24\n        }, {\n            \"Yes\": 46,\n            \"No\": 54\n        }, {\n            \"Yes\": 41,\n            \"No\": 59\n        }, {\n            \"Yes\": 27,\n            \"No\": 73\n        }],\n\n        buprenorphine = [{\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }],\n\n        dataset = [{\n                data: [{\n                    count: 867,\n                    name: 'Heroin'\n                }],\n                name: 'Heroin'\n            }, {\n                data: [{\n                    count: 288,\n                    name: 'Fentanyl'\n                }],\n                name: 'Fentanyl'\n            }, {\n                data: [{\n                    count: 249,\n                    name: 'Fentanyl & Heroin'\n                }],\n                name: 'Fentanyl & Heroin'\n            }, {\n                data: [{\n                    count: 154,\n                    name: 'Prescription Opioids'\n                }],\n                name: 'Prescription Opioids'\n            }, {\n                data: [{\n                    count: 84,\n                    name: 'Methadone'\n                }],\n                name: 'Methadone'\n            },\n            //  {\n            //     data: [{\n            //         count: 15,\n            //         name: 'Buprenorphine'\n            //     }],\n            //     name: 'Buprenorphine'\n            // }\n\n        ];\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n\n    $(\".btn-substance\").on('click', function() {\n        var sub = parseInt($(this).val());\n        var substance;\n        $(\".btn-time\").removeClass('disableClick disabled');\n        switch (sub) {\n            case 0:\n                substance = prescription;\n                break;\n            case 1:\n                substance = heroin;\n                break;\n            case 2:\n                substance = fentanyl;\n                break;\n            case 3:\n                substance = both;\n                break;\n            case 4:\n                substance = methadone;\n                break;\n            case 5:\n                substance = buprenorphine;\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\n                $(\"#studyperiod\").addClass('active');\n                break;\n        }\n        data_substance = substance;\n        asignVal_substance(data_substance, time);\n    });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"during 2011–2014\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-period\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n    function asignVal_substance(type, time) {\n        $('#percentage').html(type[time].Yes + '%');\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n\t    $('#table_substance').html('<table class=\"table table_substance\"><tr><th>Had legal prescription</th><th>Did not have legal prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n\n        })\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        var person_path = '<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/>';\n        var person_svg_No = '<svg class=\"block type_substance1\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push(person_svg_No);\n\n            //blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            //$(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        var person_svg_Yes = '<svg class=\"block type_substance0\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n            $(id).append(person_svg_Yes);\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //BAR CHART\n    ///////////////////////\n\n    var width = '100%',\n        height = 30;\n    // series = dataset.map(function(d) {\n    //     return d.name;\n    // }),\n    dataset = dataset.map(function(d) {\n            return d.data.map(function(o, i) {\n                // Structure it so that your numeric\n                // axis (the stacked amount) is y\n                return {\n                    y: o.count,\n                    s: o.name,\n                };\n            });\n        }),\n        stack = d3.layout.stack();\n\n    stack(dataset);\n\n\n    var dataset = dataset.map(function(group) {\n            return group.map(function(d) {\n                // Invert the x and y values, and y0 becomes x0\n                return {\n                    x: d.y,\n                    n: d.s,\n                    y: d.x,\n                    x0: d.y0\n                };\n            });\n        }),\n        $bar = d3.select('#bar')\n        .append('svg')\n        .attr('id', 'bar_svg')\n        .attr('width', width)\n        .attr('height', height)\n    var color = [\"#b71c1c\", '#CFD8DC']\n    var colors;\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\n    draw(colors);\n    $(\".btn-substance\").on('click', function() {\n        $('#bar_svg').empty();\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\n        $('.btn-substance').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        colors[$(this).val()] = color[0];\n        draw(colors);\n        var i = $(this).val(),\n            d = dataset[$(this).val()][0];\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand();\n        console.log(d);\n        console.log(d.n == 'Fentanyl & Heroin')\n\n        if (d.n == 'Fentanyl & Heroin') {\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-16\\\" class=\\\"page-scroll\\\"><sup>16</sup></a>\";\n        } else if (d.n == 'Prescription Opioids') {\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-15\\\" class=\\\"page-scroll\\\"><sup>15</sup></a>\";\n        } else {\n            substance_html = d.n.toLowerCase();\n        }\n\n        console.log(substance_html)\n        $('.substance-type').html(substance_html);\n        $('#total').html(d.x);\n\n    });\n\n    function draw(colors) {\n        $('#bar_svg')\n            .append('g')\n            .attr('class', 'bar_g')\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n        xMax = d3.max(dataset, function(group) {\n                return d3.max(group, function(d) {\n                    return d.x + d.x0;\n                });\n            }),\n            xScale = d3.scale.linear()\n            .domain([0, xMax])\n            .range([0, width]),\n            // months = dataset[0].map(function(d) {\n            //     return d.y;\n            // }),\n            yScale = d3.scale.ordinal()\n            //.domain(months)\n            .rangeRoundBands([0, height], .1),\n\n            colours = d3.scale.ordinal()\n            .range(colors),\n\n            bar_groups = $bar.selectAll('.bar_g')\n            .data(dataset)\n            .enter()\n            .append('g')\n            .style('fill', function(d, i) {\n                return colours(i);\n            }),\n\n            rects = bar_groups.selectAll('rect')\n            .data(function(d) {\n                return d;\n            })\n            .enter()\n            .append('rect')\n            .style({ 'stroke': '#b71c1c', 'stroke-width': '1px' })\n            .attr('x', function(d) {\n                return xScale(d.x0);\n            })\n            .attr('y', function(d, i) {\n                return yScale(d.y);\n            })\n            .attr('height', function(d) {\n                return yScale.rangeBand();\n            })\n            .attr('width', function(d) {\n                return xScale(d.x);\n            })\n    };\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n\t'<div class=\"people-blocks\">Prescription Opioids in Toxicology Screen</div><table class=\"table table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\n\t'<div class=\"people-blocks\">Heroin in Toxicology Screen</div><table class=\"table table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\n\t'<div class=\"people-blocks\">Number of Different Prescribers</div><table class=\"table table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n    var value;\n    var option;\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        $option = $(this).data('select');\n        //$value = eval($(this).val());\n        if ($option == 'multi') { $value = 2; } else if ($option == 'heroin') { $value = 1; } else if ($option = 'prescription') { $value = 0; }\n        console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        $option = $(this).attr('id');\n        $value = eval($(this).val());\n        //console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n        //console.log(value);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        if (data_gender == multi) {\n            var index = [0, 1, 2, 3, 4, 5];\n        } else {\n            var index = [0, 0, 2, 3, 5, 5];\n        };\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\n        for (b = 0; b < noOfBlocks; b++) {\n            var person_svg = '<svg class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + ' width=\"25px\" height=\"25px\">'+'<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/></svg>';\n\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            //blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            blockArray.push(person_svg);\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n        .text(\"Age\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .attr(\"y\", 10)\r\n        .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n    // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n            var selected = \"percentOpiodDeaths\";\r\n            //console.log(column);\r\n            var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n            //\r\n            // //console.log(column, dataset);\r\n            //\r\n\r\n\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n\r\n            window.addEventListener('resize', function() {\r\n                updateWidth();\r\n                redraw(dataset, selected);\r\n            });\r\n\r\n            d3.select(\"#POD\").classed(\"selected\", true);\r\n            $(\"#POD\").addClass(\"active\");\r\n\r\n            d3.select(\"#POD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"percentOpiodDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#DR\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"deathRate\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n            d3.select(\"#NOD\")\r\n                .on(\"click\", function(d, i) {\r\n                    selected = \"numberOpioidDeaths\"\r\n                    dataset = drawGraph(data, selected);\r\n                    redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n                    d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                    d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                    $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age18to24\")\r\n                .on(\"click\", function(d, i) {\r\n                    //selected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", true);    \r\n\r\n                    d3.selectAll(\".bar.malFocus.age18to24\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age18to24\")\r\n                        .classed(\"femSelector\", false);\r\n                    \r\n                     d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);  \r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"ageSelector\", false);\r\n                });\r\n\r\n            d3.select(\"#age25to34\")\r\n                .on(\"click\", function(d, i) {\r\n                    //lected = \"18to24\"\r\n                    // dataset = drawGraph(data, selected);\r\n                    // redraw(dataset, selected);\r\n                    var thisButton = d3.select(this);\r\n\r\n                    //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                    //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                    thisButton.classed(\"selected\", true);\r\n                    $(this).addClass(\"active\");\r\n\r\n                    d3.selectAll(\".bar.malFocus\")\r\n                        .classed(\"malSelector\", true);\r\n                    d3.selectAll(\".bar.femFocus\")\r\n                        .classed(\"femSelector\", true);\r\n                     \r\n\r\n                    d3.selectAll(\".bar.malFocus.age25to34\")\r\n                        .classed(\"malSelector\", false);\r\n                    d3.selectAll(\".bar.femFocus.age25to34\")\r\n                        .classed(\"femSelector\", false);\r\n\r\n                    d3.selectAll(\".vis-axis\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".vis-data-label\")\r\n                        .classed(\"noageSelector\", true);\r\n                    d3.selectAll(\".lab25to34\")\r\n                        .classed(\"noageSelector\", false)\r\n                        .classed(\"ageSelector\", true);                    \r\n                    d3.selectAll(\".lab18to24\")\r\n                        .classed(\"ageSelector\", false);\r\n\r\n\r\n                });\r\n\r\n            //setup our ui -- requires access to data variable, so inside csv\r\n            // d3.select(\"#menu select\")\r\n            //     .on(\"change\", function() {\r\n            //         column = d3.select(\"#menu select\").property(\"value\");\r\n            //         dataset = drawGraph(data, column);\r\n            //         //console.log(column, dataset);\r\n            //         redraw(dataset, column);\r\n            // });\r\n\r\n        }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + (width - 10) + \",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female' && d.age === '35 to 49') {\r\n                    return \"bar femFocus age35to49\";\r\n                } else if (d.gender === 'Male' && d.age === '35 to 49') {\r\n                    return \"bar malFocus age35to49\";\r\n                } else if (d.gender === 'Female' && d.age === '50 to 64') {\r\n                    return \"bar femFocus age50to64\";\r\n                } else if (d.gender === 'Male' && d.age === '50 to 64') {\r\n                    return \"bar malFocus age50to64\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus age65plus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus age65plus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                //console.log(d.age)\r\n                return d.gender_age\r\n            });\r\n             // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            })\r\n            ;\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-axis lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-axis lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-axis\"\r\n                }\r\n            });\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", function(d, i) {\r\n                if(d.age == '25 to 34'){\r\n                    return \"vis-data-label lab25to34\"\r\n                }\r\n                else if(d.age == '18 to 24'){\r\n                    return \"vis-data-label lab18to24\"\r\n                }\r\n                else{\r\n                    return \"vis-data-label\"\r\n                }\r\n            });\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent of Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths from 2013 to 2014'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();","$(document).ready(function() {\n\n    dataset = [{\n        raceth: \"All\",\n        \"2014\": 19.9,\n        \"2015\": 23.3\n    }, {\n        raceth: \"White non-Hispanic\",\n        \"2014\": 23.3,\n        \"2015\": 27.5\n    }, {\n        raceth: \"Black non-Hispanic\",\n        \"2014\": 11.1,\n        \"2015\": 13.7\n    }, {\n        raceth: \"Hispanic\",\n        \"2014\": 15.3,\n        \"2015\": 18.8\n    }];\n\n    var color = d3.scale.ordinal()\n        .range([\"rgb(211, 211, 211)\", \"#78909C\"]);\n\n    var width, height, margin = {};\n\n    updateWidth();\n\n    var x0 = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal().rangeBands([0, width], 0);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    var min2014 = [18.8, 22.0, 5.5, 12.4] \n    var max2014 = [20.9, 24.7, 18.5, 18.3]\n    var min2015 = [22.2, 26.0, 7.4, 15.7]\n    var max2015 = [24.5, 29.0, 21.9, 21.9] \n\n    var errorBarArea2014all = d3.svg.area()\n    var errorBarArea2015all = d3.svg.area()\n    var errorBarArea2014white = d3.svg.area()\n    var errorBarArea2015white = d3.svg.area()  \n    var errorBarArea2014black = d3.svg.area()\n    var errorBarArea2015black = d3.svg.area()\n    var errorBarArea2014hisp = d3.svg.area()\n    var errorBarArea2015hisp = d3.svg.area() \n\n    var errorBars2014all;\n    var errorBars2015all;\n    var errorBars2014white;\n    var errorBars2015white;\n    var errorBars2014black;\n    var errorBars2015black;\n    var errorBars2014hisp;\n    var errorBars2015hisp;        \n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    var $bars_race = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return {\n                name: name,\n                value: +d[name]\n            };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    var xAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n    var yAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\");\n\n    var yAxisLabel = yAxis.append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    var bars = bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\");\n\n    bars\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            //console.log(d.value + \": \" + y(d.value))\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            //console.log(height - y(9.7));\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n            divtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n            divtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    var legendRect = legend.append(\"rect\")\n        .attr(\"x\", width - 24)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    var legendText = legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n   \n\n    errorBarArea2014all \n        .x(function(d) {return x0('All')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[0]); }) \n        .y1(function(d) {return y(max2014[0]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015all \n        .x(function(d) {return x0('All')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[0]); }) \n        .y1(function(d) {return y(max2015[0]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014white \n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[1]); }) \n        .y1(function(d) {return y(max2014[1]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015white \n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[1]); }) \n        .y1(function(d) {return y(max2015[1]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014black \n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[2]); }) \n        .y1(function(d) {return y(max2014[2]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015black \n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[2]); }) \n        .y1(function(d) {return y(max2015[2]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014hisp \n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[3]); }) \n        .y1(function(d) {return y(max2014[3]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015hisp \n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[3]); }) \n        .y1(function(d) {return y(max2015[3]); }) \n        .interpolate(\"linear\");\n\n    \n    //var errorBarSVG = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    errorBars2014all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015all = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015white = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015black = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2014hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n    errorBars2015hisp = $bars_race.append(\"g\").selectAll(\"path\").data(dataset);\n\n    //\n    errorBars2014all.enter().append(\"path\");\n    errorBars2015all.enter().append(\"path\");\n    errorBars2014white.enter().append(\"path\");\n    errorBars2015white.enter().append(\"path\");\n    errorBars2014black.enter().append(\"path\");\n    errorBars2015black.enter().append(\"path\");\n    errorBars2014hisp.enter().append(\"path\");\n    errorBars2015hisp.enter().append(\"path\");\n\n    //\n    errorBars2014all\n        .attr(\"d\", function(d){return errorBarArea2014all([d]);}) \n        .attr(\"class\", \"bars_race_error\");\n    errorBars2015all\n        .attr(\"d\", function(d){return errorBarArea2015all([d]);})\n        .attr(\"class\", \"bars_race_error\"); \n    errorBars2014white\n        .attr(\"d\", function(d){return errorBarArea2014white([d]);}) \n        .attr(\"class\", \"bars_race_error\");    \n    errorBars2015white\n        .attr(\"d\", function(d){return errorBarArea2015white([d]);})\n        .attr(\"class\", \"bars_race_error\"); \n    errorBars2014black\n        .attr(\"d\", function(d){return errorBarArea2014black([d]);}) \n        .attr(\"class\", \"bars_race_error\");    \n    errorBars2015black\n        .attr(\"d\", function(d){return errorBarArea2015black([d]);})\n        .attr(\"class\", \"bars_race_error\"); \n    errorBars2014hisp\n        .attr(\"d\", function(d){return errorBarArea2014hisp([d]);}) \n        .attr(\"class\", \"bars_race_error\");    \n    errorBars2015hisp\n        .attr(\"d\", function(d){return errorBarArea2015hisp([d]);})\n        .attr(\"class\", \"bars_race_error\"); \n\n    \n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n\n    function render() {\n        updateWidth();\n\n        x1.rangeRoundBands([0, x0.rangeBand()]);\n\n        x0.rangeRoundBands([0, width], .1);\n        y.range([height, 0]);\n\n        xAxis_bars.scale(x0);\n        yAxis_bars.scale(y);\n\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\n\n        xAxis\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis_bars)\n            .selectAll(\".tick text\")\n            .call(wrap, x0.rangeBand());\n\n        yAxis.call(yAxis_bars);\n        yAxisLabel.attr(\"x\", -height/2);\n        legendRect.attr(\"x\", width - 18);\n        legendText.attr(\"x\", width - 24);\n\n        bar.attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n        bars.attr(\"width\", x1.rangeBand())\n            .attr(\"x\", function(d) {\n\n                return x1(d.name) + 10;\n            })\n            .attr(\"y\", function(d) {\n\n                return y(d.value);\n            })\n            .attr(\"value\", function(d) {\n                return d.name;\n            })\n            .attr(\"height\", function(d) {\n                return height - y(d.value);\n            });\n\n\n    errorBarArea2014all \n        .x(function(d) {return x0('All')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[0]); }) \n        .y1(function(d) {return y(max2014[0]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015all \n        .x(function(d) {return x0('All')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[0]); }) \n        .y1(function(d) {return y(max2015[0]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014white \n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[1]); }) \n        .y1(function(d) {return y(max2014[1]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015white \n        .x(function(d) {return x0('White non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[1]); }) \n        .y1(function(d) {return y(max2015[1]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014black \n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[2]); }) \n        .y1(function(d) {return y(max2014[2]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015black \n        .x(function(d) {return x0('Black non-Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[2]); }) \n        .y1(function(d) {return y(max2015[2]); }) \n        .interpolate(\"linear\");\n    errorBarArea2014hisp \n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2; }) \n        .y0(function(d) {return y(min2014[3]); }) \n        .y1(function(d) {return y(max2014[3]); }) \n        .interpolate(\"linear\");\n    errorBarArea2015hisp \n        .x(function(d) {return x0('Hispanic')+x1.rangeBand()/2+x1.rangeBand(); }) \n        .y0(function(d) {return y(min2015[3]); }) \n        .y1(function(d) {return y(max2015[3]); }) \n        .interpolate(\"linear\");\n\n    errorBars2014all\n        .attr(\"d\", function(d){return errorBarArea2014all([d]); });\n    errorBars2015all\n        .attr(\"d\", function(d){return errorBarArea2015all([d]); }); \n    errorBars2014white\n        .attr(\"d\", function(d){return errorBarArea2014white([d]); });    \n    errorBars2015white\n        .attr(\"d\", function(d){return errorBarArea2015white([d]); }); \n    errorBars2014black\n        .attr(\"d\", function(d){return errorBarArea2014black([d]); });    \n    errorBars2015black\n        .attr(\"d\", function(d){return errorBarArea2015black([d]); }); \n    errorBars2014hisp\n        .attr(\"d\", function(d){return errorBarArea2014hisp([d]); });    \n    errorBars2015hisp\n        .attr(\"d\", function(d){return errorBarArea2015hisp([d]); }); \n\n    }\n\n    function updateWidth() {\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\n        margin = {\n                top: 50,\n                right: 10,\n                bottom: 60,\n                left: 50\n            },\n            width = w - margin.left - margin.right;\n\n        if (w < 500) {\n            height = 350 - margin.top - margin.bottom;\n            linemult = 1.4\n            linepad = 40\n        } else {\n            height = 500 - margin.top - margin.bottom;\n            linemult = 1.35\n            linepad = 30\n        }\n\n    }\n    render();\n    window.addEventListener('resize', render);\n});\n"],"sourceRoot":"/source/"}