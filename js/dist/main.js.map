{"version":3,"sources":["custom.js","map-death.js","map-composite.js","lines-bsas.js","bars-race.js","queue.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-substance-pie.js","blocks-gender.js","bars-age.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","console","log","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","notify","selector","eventName","forEach","el","shape","toyear","eval","aYears","index","type","keys","key","groups","age","value","values","wrap","each","word","words","split","reverse","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","pop","join","getComputedTextLength","parallelism","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","$anchor","stop","animate","scrollTop","preventDefault","$id","$current","parent","find","location","pathname","hostname","target","hash","tab","get","play","load","response","asignVal_svg","val_svg","Vis","visualize","states","visualizationWrapper","wrapper","createMap","$maps_sub","palette","self","town_value","geoData","parentNode","getElementsByTagName","innerHTML","fill-opacity","generateLegend_map_sub","$maps_sub_svg","$maps_sub_legends","YlOrBr","margin","right","bottom","left","MDG","Massachusetts","UnitedStates","dateFormat","time","xScale","yScale","sqrt","xAxis_death","axis","orient","ticks","tickFormat","innerTickSize","yAxis_death","tooltip_death","line_death","x","parse","rate","defined","$lines_death","csv","mouseoutFunc","mouseoverFunc","FullName","mousemoveFunc","coordinates","years","dataset","OMRs","Geography","rates","extent","max","inArray","angular","directive","$parse","restrict","scope","groupChartData","link","element","attrs","$watch","newVal","oldVal","symbol","size","tooltipFent","focus","y0","y1","invert","percentVal","x0","pageY","pageX","chartData","canvasId","chartTitle","yearformat","quarter","date","date2","Date","setMonth","getMonth","Math","ceil","seriesColors","seriesLineStrokes","seriesLineDash","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","canvasWidth","canvasHeight","parseDate","bisector","ordinal","rangePoints","x2","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","xAxis_fent","months","xAxis2_fent","tickSize","tickPadding","formatPercent","yAxis_fent","label","$lines_fent","varSeries","filter","seriesData","name","min","c","series","FentanylHeroin","Methadone","Heroin","Fentanyl","controller","$scope","date3","date4","date5","date6","date7","date8","date9","myData","town_names","current_town","margin_bsas","width_bsas","height_bsas","bisectAge","percent","category10","xAxis_bsas","outerTickSize","yAxis_bsas","$lines_bsas","update","delay","string_select","value_select","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","legend_pos_text","legend_pos_dot","y_circle_alcohol","autocomplete","source","request","matches","acItem","indexOf","term","ui","item","asignVal_substance","empty","makeChart_substance","Yes","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","b","getParent","getValue","getSum","_sum","arcTween","toArc","arc","toEndAngle","endAngle","_current","interpolate","startAngle","labelAnimation","centroid","fill","selectArcAnimation","_d","dist","outerRadius","midAngle","sin","cos","updatePie","getPercent","sum","toFixed","getLegend","liveLarge","angle","arcLength","PI","onMouseIn","onClick","option","description","explodedIndex","$pie_substance","_i","animateDuration","opacity","transform","labelHeight","stroke","x1","innerRadius","y2","onMouseOut","pie","arcs","isDelay","_duration","font-family","font-size","text-anchor","attrTween","class","exit","remove","legends","labelWidth","generatePie","prescription","heroin","fentanyl","both","methadone","buprenorphine","time_period","labelsWidth","layout","sort","alignment-baseline","data_pie","asignVal_gender","makeChart_gender","table_html","data_gender","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","multi","$option","$value","drawGraph","column","redraw","rangeBands","bars","$bars_age","gender_age","age_bar_color","age_bar_label","age_bars_legend","options","ease","rangeBand","gender","labels","labels2","numberFormat","percentageFormat","rateFormat","selected","thisButton","raceth","2014","2015","rangeRoundBands","xAxis_bars","yAxis_bars","divtooltip_raceeth","$bars_race","bar","elements","l","elementData","__data__","legend"],"mappings":"AAQA,QAAAA,UAAAC,GAEA,GAAAD,GAAAE,SAAAC,iBAAA,YAGAC,QAAAC,SAAA,WACA,IAAA,GAAAC,GAAA,EAAAA,EAAAN,EAAAO,OAAAD,IAAA,CAIA,GAAAE,GAAAC,EAAAT,EAAAM,IAAAI,SAGAC,GADAP,OAAAQ,OACAR,OAAAS,YAAAL,EAAAM,KAMAC,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAEAC,IAEAA,GAAAV,GAAA,QAAAS,EAAAT,GAAAK,EAAAV,GAAA,IAIAD,EAAAM,GAAAW,MAAAC,mBAAAF,EAAAV,KAWA,QAAAa,kBACAV,EAAA,WAAAC,SAAAI,IAAA,GACAL,EAAA,qBAAAW,SAAA,oBAEAX,EAAA,qBAAAY,YAAA,oBC7CA,QAAAC,OACAC,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAAC,aAGA,QAAAA,aAAAC,EAAAC,GA6JA,QAAAC,KACAC,EAAA,KACAvB,EAAA,aAAAwB,GAAA,eAAA,WACAD,EAAAvB,EAAAyB,MAAAC,SAIA,QAAAH,GAAAI,GAEA,GAAAC,GAAA,KAAAD,CACA3B,GAAA,gBAAA6B,KAAA,6DACA7B,EAAA,cAAA6B,KAAAF,GACA3B,EAAA,iBAAA6B,KAAA,QACA7B,EAAA,WAAA6B,KAAAC,SAAAH,GAAA,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EAEA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAKA,QAAAI,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,IACAzC,EAAA,GAEA0C,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEA8C,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,OACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,WACAA,KAAA,IAAA,IACAW,KAAAhB,GArOA,GAQA9C,GARA+D,EAAAvC,EAAA,GAGAwC,EAAAxC,EAAA,EAMA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CAGA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAMA,MAJAC,SAAAC,IAAA,6BAAArE,GACAoE,QAAAC,IAAAN,EAAAE,SAAAjE,GAAAwC,WAAA0B,KAAA,kBAAAF,EAAAC,SAAAjE,GAAAmE,UAEAG,OAAA,sDAGAP,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAIA,GAAAO,GAAA,IACAzC,EAAA,IAEA4B,EAAAf,GAAA8B,OAAA,cAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEA+B,EAAAvB,GAAAyB,MAAA2B,YAEAd,QAAA,IAAA,IAAA,KAAA,KAAAe,EAAAA,IACAd,MAAAe,YAAAC,MAAA,GAEAhC,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAIA,IAAAgB,GAAAxD,GAAAyD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAnC,OAAA,OACAoC,WAAA,IAAA,MAKAC,EAAA9D,GAAAyD,IAAAM,OACAP,WAAAA,EAIAzC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAiF,GAAA3C,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA6C,GAAAhE,GAAAgE,MAAAjD,EAAAkD,QAAAC,IAAA,SAAA/C,GACA,MAAAL,UAAAK,KAGAgD,EAAA,IACAC,cAAAD,EAAAE,OAAAC,YAEA,IAAAC,EAGAA,GADApD,EAAAE,WAAA+C,cAAA,EACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eACA,GAAAjD,EAAAE,WAAA+C,cACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eAEA,OAGAK,QAAAC,QAAA,UAAA,GACA1C,KAAA,QAAA,SAAAgC,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,IAAA,iBACAnD,KAAA,MAAA8D,YAAAxD,EAAAE,WAAA2B,MAAA,UAAAuB,KAGA/D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA4F,QAAAC,QAAA,UAAA,GACA1E,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,QAsBAc,KACAkB,EAAAD,EAAA,eAAA,kDAsBAvC,EAAA,iBAAA4F,MAAA,WACA5F,EAAA,aAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,EAAAvB,EAAAyB,MAAAgC,KAAA,aAmFA,QAAAoC,QACA/E,QAEAC,MAAAC,GAAAC,KAAA,yBAGAF,MAAAC,GAAAC,KAAA,yBAEAC,SAAA4E,cAGA,QAAAA,cAAA1E,EAAAC,GAyCA,QAAAsE,GAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBA6FA,QAAA/E,KACAgF,EAAA,KACAtG,EAAA,aAAAwB,GAAA,eAAA,WACAxB,EAAAyB,MAAAC,KAGA4E,GAAAtG,EAAAyB,MAAAC,SAKA,QAAA4E,GAAA3E,GAEA,GAAAC,GAAA,KAAAD,CACA2D,GAAA3D,EACAsC,QAAAC,IAAAoB,GACAtF,EAAA,iBAAA6B,KAAA,mFACA7B,EAAA,cAAA6B,KAAAF,GAEAI,EAAAC,UAAA,QACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,EACA,OAAAQ,MAAA,KAAA,UAAAG,EAAAH,KAIA,QAAAmE,GAAA9D,EAAAC,EAAAC,GACA,GAAA6D,GAAA,IACAC,EAAA,GAEA5D,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAwD,GACAxD,KAAA,SAAAyD,GAEAxD,EAAAJ,EAAAE,OAAA,KAGAG,IACAA,GAAAC,MACAhB,GAAA,KACAiB,EAAA,UACAC,EAAA,OAEA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,WACAA,KAAA,IAAA,IACAW,KAAAhB,GA1NA,GAGA2C,GAEAzF,EALA+D,EAAAvC,EAAA,GACAwC,EAAAxC,EAAA,EAKA,KAAAxB,EAAA,EAAAA,EAAA+D,EAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,EAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,EAAAC,SAAAjE,GAAAmE,KAIA,MAHAC,SAAAC,IAAA,6BAAArE,GACAoE,QAAAC,IAAAN,EAAAE,SAAAjE,GAAAwC,WAAA0B,KAAA,kBAAAF,EAAAC,SAAAjE,GAAAmE,UACAG,OAAA,sDAGAP,GAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,EAAAC,SAAAjE,GAAAwC,WAGA,GAAAO,GAAA,IACAzC,EAAA,GAEA8D,SAAAC,IAAA/D,EAEA,IAAA4B,GAAAf,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GACAK,MAAA,SAAA,uBAEAkG,EAAA1F,GAAA8B,OAAA,aAAAC,OAAA,OACAC,KAAA,QAAA,mBAEAT,EAAAvB,GAAAyB,MAAA2B,YACAd,QAAA,IAAA,IAAA,KAAA,KAAAe,EAAAA,IACAd,MAAAe,YAAAqC,KAAA,GACApE,GAAAiB,cAAA,WACA,OAAA,SAAA,WAAA,WACA,YAAA,SAUA,IAAAgB,GAAAxD,GAAAyD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAnC,OAAA,OACAoC,WAAA,IAAA,MAEAC,EAAA9D,GAAAyD,IAAAM,OACAP,WAAAA,EAEAzC,GAAAC,UAAA,QACAyB,KAAAG,EAAAE,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAiF,GAAA3C,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA6C,GAAAhE,GAAAgE,MAAAjD,EAAAkD,QAAAC,IAAA,SAAA/C,GACA,MAAAL,UAAAK,KAEAgD,EAAA,IACAC,cAAAD,EAAAE,OAAAC,EACA,IAAAC,EACAtB,SAAAC,IAAA/D,GAGAoF,EADApD,EAAAE,WAAA+C,cAAA,EACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eACA,GAAAjD,EAAAE,WAAA+C,cACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eAEA,OAGAnB,QAAAC,IAAAqB,GAEAmB,EAAAhB,QAAA,UAAA,GACA1C,KAAA,QAAA,SAAAgC,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,KAAA,iBACAnD,KAAA,MAAA8D,EAAAxD,EAAAE,WAAA2B,MAAA,UAAAuB,KAEA/D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA6G,EAAAhB,QAAA,UAAA,GACA1E,GAAAgB,UAAA,QACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SACAgB,GAAA,aAAA,SAAAW,EAAAtC,MAMA2B,GAAA,aAAA,SAAAW,KAsBAb,KAEAiF,EAAAhE,EAAA,UAAA,0BCxYA,QAAA1B,OACAC,QAEAC,MAAAC,GAAAC,KAAA,yCAGAF,MAAAC,GAAAC,KAAA,yCAEAC,SAAAC,aAGA,QAAAA,aAAAC,MAAAC,SA2CA,QAAAsE,aAAAI,GACA,MAAAA,GAAAC,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,GAAAC,gBAaA,QAAAO,QAAAC,EAAAC,GACA9F,GAAAgB,UAAA6E,GAAA,GAAAE,QAAA,SAAAC,EAAAnH,GACA,GAAAoH,GAAAjG,GAAA8B,OAAAkE,EACAC,GAAAzF,GAAAsF,GAAAG,KA4EA,QAAA3F,WACAC,aAAA,KACAvB,EAAA,aAAAwB,GAAA,eAAA,WACAxB,EAAAyB,MAAAC,KACAH,cAAAvB,EAAAyB,MAAAC,SAKA,QAAAH,cAAAI,MAEA,GAAAC,QAAA,KAAAD,IACA2D,aAAA3D,IACA,IAAAuF,QAAAC,KAAAxF,MAAA,CACA3B,GAAA,gBAAA6B,KAAA,qDACA7B,EAAA,aAAA6B,KAAAF,MAIA3B,EAAA,gBAAA6B,KAAA,oHAGAE,aAAAC,UAAA,iBACAC,aACAC,SAAA,KACA1B,MAAA,OAAA,SAAA2B,EAAAtC,GAEA,GAAAuC,IAAAD,EAAAE,WAAAC,YAAAV,OACA,OAAAQ,MAAA,KAAA,UAAAG,WAAAH,KAIA,QAAAI,gBAAAC,EAAAC,EAAAC,GACA,GAgBA9C,GAhBA+C,EAAA,IACAzC,EAAA,GAEA0C,EAAA7B,GAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEA8C,EAAAJ,EAAAE,OAAA,KAGAG,IAOA,KAAArD,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MACAhB,EAAAM,EAAAa,SAAAzD,GACAuD,EAAAX,EAAAc,QAAA1D,GACAwD,EAAAZ,EAAAe,gBAAA3D,IAIAoD,GAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGAH,EAAAjB,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyC,EAAAF,OAAA,QACAC,KAAA,QAAA,WACAA,KAAA,IAAA,IACAW,KAAAhB,GAhOA3C,EAAA,iBAAA4F,MAAA,WACA5F,EAAA,aAAA0B,IAAA1B,EAAAyB,MAAAgC,KAAA,WACAlC,aAAAvB,EAAAyB,MAAAgC,KAAA,YAGA,IAAAG,SAAAvC,QAAA,GACAwC,SAAAxC,QAAA,GAEAiE,YAEAzF,CACA,KAAAA,EAAA,EAAAA,EAAA+D,QAAAE,SAAAhE,OAAAD,IAAA,CACA,GAAA+D,QAAAE,SAAAjE,GAAAwC,WAAA0B,MAAAF,SAAAC,SAAAjE,GAAAmE,KAIA,WADAG,OAAA,sDAGAP,SAAAE,SAAAjE,GAAAwC,WAAAC,YAAAuB,SAAAC,SAAAjE,GAAAwC,WAGA,GAAAO,OAAA,IACAzC,OAAA,IAEA4B,aAAAf,GAAA8B,OAAA,QAAAC,OAAA,OACAC,KAAA,QAAAJ,OACAI,KAAA,SAAA7C,QACAK,MAAA,SAAA,uBAEAiF,QAAAzE,GAAA8B,OAAA,QAAAC,OAAA,OACAC,KAAA,QAAA,kBAIAT,WAAAvB,GAAAyB,MAAA2B,YACAd,QAAA,IAAA,KAAA,KAAA,MAAA,MAAA,MAAAe,EAAAA,IACAd,OAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WACAhB,YAAAiB,cAAA,WACA,OAAA,IAAA,IAAA,MAAA,OAAA,QAAA,QAAA,OAUA,IAAAgB,YAAAxD,GAAAyD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAnC,OAAA,MACAoC,WAAA,IAAA,MAEAC,QAAA9D,GAAAyD,IAAAM,OACAP,WAAAA,YASAU,IAAAnD,aAAAC,UAAA,QACAyB,KAAAG,QAAAE,UACAJ,QACAX,OAAA,QACA2C,QAAA,YAAA,GACA1C,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAAiF,SAAA3C,KAEAX,GAAA,YAAA,SAAAW,GACA,GAAA6C,GAAAhE,GAAAgE,MAAAjD,aAAAkD,QAAAC,IAAA,SAAA/C,GACA,MAAAL,UAAAK,KAGAgD,EAAA,IACAC,cAAAD,EAAAE,OAAAC,YAEA,IAAAC,EAGAA,GADApD,EAAAE,WAAA+C,cAAA,EACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eACA,GAAAjD,EAAAE,WAAA+C,cACApE,GAAAwE,OAAA,OAAArD,EAAAE,WAAA+C,eAEA,OAGAK,QAAAC,QAAA,UAAA,GACA1C,KAAA,QAAA,SAAAgC,EAAA,GAAA,IACA,uBAAAA,EAAA,GAAA,KAAA,iBACAnD,KAAA,MAAA8D,YAAAxD,EAAAE,WAAA2B,MAAA,UAAAuB,KAGA/D,GAAA,YAAA,SAAAW,EAAAtC,GAGAmB,GAAA8B,OAAArB,MAAAjB,MAAA,eAAA,KACAA,MAAA,SAAA,SACAA,MAAA,eAAA,SAEAgB,GAAA,WAAA,SAAAW,EAAAtC,GACA4F,QAAAC,QAAA,UAAA,GACA1E,GAAAgB,UAAA,iBACAxB,MAAA,eAAA,GACAA,MAAA,SAAA,WACAA,MAAA,eAAA,WAEAA,MAAA,SAAA,WACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SAIA4G,SACA,IAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,OACA,KAAA,SAEAC,MAAA,CACA/F,WACAkB,eAAAD,WAAA,SAAA,kDC64BA,QAAA+E,MAAAnF,EAAAtC,GAqBA,MAnBAmB,IAAAuG,KAAApF,GAAA4E,QAAA,SAAAS,GACArF,EAAAqF,IAAArF,EAAAqF,GACA,OAAAA,IACAA,IAAAC,QAQAA,OAAAD,GAAA,OAAArE,MACAuE,IAAAvF,EAAAuF,IACAC,MAAAxF,EAAAqF,KATAC,OAAAD,IACAI,SACAF,IAAAvF,EAAAuF,IACAC,MAAAxF,EAAAqF,SAYArF,EC/4BA,QAAA0F,MAAAlE,EAAAf,GACAe,EAAAmE,KAAA,WAUA,IATA,GAEAC,GAFApE,EAAA3C,GAAA8B,OAAArB,MACAuG,EAAArE,EAAAA,OAAAsE,MAAA,OAAAC,UAEAC,KACAC,EAAA,EACAC,EAAA,IACAC,EAAA3E,EAAAX,KAAA,KACAuF,EAAAC,WAAA7E,EAAAX,KAAA,OACAyF,EAAA9E,EAAAA,KAAA,MAAAZ,OAAA,SAAAC,KAAA,IAAA,GAAAA,KAAA,IAAAsF,GAAAtF,KAAA,KAAAuF,EAAA,MACAR,EAAAC,EAAAU,OACAP,EAAAhF,KAAA4E,GACAU,EAAA9E,KAAAwE,EAAAQ,KAAA,MACAF,EAAAxD,OAAA2D,wBAAAhG,IACAuF,EAAAO,MACAD,EAAA9E,KAAAwE,EAAAQ,KAAA,MACAR,GAAAJ,GACAU,EAAA9E,EAAAZ,OAAA,SAAAC,KAAA,IAAA,GAAAA,KAAA,IAAAsF,GAAAtF,KAAA,OAAAoF,EAAAC,EAAAE,EAAA,MAAA5E,KAAAoE,OC7LA,WAGA,QAAAjH,GAAA+H,GAaA,QAAAH,KACA,KAAAI,EAAAC,EAAAC,EAAAlJ,QAAAmJ,EAAAJ,GAAA,CACA,GAAAhJ,GAAAkJ,IACAG,EAAAF,EAAAnJ,GACAsJ,EAAAC,EAAAC,KAAAH,EAAA,EACAC,GAAAhG,KAAAmG,EAAAzJ,MACAoJ,EACAC,EAAA,GAAAK,MAAA,KAAAJ,IAIA,QAAAG,GAAAzJ,GACA,MAAA,UAAA2J,EAAApG,KACA6F,EACA,MAAA7H,IACA,MAAAoI,GACApI,EAAAoI,EACAT,EAAAU,EAAAC,IACA9C,MAEAoC,EAAAnJ,GAAAuD,IACAqG,EAAAX,GAAAJ,IACA9B,OAKA,QAAAA,KACA,MAAAxF,EAAAuI,EAAAvI,GACAwI,EAAAD,EAAAvI,EAAA4H,GACAW,EAAAJ,MAAA,MAAAnI,GAAAiE,OAAA2D,IA1CA,GAAAa,GAKAf,EAGAc,EAPAZ,KACAD,EAAA,EACAE,EAAA,EACAQ,EAAA,EAEArI,EAAA,KACAuI,EAAAG,CAsCA,OAnCAjB,KAAAA,EAAAxE,EAAAA,GAmCAwF,GACA9I,MAAA,WAMA,MALAK,KACA4H,EAAA7F,KAAA4G,aACAN,EACAf,KAEAmB,GAEAF,MAAA,SAAAK,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAH,GAAA7C,IACAiD,GAEA3I,SAAA,SAAA8I,GAIA,MAHAL,GAAAK,EACAJ,GAAA,EACAH,GAAA7C,IACAiD,IAKA,QAAAC,MAxEA,GAAAV,MAAAA,KA0EAtI,GAAAmJ,QAAA,QACA,kBAAAC,SAAAA,OAAAC,IAAAD,OAAA,WAAA,MAAApJ,KACA,gBAAAsJ,SAAAA,OAAAC,QAAAD,OAAAC,QAAAvJ,EACAW,KAAAX,MAAAA,KL5EArB,SAAA6K,cAAA,WACA7K,SAAA6K,cAAA,UAEA,IAAA9K,QAAA,EACAD,UAAAC,OAgDAQ,EAAAL,QAAA4K,OAAA7J,gBACAV,EAAAP,UAAA+K,MAAA9J,gBAGAV,EAAA,WACAA,EAAA,iBAAAyK,KAAA,QAAA,SAAAC,GACA,GAAAC,GAAA3K,EAAAyB,KACAzB,GAAA,cAAA4K,OAAAC,SACAC,UAAA9K,EAAA2K,EAAA3H,KAAA,SAAA/C,SAAAI,KACA,KAAA,iBACAqK,EAAAK,qBAKA/K,EAAA,4BAAA4F,MAAA,WACA,0BAAA5F,EAAAyB,MAAAuB,KAAA,UAAA,mBAAAhD,EAAAyB,MAAAuB,KAAA,UACAhD,EAAA,0BAAA4F,UAMA5F,EAAAL,QAAA4K,OAAA,WACAvK,EAAAL,QAAAmL,aAAA,IACA9K,EAAA,eAAAW,SAAA,oBAEAX,EAAA,eAAAY,YAAA,oBAIAZ,EAAA,WAAA8H,KAAA,WACA,GAAA9H,EAAAL,QAAAmL,aAAA9K,EAAAyB,MAAAxB,SAAA,IAAA,GAAA,CACA,GAAA+K,GAAAhL,EAAAyB,MAAAuB,KAAA,KACAhD,GAAA,kBAAAY,YAAA,UACAZ,EAAA,qBAAAgL,EAAA,MAAArK,SAAA,SAEA,IAAAsK,GAAAjL,EAAAyB,MAAAuB,KAAA,aAEAhD,GAAA,oBAAA6B,KAAAoJ,QAMAjL,EAAA,kBAAAwB,GAAA,QAAA,WACAxB,EAAAyB,MAAAyJ,SAAAC,KAAA,MAAAvK,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,YAKAX,EAAA,4BAAA4F,MAAA,WACA,GAAAwF,SAAAC,SAAArF,QAAA,MAAA,KAAAvE,KAAA4J,SAAArF,QAAA,MAAA,KAAAoF,SAAAE,UAAA7J,KAAA6J,SAAA,CAEA,GAAAC,GAAAvL,EAAAyB,KAAA+J,KAEA,IADAD,EAAAA,EAAAzL,OAAAyL,EAAAvL,EAAA,SAAAyB,KAAA+J,KAAApC,MAAA,GAAA,KACAmC,EAAAzL,OAIA,MAHAE,GAAA,aAAA6K,SACAC,UAAAS,EAAAtL,SAAAI,KACA,MACA,KAyBAL,EAAA,kBAAA4F,MAAA,SAAA4D,GACAA,EAAAuB,iBACA/K,EAAAyB,MAAAgK,IAAA,UAKAzL,EAAA,UAAA4F,MAAA,WACA5F,EAAA,WAAA0L,IAAA,GAAAC,SAEA3L,EAAA,UAAA4F,MAAA,WACA5F,EAAA,WAAA0L,IAAA,GAAAC,SAIA3L,EAAA,WACAA,EAAA,oBAAA4L,KAAA,iBAAA,SAAAC,GAIA,QAAAC,GAAApK,GACA1B,EAAA,YAAAY,YAAA,UACAZ,EAAA,mBAAA0B,EAAA,MAAAf,SAAA,UACA,QAAAe,GACA1B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,iBAAAgD,KAAA,UAAA,GACAhD,EAAA,aAAA6B,KAAA,iIAEA7B,EAAA,oBAAAgD,KAAA,UAAA,GACAhD,EAAA,aAAA6B,KAAA,iIAZA,GAAAkK,GAAA,KACAD,GAAAC,GAeA/L,EAAA,YAAAwB,GAAA,QAAA,WACAsK,EAAA9L,EAAAyB,MAAAC,SAGA1B,EAAA,iBAAAwB,GAAA,QAAA,WACAsK,EAAA9L,EAAAyB,MAAAgC,KAAA,iBClLAzD,EAAAP,UAAA+K,MAAA,WACA3J,MACAgF,QKFA,IAAAmG,KAAA,SAAAhL,GAyBA,QAAAiL,GAAA7K,EAAA8K,EAAAzI,GAEA,GAAA0I,GAAAnL,EAAA8B,OAAA,cAEAW,GAAAA,KAAAsD,QAAA,SAAAtD,EAAA5D,GACA,GAAAuM,GAAAD,EACApJ,OAAA,OACAvC,OACAoC,MAAAA,EAAA,KACAzC,OAAAA,EAAA,MAGAkM,GAAAD,EAAAF,EAAAzI,KAMA,QAAA4I,GAAAD,EAAA3H,EAAAhB,GAqEA,QAAAmD,GAAAC,EAAAC,GACA9F,EAAAgB,UAAA6E,GAAA,GAAAE,QAAA,SAAAC,EAAAnH,GACA,GAAAoH,GAAAjG,EAAA8B,OAAAkE,EACAC,GAAAzF,GAAAsF,GAAAG,KAtEAmF,EAAArJ,OAAA,KACAY,KAAAF,EAAA+D,KACAxE,KAAA,QAAA,UACAoJ,EAAArJ,OAAA,MACAY,KAAA,IACAX,KAAA,QAAA,UAEAoJ,EAAArJ,OAAA,IAEA,IAAAuJ,GAAAF,EAAArJ,OAAA,OACAC,MACAJ,MAAAA,EACAzC,OAAAA,GAGAmM,GAAAtK,UAAA,QACAyB,KAAAgB,EAAAX,UACAJ,QACAX,OAAA,QACAC,KAAA,IAAA+B,GACAvE,MAAA,SAAA,SACAA,MAAA,eAAA,SACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,GAAA8H,GAAAlE,EAAAmE,OAAAzF,EAAAE,WAAA2B,KACA,OAAAuI,GAAA5E,KAEAnG,GAAA,YAAA,SAAAW,EAAAtC,MAGA2B,GAAA,WAAA,SAAAW,EAAAtC,MAGAmD,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAAE,WAAA2B,KAAAqC,gBAEArD,KAAA,KAAA,WACAxB,GAAA,aAAA,SAAAW,EAAAtC,GACA+G,EAAA,IAAAzE,EAAAE,WAAA2B,KAAAqC,cAAA,YAKA7E,GAAA,aAAA,SAAAW,GACAyE,EAAA,IAAAzE,EAAAE,WAAA2B,KAAAqC,cAAA,cAGA7E,GAAA,SAAA,SAAAgL,GACA,GACAC,GADAC,EAAAF,EAAA/I,MAKAgJ,GAFA,SAAAhJ,EAAAmE,OAAA8E,EAAA,GAAArK,WAAA2B,MAEAhD,EAAAwE,OAAA,SAAA/B,EAAAmE,OAAA8E,EAAA,GAAArK,WAAA2B,OAEA,MAKAwI,EAAAvH,OAAA0H,WAAAA,WAAAC,qBAAA,MAAA,GAAAC,UAAAH,EAAA,GAAArK,WAAA2B,KAAA,MAAAyI,EACAzL,EAAA8B,OAAA0J,EAAAvH,QAAAzE,MAAA,eAAA,IAAAA,MAAA,SAAA,SAAAA,MAAA,eAAA,WAEAgB,GAAA,WAAA,SAAAgL,GACAA,EAAAvH,OAAA0H,WAAAA,WAAAC,qBAAA,MAAA,GAAAC,UAAA,GACA7L,EAAAgB,UAAA,gBAAAxB,OAAAsM,eAAA,IAAAtM,MAAA,SAAA,SAAAA,MAAA,eAAA,WAsBA,QAAAuM,GAAAtK,EAAAC,EAAAC,GACA,GAAAC,GAAA,IACAzC,EAAA,GAEA6M,EAAAhM,EAAA8B,OAAA,IAAAJ,GAAAK,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEA8M,EAAAD,EAAAjK,OAAA,KAGAG,IACAA,GAAAC,MAAAhB,GAAA,KAAAiB,EAAA,UAAAC,EAAA,QACA,IAAAxD,EACA,KAAAA,EAAA,EAAAA,EAAA4C,EAAAa,SAAAxD,OAAAD,IACAqD,EAAAC,MAAAhB,EAAAM,EAAAa,SAAAzD,GAAAuD,EAAAX,EAAAc,QAAA1D,GAAAwD,EAAAZ,EAAAe,gBAAA3D,IAGAoN,GAAAjL,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,SAAA,IACAA,KAAA,QAAA,IACAA,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAxC,MAAA,SAAA,SACAA,MAAA,eAAA,UACAA,MAAA,OAAA,SAAA2B,EAAAtC,GACA,MAAAsC,GAAAiB,IAGA6J,EAAAjL,UAAA,QACAyB,KAAAP,GACAQ,QAAAX,OAAA,QACAC,KAAA,IAAA,SAAAb,EAAAtC,GACA,MAAA,IAAAA,IAEAmD,KAAA,IAAA,IACAW,KAAA,SAAAxB,EAAAtC,GACA,MAAAsC,GAAAkB,IAEA7C,MAAA,YAAA,QAEAyM,EAAAlK,OAAA,QACAC,KAAA,QAAA,WACAA,KAAA,IAAA,IACAW,KAAAhB,GAjLA7B,QACAC,MAAAC,EAAAC,KAAA,yBACAF,MAAAC,EAAAC,KAAA,qBACA0I,MAAAsC,EAEA,IAAArJ,GAAA,IACAzC,EAAA,IAEAqE,EAAAxD,EAAAyD,IAAAC,iBACAC,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACAC,QAAA,MAAA,KACAnC,OAAA,OACAoC,WAAA,IAAA,MAMAE,GAJA/D,EAAA8B,OAAA,UAAAC,OAAA,OACAC,KAAA,QAAAJ,GACAI,KAAA,SAAA7C,GAEAa,EAAAyD,IAAAM,OAAAP,WAAAA,IACA+H,EAAAvL,EAAAyB,MAAA2B,YAAAd,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAe,YAAA4I,OAAA,IAoGA3K,EAAAvB,EAAAyB,MAAA2B,YAAAd,QAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAAC,MAAAe,YAAA4I,OAAA,GACA3K,GAAAiB,cAAA,WACA,OAAA,KAAA,SAAA,UAAA,UACA,UAAA,aAKAuJ,EAAAxK,EAAA,aAAA,iEAqDAvB,ICnLAmM,QACA9M,IAAA,GACA+M,MAAA,GACAC,OAAA,GACAC,KAAA,IAGA1K,MAAA,IACAzC,OAAA,IAEAoN,IAAA,GAEAC,eAAA,MACAC,cAAA,OAGAC,WAAA1M,GAAA2M,KAAAnI,OAAA,MAGAoI,OAAA5M,GAAA2M,KAAAlL,QACAc,OAAA4J,OAAAG,KAAA1K,MAAAuK,OAAAC,MAAAD,OAAAG,OAEAO,OAAA7M,GAAAyB,MAAAqL,OACAvK,OAAA4J,OAAA9M,IAAAF,OAAAgN,OAAAE,SAGAU,YAAA/M,GAAA6B,IAAAmL,OACAvL,MAAAmL,QACAK,OAAA,UACAC,MAAA,IACAC,WAAA,SAAAhM,GACA,MAAAuL,YAAAvL,KAEAiM,eAAA,IAEAC,YAAArN,GAAA6B,IAAAmL,OACAvL,MAAAoL,QACAI,OAAA,QACAG,eAAA,IASAE,cAAAtN,GAAA8B,OAAA,gBACAC,OAAA,OACAC,KAAA,QAAA,iBAIAuL,WAAAvN,GAAA6B,IAAAsF,OACAqG,EAAA,SAAArM,GACA,MAAAyL,QAAAF,WAAAe,MAAAtM,EAAAR,SAEA2G,EAAA,SAAAnG,GACA,MAAA0L,SAAA1L,EAAAuM,QAEAC,QAAA,SAAAxM,GACA,MAAA0L,SAAA1L,EAAAuM,QAGAE,aAAA5N,GAAA8B,OAAA,gBACAC,OAAA,OACAC,KAAA,QAAAJ,OACAI,KAAA,SAAA7C,OAOAa,IAAA6N,IAAA,2BAAA,SAAApL,GAwKA,QAAAqL,KAEA9N,GAAAgB,UAAA,mBAAA0D,QAAA,aAAA,GAAAA,QAAA,WAAA,GACA4I,cAAA9N,MAAA,UAAA,QAGA,QAAAuO,GAAA5M,EAAAtC,GAEAmB,GAAAgB,UAAA,aAAA0D,QAAA,aAAA,GACA1E,GAAA8B,OAAArB,MAAAqB,OAAA,mBAAA4C,QAAA,aAAA,GAAAA,QAAA,WAAA,GACA4I,cACA9N,MAAA,UAAA,SACAqB,KAAA,6CAAAM,EAAA6M,SAAA,eAQA,QAAAC,GAAA9M,GAEA+M,EAAAlO,GAAAgE,MAAAvD,KACA,IAAA+M,GAAAU,EAAA,GACA5G,EAAA4G,EAAA,EAGAZ,eACA9N,MAAA,MAAA8H,EAAA,MACA9H,MAAA,OAAAgO,EAAA,MACAhO,MAAA,WAAA,YACAA,MAAA,UAAA,MAtMA,GAAA2O,GAAAnO,GAAAuG,KAAA9D,EAAA,IAAA2F,MAAA,EAAA,IAIAgG,IAGA3L,GAAAsD,QAAA,SAAA5E,EAAAtC,GAEA,GAAAwP,KAEAF,GAAApI,QAAA,SAAAuB,GAGAnG,EAAAmG,IAEA+G,EAAAlM,MACAxB,KAAA2G,EACAoG,KAAAvM,EAAAmG,GACAgH,UAAAnN,EAAAmN,UACAN,SAAA7M,EAAA6M,aAMAI,EAAAjM,MACAmM,UAAAnN,EAAAmN,UACAN,SAAA7M,EAAA6M,SACAO,MAAAF,MAKAzB,OAAAtK,OACAtC,GAAAwO,OAAAL,EAAA,SAAAhN,GACA,MAAAuL,YAAAe,MAAAtM,MAIA0L,OAAAvK,QACAtC,GAAAyO,IAAAL,EAAA,SAAAjN,GACA,MAAAnB,IAAAyO,IAAAtN,EAAAoN,MAAA,SAAApN,GACA,OAAAA,EAAAuM,SAGA,GAKA,IAAAjH,GAAAmH,aAAA5M,UAAA,iBACAyB,KAAA2L,GACA1L,QACAX,OAAA,KACAC,KAAA,QAAA,cAIAyE,GAAAzF,UAAA,QACAyB,KAAA,SAAAtB,GACA,OAAAA,EAAAoN,SAEA7L,QACAX,OAAA,QACAC,KAAA,QAAA,cACA0C,QAAA,gBAAA,SAAAvD,EAAAtC,GAEA,MAAAG,GAAA0P,QAAAvN,EAAAtC,GAAAyP,UAAA9B,iBAAA,IAQA9H,QAAA,MAAA,SAAAvD,EAAAtC,GAEA,MAAAG,GAAA0P,QAAAvN,EAAAtC,GAAAyP,UAAA7B,gBAAA,IAQAzK,KAAA,IAAAuL,WAQA,IAAApB,IACA9M,IAAA,GACA+M,MAAA,GACAC,OAAA,GACAC,KAAA,IAGA1K,EAAA,IACAzC,EAAA,GAIAyO,cAAA7L,OAAA,KACAC,KAAA,QAAA,gBAEAA,KAAA,YAAA,gBAAA7C,EAAAgN,EAAAE,OAAAF,EAAA9M,IAAA8M,EAAA9M,KAAA,KACAgJ,KAAA0E,aACAhL,OAAA,QACAC,KAAA,IAAAJ,EAAAuK,EAAAG,MACAtK,KAAA,IAAAmK,EAAAE,OAAA,IACArK,KAAA,KAAA,OACAxC,MAAA,cAAA,OACAwC,KAAA,QAAA,SACAW,KAAA,QAEAiL,aAAA7L,OAAA,KACAC,KAAA,QAAA,gBAEAA,KAAA,YAAA,aAAAmK,EAAAG,KAAA,KAAAH,EAAA9M,IAAA,EAAA,KACAgJ,KAAAgF,aACAtL,OAAA,QACAC,KAAA,YAAA,eACAA,KAAA,KAAAmK,EAAA9M,KACA2C,KAAA,KAAAmK,EAAAG,MACAtK,KAAA,KAAA,OACAxC,MAAA,cAAA,OACAwC,KAAA,QAAA,SACAW,KAAA,qDAYAiL,aAAA7L,OAAA,QACAC,KAAA,QAAA,YACAA,KAAA,IAAAJ,EAAAuK,EAAAG,KAAA,IACAtK,KAAA,IAAA6K,OAAA,MAAA,GACA7K,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,MAEAiL,aAAA7L,OAAA,QACAC,KAAA,QAAA,aACAA,KAAA,IAAAJ,EAAAuK,EAAAG,KAAA,IACAtK,KAAA,IAAA6K,OAAA,IAAA,GACA7K,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,OAKA3C,GAAAgB,UAAA,iBACAR,GAAA,YAAAuN,GACAvN,GAAA,WAAAsN,GACAtN,GAAA,YAAAyN,EAoBA,IAAAC,IAAA,EAAA,KCvQAS,QAAAvF,OAAA,cACAwF,UAAA,wBAAA,SACA,SAAAC,GACA,OACAC,SAAA,KACAC,OACAC,eAAA,KAEAC,KAAA,SAAAF,EAAAG,EAAAC,GACAJ,EAAAK,OAAA,iBAAA,SAAAC,EAAAC,GA2VA,QAAAxB,KAEA9N,GAAAgB,UAAA,aAAA0D,QAAA,aAAA,GAAAA,QAAA,WAAA,GACA1E,GAAAgB,UAAA,cAAA0D,QAAA,aAAA,GAAAA,QAAA,WAAA,GAAA1C,KAAA,IAAAhC,GAAA6B,IAAA0N,SAAAjJ,KAAA,UAAAkJ,KAAA,KAAAhQ,MAAA,eAAA,KACAiQ,EAAAjQ,MAAA,UAAA,QACAkQ,EAAAlQ,MAAA,UAAA,QAGA,QAAAuO,GAAA5M,EAAAtC,GAEAmB,GAAAgB,UAAA,aAAA0D,QAAA,aAAA,GACA1E,GAAAgB,UAAA,cAAA0D,QAAA,aAAA,GAAA1C,KAAA,IAAAhC,GAAA6B,IAAA0N,SAAAjJ,KAAA,UAAAkJ,KAAA,KAAAhQ,MAAA,eAAA,KAMAQ,GAAA8B,OAAArB,MAAAqB,OAAA,aAAA4C,QAAA,aAAA,GAAAA,QAAA,WAAA,EAEA,IACAiL,IADA3P,GAAAgE,MAAAvD,MAAA,GACAT,GAAAgE,MAAAvD,MAAA,IACAmP,EAAAtI,EAAAuI,OAAAF,GACAG,EAAA9P,GAAAwE,OAAA,OAAAoL,EAEAH,GACAjQ,MAAA,UAAA,MACAqB,KACA,2CAAAiP,EAAA,eAIAJ,EAAAlQ,MAAA,UAAA,MAGA,QAAAyO,GAAA9M,GAKA,GAAA4O,GAAA/P,GAAAgE,MAAAvD,MAAA,GACAkP,EAAA3P,GAAAgE,MAAAvD,MAAA,GACAmP,EAAAtI,EAAAuI,OAAAF,GACAG,EAAA9P,GAAAwE,OAAA,OAAAoL,EAEAF,GAAA1N,KAAA,YAAA,aAAA+N,EAAA,IAAAJ,EAAA,KAIAF,EACAjQ,MAAA,MAAAQ,GAAA0J,MAAAsG,MAAA,GAAA,MACAxQ,MAAA,OAAAQ,GAAA0J,MAAAuG,MAAA,EAAA,MACApP,KACA,2CAAAiP,EAAA,eA9YA,GAEAI,IAFAnB,EAAAoB,SACApB,EAAAqB,WACArB,EAAAC,gBAIAqB,GAHAH,EAAApR,OAAA,EAEAkB,GAAA2M,KAAAnI,OAAA,MACAxE,GAAA2M,KAAAnI,OAAA,OAEA8L,EAAA,SAAAC,EAAA1R,GACA,GAAAA,GAAA,CACA,IAAAA,GAAA,EAAA,CACA,GAAA2R,GAAA,GAAAC,KAGA,OAFAD,GAAAE,SAAAH,EAAAI,WAAA,IACA9H,EAAA+H,KAAAC,KAAAL,EAAAG,WAAA,GACA,IAAA9H,IAIAiI,GAAA,UAAA,UAAA,UAAA,WACAC,GAAA,QAAA,QAAA,QAAA,SACAC,GAAA,UAAA,UAAA,UAAA,WACAC,GAAA,SAAA,SAAA,SAAA,UACAC,GAAA,MAAA,QAAA,QAAA,OACAC,GAAA,UAAA,UAAA,UAAA,WACAC,EAAA,OAEAjF,GACA9M,IAAA,GACA+M,MAAA,IACAC,OAAA,GACAC,KAAA,IAGA1K,EAAA,IACAzC,EAAA,IAEAkS,EAAArR,GAAA8B,OAAAoN,EAAA,IAAAlN,KAAA,SACAsP,EAAAtR,GAAA8B,OAAAoN,EAAA,IAAAlN,KAAA,UACAJ,EAAAyP,EAAAlF,EAAAG,KAAAH,EAAAC,MACAjN,EAAAmS,EAAAnF,EAAA9M,IAAA8M,EAAAE,OACAgE,EAAArQ,GAAA2M,KAAAnI,OAAA,MAEA+M,EAAAvR,GAAA2M,KAAAnI,OAAA,UAAAiJ,MAQAD,GANAxN,GAAAwR,SAAA,SAAArQ,GACA,MAAAA,GAAAoP,OACAjE,KAEAiF,EAAA,YAEAvR,GAAAyB,MAAAgQ,UAAAC,aAAA,EAAA9P,KACA+P,EAAA3R,GAAAyB,MAAAgQ,UAAAC,aAAA,EAAA9P,IAUA0F,EAAAtH,GAAAyB,MAAAmQ,SACArP,OAAApD,EAAA,IAEA0S,EAAA7R,GAAAyB,MAAAgQ,UACAlP,MAAAuO,GAEAgB,EAAA9R,GAAAyB,MAAAgQ,UACAlP,MAAAwO,GAEAgB,EAAA/R,GAAAyB,MAAAgQ,UACAlP,MAAAyO,GAEAgB,EAAAhS,GAAAyB,MAAAgQ,UACAlP,MAAA0O,GAEAgB,EAAAjS,GAAAyB,MAAAgQ,UACAlP,MAAA2O,GAEAgB,EAAAlS,GAAAyB,MAAAgQ,UACAlP,MAAA4O,GAEAgB,EAAAnS,GAAA6B,IAAAmL,OACAvL,MAAA+L,GACAP,OAAA,UACAC,MAAAlN,GAAA2M,KAAAyF,OAAA,GAEAjF,WAAAmD,GAGA+B,EAAArS,GAAA6B,IAAAmL,OACAvL,MAAA+L,GACAN,MAAAlN,GAAA2M,KAAAwB,MAAA,GACAhB,WAAAkD,GACAiC,SAAA,EAAA,GACAC,YAAA,GACAtF,OAAA,UAGAuF,EAAAxS,GAAAwE,OAAA,OAEAiO,EAAAzS,GAAA6B,IAAAmL,OACAvL,MAAA6F,GACA2F,OAAA,QACAE,WAAAqF,GACAtF,MAAA,GACAoF,SAAA,EAAA,GACAC,YAAA,GAKA9C,EAAAzP,GAAA8B,OAAA,QACAC,OAAA,OACAC,KAAA,QAAA,eAEAmF,EAAAnH,GAAA6B,IAAAsF,OAEAqG,EAAA,SAAArM,GACA,MAAAqM,GAAArM,EAAAuR,SAEApL,EAAA,SAAAnG,GACA,MAAAmG,GAAAnG,EAAAwF,SAIAgM,EAAA3S,GAAA8B,OAAAoN,EAAA,IAAAnN,OAAA,OACAC,KAAA,QAAAJ,EAAAuK,EAAAG,KAAAH,EAAAC,OACApK,KAAA,SAAA7C,EAAAgN,EAAA9M,IAAA8M,EAAAE,QACAtK,OAAA,KACAC,KAAA,YAAA,aAAAmK,EAAAG,KAAA,IAAAH,EAAA9M,IAAA,KAgBAuT,EAAA5S,GAAAuG,KAAA2J,EAAA,IAAA2C,OAAA,SAAArM,GACA,MAAAA,KAAA4K,GAGAS,GAAAvP,OAAAsQ,GACAd,EAAAxP,OAAAsQ,GACAb,EAAAzP,OAAAsQ,GACAZ,EAAA1P,OAAAsQ,GACAX,EAAA3P,OAAAsQ,GACAV,EAAA5P,OAAAsQ,EAEA,IAAAE,GAAAF,EAAA1O,IAAA,SAAA6O,GACA,OACAA,KAAAA,EACAnM,OAAAsJ,EAAAhM,IAAA,SAAA/C,GACA,OACA4R,KAAAA,EACAL,MAAAvR,EAAAiQ,GACAzK,OAAAxF,EAAA4R,QAOAvF,GAAAlL,OAAA4N,EAAAhM,IAAA,SAAA/C,GACA,MAAAA,GAAAoP,QAGAoB,EAAArP,OAAA4N,EAAAhM,IAAA,SAAA/C,GACA,MAAAA,GAAAoP,QAGAjJ,EAAAhF,QACAtC,GAAAgT,IAAAF,EAAA,SAAAG,GACA,MAAAjT,IAAAgT,IAAAC,EAAArM,OAAA,SAAAzF,GAEA,MAAA,OAGAnB,GAAAyO,IAAAqE,EAAA,SAAAG,GACA,MAAAjT,IAAAyO,IAAAwE,EAAArM,OAAA,SAAAzF,GACA,MAAAA,GAAAwF,YAKAgM,EAAA5Q,OAAA,KACAC,KAAA,QAAA,eACAA,KAAA,YAAA,eAAA7C,EAAA,KACAkJ,KAAA8J,GACApQ,OAAA,QACAC,KAAA,QAAA,QACAxC,MAAA,eAAA,SACA6I,KAAA8J,GAEAQ,EAAA5Q,OAAA,KACAC,KAAA,QAAA,gBACAA,KAAA,YAAA,gBAAA7C,EAAA,IAAA,KACAkJ,KAAAgK,GACAtQ,OAAA,QACAC,KAAA,IAAAJ,EAAAuK,EAAAG,MACAtK,KAAA,IAAAmK,EAAAE,OAAA,IACArK,KAAA,KAAA,OACAxC,MAAA,cAAA,OACAwC,KAAA,QAAA,SACAW,KAAA,WAMAgQ,EAAA5Q,OAAA,KACAC,KAAA,QAAA,eACAqG,KAAAoK,GACA1Q,OAAA,QACAC,KAAA,YAAA,eACAA,KAAA,IAAA,GACAA,KAAA,KAAA,IACAA,KAAA,KAAA,OACAxC,MAAA,cAAA,OACAA,MAAA,OAAA,mBACAA,MAAA,cAAA,UAEAmD,KAAA,wBAEA,IAAAuQ,GAAAP,EAAA3R,UAAA,WACAyB,KAAAqQ,GACApQ,QAAAX,OAAA,KACAC,KAAA,QAAA,aAIAkR,GAAAnR,OAAA,QACAC,KAAA,QAAA,QACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,GAAAhG,EAAAyF,UAEApH,MAAA,SAAA,SAAA2B,GACA,MAAA0Q,GAAA1Q,EAAA4R,QAEAvT,MAAA,eAAA,SAAA2B,GACA,MAAA2Q,GAAA3Q,EAAA4R,QAEAvT,MAAA,mBAAA,SAAA2B,GACA,MAAA4Q,GAAA5Q,EAAA4R,QAEAvT,MAAA,OAAA,QAIAmT,EAAA5Q,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAAJ,EAAA,GACAI,KAAA,IAAAsF,EAAA4I,EAAA,GAAAiD,gBAAA,GACAnR,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,qBACAnD,MAAA,OAAA,gBACAA,MAAA,cAAA,UAEAmT,EAAA5Q,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAAJ,EAAA,GACAI,KAAA,IAAAsF,EAAA4I,EAAA,GAAAkD,WAAA,GACApR,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,aACAnD,MAAA,OAAA,gBACAA,MAAA,cAAA,UAEAmT,EAAA5Q,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAAJ,EAAA,GACAI,KAAA,IAAAsF,EAAA4I,EAAA,GAAAmD,QAAA,IACArR,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,UAEAnD,MAAA,OAAA,QACAA,MAAA,YAAA,QAGAmT,EAAA5Q,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAAJ,EAAA,GACAI,KAAA,IAAAsF,EAAA4I,EAAA,GAAAoD,UAAA,IACAtR,KAAA,KAAA,OACAxC,MAAA,cAAA,SACAmD,KAAA,YACAnD,MAAA,YAAA,QAEAA,MAAA,OAAA,OA8BA,IAAAkQ,GAAAiD,EAAA5Q,OAAA,KACAC,KAAA,QAAA,SACAxC,MAAA,UAAA,OAEAkQ,GAAA3N,OAAA,UACAC,KAAA,IAAA,GACAxC,MAAA,eAAA,GAOAQ,GAAAgB,UAAA,gBACAR,GAAA,YAAAuN,GACAvN,GAAA,WAAAsN,GACAtN,GAAA,YAAAyN,UA8DAsF,WAAA,QAAA,SACA,SAAAC,GAEA,GAAAjD,GAAA,GAAAE,MAAA,cAEAD,EAAA,GAAAC,MAAA,cAEAgD,EAAA,GAAAhD,MAAA,cAEAiD,EAAA,GAAAjD,MAAA,cAEAkD,EAAA,GAAAlD,MAAA,cAEAmD,EAAA,GAAAnD,MAAA,cAEAoD,EAAA,GAAApD,MAAA,cAEAqD,EAAA,GAAArD,MAAA,cAEAsD,EAAA,GAAAtD,MAAA,cAGAP,IACAK,KAAAA,EACA4C,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAC,EACA2C,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAkD,EACAN,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAmD,EACAP,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAoD,EACAR,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAqD,EACAT,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAsD,EACAV,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAuD,EACAX,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,SAEA7C,KAAAwD,EACAZ,eAAA,OACAG,SAAA,OACAD,OAAA,OACAD,UAAA,QAGAI,GAAAQ,OAAA9D,IL9eA,IAAA+D,aAEA,WACA,QACA,WACA,QACA,SACA,SACA,WACA,UACA,UACA,WACA,YACA,aACA,QACA,WACA,UACA,QACA,YACA,SACA,OACA,OACA,aACA,QACA,SACA,UACA,cACA,aACA,UACA,UACA,SACA,cACA,UACA,YACA,aACA,YACA,SACA,SACA,SACA,aACA,UACA,WACA,YACA,WACA,cACA,YACA,WACA,aACA,WACA,cACA,YACA,WACA,aACA,YACA,WACA,aACA,YACA,SACA,WACA,SACA,aACA,WACA,UACA,aACA,UACA,WACA,UACA,eACA,WACA,WACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,SACA,UACA,YACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,YACA,UACA,kBACA,iBACA,iBACA,UACA,cACA,SACA,YACA,WACA,SACA,QACA,UACA,YACA,YACA,WACA,YACA,UACA,aACA,aACA,WACA,WACA,UACA,WACA,aACA,OACA,aACA,SACA,UACA,UACA,SACA,YACA,kBACA,aACA,SACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,UACA,YACA,UACA,WACA,YACA,cACA,SACA,OACA,aACA,UACA,WACA,YACA,YACA,eACA,WACA,MACA,YACA,QACA,aACA,WACA,YACA,SACA,UACA,YACA,aACA,SACA,SACA,YACA,OACA,YACA,SACA,aACA,YACA,aACA,SACA,cACA,aACA,UACA,eACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,gBACA,cACA,YACA,UACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,aACA,kBACA,SACA,YACA,SACA,UACA,aACA,aACA,eACA,iBACA,WACA,UACA,cACA,SACA,UACA,YACA,cACA,mBACA,iBACA,cACA,cACA,eACA,cACA,aACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,aACA,aACA,aACA,WACA,WACA,YACA,eACA,SACA,WACA,UACA,UACA,WACA,SACA,WACA,YACA,WACA,WACA,OACA,SACA,YACA,UACA,UACA,QACA,YACA,cACA,WACA,SACA,QACA,WACA,UACA,SACA,YACA,YACA,WACA,UACA,aACA,aACA,WACA,aACA,cACA,cACA,eACA,cACA,YACA,UACA,cACA,WACA,cACA,WACA,YACA,OACA,aACA,UACA,aACA,SACA,aACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,WACA,QACA,eACA,YACA,QACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,SACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,UACA,SACA,eACA,kBACA,iBACA,cACA,kBACA,kBACA,cACA,cACA,YACA,WACA,cACA,cACA,SACA,WACA,WACA,WACA,UACA,UACA,YACA,eACA,eACA,aACA,aACA,aACA,UACA,WACA,SACA,YACA,cACA,WACA,YAEAC,aAAA,gBAEAC,aACA9U,IAAA,EACA+M,MAAA,GACAC,OAAA,GACAC,KAAA,IAEA8H,WAAA,IAAAD,YAAA7H,KAAA6H,YAAA/H,MACAiI,YAAA,IAAAF,YAAA9U,IAAA8U,YAAA9H,OAEAiI,UAAAtU,GAAAwR,SAAA,SAAArQ,GACA,MAAAA,GAAAuF,MACA4F,KACAiI,QAAAvU,GAAAwE,OAAA,QACA6L,WAAArQ,GAAAwE,OAAA,KAGAiC,UAEA+G,EAAAxN,GAAAyB,MAAAmQ,SACArP,OAAA,EAAA6R,aAEA9M,EAAAtH,GAAAyB,MAAAmQ,SACArP,OAAA8R,YAAA,IAGAxC,MAAA7R,GAAAyB,MAAA+S,aAEAC,WAAAzU,GAAA6B,IAAAmL,OACAvL,MAAA+L,GACAL,WAAAkD,YACApD,OAAA,UACAyH,cAAA,GAEAC,WAAA3U,GAAA6B,IAAAmL,OACAvL,MAAA6F,GACAgL,SAAA8B,YACAnH,OAAA,SACAE,WAAAoH,SAEApN,KAAAnH,GAAA6B,IAAAsF,OACAqG,EAAA,SAAArM,GACA,MAAAqM,GAAArM,EAAAuF,OAEAY,EAAA,SAAAnG,GACA,MAAAmG,GAAAnG,EAAAwF,SAEAgH,QAAA,SAAAxM,GACA,MAAAmG,GAAAnG,EAAAwF,SAKAiO,YAAA5U,GAAA8B,OAAA,eAAAC,OAAA,OACAC,KAAA,QAAAoS,WAAAD,YAAA7H,KAAA6H,YAAA/H,OACApK,KAAA,SAAAqS,YAAAF,YAAA9U,IAAA8U,YAAA9H,QACAtK,OAAA,KACAC,KAAA,YAAA,aAAAmS,YAAA7H,KAAA,IAAA6H,YAAA9U,IAAA;AAEAW,GAAA6N,IAAA,wBAAAvH,KAAA,SAAAlG,EAAAqC,GA0QA,QAAAoS,KAeA,IAXAD,YAAA9S,OAAA,iBACAb,aACAC,SAAA,KACA4T,MAAA,KACA9S,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,WAAAtN,UAMA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,WAAAtN,OAAA9H,OAAAD,IAAA,CACA,GAAAkW,GAAA,oBAAAtO,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,GAGAD,QAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,OAAA,EACAiO,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAAqM,GAAA/G,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,OAEA1E,KAAA,KAAA,SAAAb,GACA,MAAAmG,GAAAb,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,SAEA3E,KAAA,IAAA,GAEA4S,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,IAAA,GAeA,IAPA4S,YAAA9S,OAAA,mBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,aAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,aAAAtN,OAAA9H,OAAAD,IAAA,CACA,GAAAkW,GAAA,sBAAAtO,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA6H,GAGAD,QAAAyN,aAAA,aAAAtN,OAAA/H,GAAA8H,OAAA,EACAiO,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAAqM,GAAA/G,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA6H,OAEA1E,KAAA,KAAA,SAAAb,GACA,MAAAmG,GAAAb,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA8H,SAEA3E,KAAA,IAAA,GAEA4S,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPA4S,YAAA9S,OAAA,cACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,QAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,QAAAtN,OAAA9H,OAAAD,IAAA,CAGA,GAAAkW,GAAA,iBAAAtO,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA6H,IACAsO,EAAAvO,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA8H,KAKAF,QAAAyN,aAAA,QAAAtN,OAAA/H,GAAA8H,OAAA,EACAiO,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAAqM,GAAA/G,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA6H,OAEA1E,KAAA,KAAA,SAAAb,GACA,MAAAmG,GAAAb,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA8H,SAEA3E,KAAA,IAAA,GAEA4S,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPA4S,YAAA9S,OAAA,iBACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,WAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,WAAAtN,OAAA9H,OAAAD,IAAA,CAGA,GAAAkW,GAAA,oBAAAtO,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,IACAsO,EAAAvO,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,KAKAqO,IAAA,EACAJ,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAAqM,GAAA/G,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,OAEA1E,KAAA,KAAA,SAAAb,GACA,MAAAmG,GAAAb,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,SAEA3E,KAAA,IAAA,GAEA4S,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,IAAA,GAaA,IAPA4S,YAAA9S,OAAA,eACAb,aACAC,SAAA,KACAc,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,SAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,SAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GAAAkW,GAAA,kBAAAtO,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA6H,IACAsO,EAAAvO,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA8H,KAKAqO,IAAA,EACAJ,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,KAAA,SAAAb,GACA,MAAAqM,GAAA/G,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA6H,OAEA1E,KAAA,KAAA,SAAAb,GACA,MAAAmG,GAAAb,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA8H,SAEA3E,KAAA,IAAA,GAEA4S,YAAA5T,UAAA+T,GACA9T,aACAC,SAAA,KACAc,KAAA,IAAA,IAmFA,QAAAiT,KAIA,GAAAlF,GAAAvC,EAAAqC,OAAA7P,GAAAgE,MAAAvD,MAAA,IAGAyU,EAAAZ,UAAA7N,OAAAyN,aAAA,WAAAtN,OAAAmJ,EAAA,GACAoF,EAAA1O,OAAAyN,aAAA,WAAAtN,OAAAsO,EAAA,GACAE,EAAA3O,OAAAyN,aAAA,WAAAtN,OAAAsO,GACAG,EAAAtF,EAAAoF,EAAAzO,IAAA0O,EAAA1O,IAAAqJ,EAAAqF,EAAAD,CAEAE,GAAA1O,OAAA,GACA2O,EAAAtT,KAAA,YAAA,aAAAwL,EAAA6H,EAAA3O,KAAA,IAAAY,EAAA+N,EAAA1O,OAAA,KACA2O,EAAAxT,OAAA,QAAAa,KAAA4R,QAAAc,EAAA1O,QACA2O,EAAAxT,OAAA,UAAAE,KAAA,IAAA,KAEAsT,EAAAxT,OAAA,UAAAE,KAAA,IAAA,GACAsT,EAAAxT,OAAA,QAAAa,KAAA,IAKA,IAAA4S,GAAAjB,UAAA7N,OAAAyN,aAAA,aAAAtN,OAAAmJ,EAAA,GACAyF,EAAA/O,OAAAyN,aAAA,aAAAtN,OAAA2O,EAAA,GACAE,EAAAhP,OAAAyN,aAAA,aAAAtN,OAAA2O,GACAG,EAAA3F,EAAAyF,EAAA9O,IAAA+O,EAAA/O,IAAAqJ,EAAA0F,EAAAD,CAMAE,GAAA/O,OAAA,GACAgP,EAAA3T,KAAA,YAAA,aAAAwL,EAAAkI,EAAAhP,KAAA,IAAAY,EAAAoO,EAAA/O,OAAA,KACAgP,EAAA7T,OAAA,QAAAa,KAAA4R,QAAAmB,EAAA/O,QACAgP,EAAA7T,OAAA,UAAAE,KAAA,IAAA,KAEA2T,EAAA7T,OAAA,UAAAE,KAAA,IAAA,GACA2T,EAAA7T,OAAA,QAAAa,KAAA,IAKA,IAAAiT,GAAAtB,UAAA7N,OAAAyN,aAAA,QAAAtN,OAAAmJ,EAAA,GACA8F,EAAApP,OAAAyN,aAAA,QAAAtN,OAAAgP,EAAA,GACAE,EAAArP,OAAAyN,aAAA,QAAAtN,OAAAgP,GACAG,EAAAhG,EAAA8F,EAAAnP,IAAAoP,EAAApP,IAAAqJ,EAAA+F,EAAAD,CAEAE,GAAApP,OAAA,GACAqP,EAAAhU,KAAA,YAAA,aAAAwL,EAAAuI,EAAArP,KAAA,IAAAY,EAAAyO,EAAApP,OAAA,KACAqP,EAAAlU,OAAA,QAAAa,KAAA4R,QAAAwB,EAAApP,QACAqP,EAAAlU,OAAA,UAAAE,KAAA,IAAA,KAEAgU,EAAAlU,OAAA,UAAAE,KAAA,IAAA,GACAgU,EAAAlU,OAAA,QAAAa,KAAA,IAKA,IAAAsT,GAAA3B,UAAA7N,OAAAyN,aAAA,WAAAtN,OAAAmJ,EAAA,GACAmG,EAAAzP,OAAAyN,aAAA,WAAAtN,OAAAqP,EAAA,GACAE,EAAA1P,OAAAyN,aAAA,WAAAtN,OAAAqP,GACAG,EAAArG,EAAAmG,EAAAxP,IAAAyP,EAAAzP,IAAAqJ,EAAAoG,EAAAD,CAEAE,GAAAzP,OAAA,GACA0P,EAAArU,KAAA,YAAA,aAAAwL,EAAA4I,EAAA1P,KAAA,IAAAY,EAAA8O,EAAAzP,OAAA,KACA0P,EAAAvU,OAAA,QAAAa,KAAA4R,QAAA6B,EAAAzP,QACA0P,EAAAvU,OAAA,UAAAE,KAAA,IAAA,KAEAqU,EAAAvU,OAAA,UAAAE,KAAA,IAAA,GACAqU,EAAAvU,OAAA,QAAAa,KAAA,IAKA,IAAA2T,GAAAhC,UAAA7N,OAAAyN,aAAA,SAAAtN,OAAAmJ,EAAA,GACAwG,EAAA9P,OAAAyN,aAAA,SAAAtN,OAAA0P,EAAA,GACAE,EAAA/P,OAAAyN,aAAA,SAAAtN,OAAA0P,GACAG,EAAA1G,EAAAwG,EAAA7P,IAAA8P,EAAA9P,IAAAqJ,EAAAyG,EAAAD,CAIAE,GAAA9P,OAAA,GACA+P,EAAA1U,KAAA,YAAA,aAAAwL,EAAAiJ,EAAA/P,KAAA,IAAAY,EAAAmP,EAAA9P,OAAA,KACA+P,EAAA5U,OAAA,QAAAa,KAAA4R,QAAAkC,EAAA9P,QACA+P,EAAA5U,OAAA,UAAAE,KAAA,IAAA,KAEA0U,EAAA5U,OAAA,UAAAE,KAAA,IAAA,GACA0U,EAAA5U,OAAA,QAAAa,KAAA,KAKAoN,EAAA,IACAuF,EAAAxT,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACA2T,EAAA7T,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACAgU,EAAAlU,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACAqU,EAAAvU,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,aACA0U,EAAA5U,OAAA,QAAAE,KAAA,IAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,eAEAsT,EAAAxT,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACA2T,EAAA7T,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACAgU,EAAAlU,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACAqU,EAAAvU,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,aACA0U,EAAA5U,OAAA,QAAAE,KAAA,IAAA,IAAAA,KAAA,cAAA,cAtnBA,GAAA5B,EAAA,KAAAA,EAIAoN,GAAAlL,QAAA,KAAAtC,GAAAyO,IAAAhM,EAAA,SAAAtB,GACA,MAAAA,GAAAuF,QAEAY,EAAAhF,QAAA,EAAA,MAEAsS,YAAA7S,OAAA,KACAC,KAAA,QAAA,eACAA,KAAA,YAAA,eAAAqS,YAAA,KACAhM,KAAAoM,YACA1S,OAAA,QACAC,KAAA,IAAA,KACAA,KAAA,IAAA,IACAA,KAAA,cAAA,UACAW,KAAA,QAEAiS,YAAA7S,OAAA,KACAC,KAAA,QAAA,eACAqG,KAAAsM,YACA5S,OAAA,QAEAvC,MAAA,cAAA,SAEAoV,YAAA5T,UAAA,qBAAAgB,KAAA,KAAA,IAAAA,KAAA,KAAA,EAEA,IAAA2U,IAAA,GACAC,GAAA,EA0EA,KAvEAhC,YAAA7S,OAAA,UACAC,KAAA,QAAA,kBACAA,KAAA,KAAAoS,WAAAwC,GACA5U,KAAA,KAAA,IACAA,KAAA,IAAA,GACA4S,YAAA7S,OAAA,KACAA,OAAA,QACAC,KAAA,QAAA,iBACAA,KAAA,IAAAoS,WAAAuC,GACA3U,KAAA,IAAA,IACAW,KAAA,WAEAiS,YAAA7S,OAAA,UACAC,KAAA,QAAA,kBACAA,KAAA,KAAAoS,WAAAwC,GACA5U,KAAA,KAAA,IACAA,KAAA,IAAA,GACA4S,YAAA7S,OAAA,KACAA,OAAA,QACAC,KAAA,QAAA,iBACAA,KAAA,IAAAoS,WAAAuC,GACA3U,KAAA,IAAA,IACAW,KAAA,WAGAiS,YAAA7S,OAAA,UACAC,KAAA,QAAA,oBACAA,KAAA,KAAAoS,WAAAwC,GACA5U,KAAA,KAAA,IACAA,KAAA,IAAA,GACA4S,YAAA7S,OAAA,KACAA,OAAA,QACAC,KAAA,QAAA,mBACAA,KAAA,IAAAoS,WAAAuC,GACA3U,KAAA,IAAA,IACAW,KAAA,aAGAiS,YAAA7S,OAAA,UACAC,KAAA,QAAA,gBACAA,KAAA,KAAAoS,WAAAwC,GACA5U,KAAA,KAAA,IACAA,KAAA,IAAA,GACA4S,YAAA7S,OAAA,KACAA,OAAA,QACAC,KAAA,QAAA,eACAA,KAAA,IAAAoS,WAAAuC,GACA3U,KAAA,IAAA,IACAW,KAAA,SAGAiS,YAAA7S,OAAA,UACAC,KAAA,QAAA,eACAA,KAAA,KAAAoS,WAAAwC,GACA5U,KAAA,KAAA,IACAA,KAAA,IAAA,GACA4S,YAAA7S,OAAA,KACAA,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAAoS,WAAAuC,GACA3U,KAAA,IAAA,IACAW,KAAA,QAGAiS,YAAA7S,OAAA,QACAC,KAAA,QAAA,gBACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,WAAAtN,UAIA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,WAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GACAgY,IADApQ,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,IACAD,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,MAEAkQ,IAAA,GAKAjC,YAAA7S,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAsF,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,MAEA1E,KAAA,KAAAwL,EAAA/G,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,MACA1E,KAAA,KAAAsF,EAAAb,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,QACA3E,KAAA,IAAA,GAWA,IANA4S,YAAA7S,OAAA,QACAC,KAAA,QAAA,kBACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,aAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,aAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GACAgY,IADApQ,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA6H,IACAD,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA8H,MAEAkQ,IAAA,GAKAjC,YAAA7S,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,qBAAAsF,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA6H,MAEA1E,KAAA,KAAAwL,EAAA/G,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA6H,MACA1E,KAAA,KAAAsF,EAAAb,OAAAyN,aAAA,aAAAtN,OAAA/H,GAAA8H,QACA3E,KAAA,IAAA,GAWA,IANA4S,YAAA7S,OAAA,QACAC,KAAA,QAAA,aACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,QAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,QAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GACAgY,IADApQ,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA6H,IACAD,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA8H,MAEAkQ,IAAA,GAKAjC,YAAA7S,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,gBAAAsF,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA6H,MAEA1E,KAAA,KAAAwL,EAAA/G,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA6H,MACA1E,KAAA,KAAAsF,EAAAb,OAAAyN,aAAA,QAAAtN,OAAA/H,GAAA8H,QACA3E,KAAA,IAAA,GAWA,IANA4S,YAAA7S,OAAA,QACAC,KAAA,QAAA,gBACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,WAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,WAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GACAgY,IADApQ,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,IACAD,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,MAEAkQ,IAAA,GAKAjC,YAAA7S,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,mBAAAsF,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,MAEA1E,KAAA,KAAAwL,EAAA/G,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA6H,MACA1E,KAAA,KAAAsF,EAAAb,OAAAyN,aAAA,WAAAtN,OAAA/H,GAAA8H,QACA3E,KAAA,IAAA,GAWA,IANA4S,YAAA7S,OAAA,QACAC,KAAA,QAAA,cACAA,KAAA,IAAA,SAAAb,GACA,MAAAgG,MAAAV,OAAAyN,aAAA,SAAAtN,UAGA/H,EAAA,EAAAA,EAAA4H,OAAAyN,aAAA,SAAAtN,OAAA9H,OAAAD,IAAA,CAEA,GACAgY,IADApQ,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA6H,IACAD,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA8H,MAEAkQ,IAAA,GAKAjC,YAAA7S,OAAA,UACAC,KAAA,QAAA,SAAAb,GACA,MAAA,iBAAAsF,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA6H,MAEA1E,KAAA,KAAAwL,EAAA/G,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA6H,MACA1E,KAAA,KAAAsF,EAAAb,OAAAyN,aAAA,SAAAtN,OAAA/H,GAAA8H,QACA3E,KAAA,IAAA,GAMAhD,EAAA,aAAAW,SAAA,UACAK,GAAAgB,UAAA,aAAAR,GAAA,QAAA,WACA0T,aAAAlU,GAAA8B,OAAArB,MAAAuB,KAAA,YACA6S,IACA7V,EAAA,SAAA0B,IAAA,MAIA1B,EAAA,SAAA8X,cACAC,OAAA,SAAAC,EAAAnM,GACA,GAAAoM,GAAAjY,EAAAkF,IAAA+P,WAAA,SAAAiD,GACA,GAAA,IAAAA,EAAA/R,cAAAgS,QAAAH,EAAAI,KAAAjS,eACA,MAAA+R,IAGArM,GAAAoM,IAUAnV,OAAA,SAAA4H,EAAA2N,GACAnD,aAAAmD,EAAAC,KAAA3Q,MACA3H,EAAA,aAAAY,YAAA,UACAiV,MAiMA,IAAAS,GAAAV,YAAA7S,OAAA,KACAC,KAAA,QAAA,iBACAxC,MAAA,UAAA,OACA8V,GAAAvT,OAAA,UACAC,KAAA,IAAA,GACAsT,EAAAvT,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAA2T,GAAAf,YAAA7S,OAAA,KACAC,KAAA,QAAA,mBACAxC,MAAA,UAAA,OACAmW,GAAA5T,OAAA,UACAC,KAAA,IAAA,GACA2T,EAAA5T,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAAgU,GAAApB,YAAA7S,OAAA,KACAC,KAAA,QAAA,cACAxC,MAAA,UAAA,OACAwW,GAAAjU,OAAA,UACAC,KAAA,IAAA,GACAgU,EAAAjU,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAAqU,GAAAzB,YAAA7S,OAAA,KACAC,KAAA,QAAA,iBACAxC,MAAA,UAAA,OACA6W,GAAAtU,OAAA,UACAC,KAAA,IAAA,GACAqU,EAAAtU,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,QAGA,IAAA0U,GAAA9B,YAAA7S,OAAA,KACAC,KAAA,QAAA,eACAxC,MAAA,UAAA,OACAkX,GAAA3U,OAAA,UACAC,KAAA,IAAA,GACA0U,EAAA3U,OAAA,QACAC,KAAA,IAAA,GACAA,KAAA,KAAA,SAGA4S,YAAA7S,OAAA,QACAC,KAAA,QAAA,WACAA,KAAA,QAAAoS,YACApS,KAAA,SAAAqS,aACA7T,GAAA,YAAA,WACAmV,EAAAnW,MAAA,UAAA,MACA8V,EAAA9V,MAAA,UAAA,MACAwW,EAAAxW,MAAA,UAAA,MACA6W,EAAA7W,MAAA,UAAA,MACAkX,EAAAlX,MAAA,UAAA,QAGAgB,GAAA,WAAA,WACAmV,EAAAnW,MAAA,UAAA,QACA8V,EAAA9V,MAAA,UAAA,QACAwW,EAAAxW,MAAA,UAAA,QACA6W,EAAA7W,MAAA,UAAA,QACAkX,EAAAlX,MAAA,UAAA,UAGAgB,GAAA,YAAAyU,KMj7BAjW,EAAAP,UAAA+K,MAAA,WA6HA,QAAA+N,oBAAAjR,EAAAqG,GACA3N,EAAA,WAAAwY,QACAxY,EAAA,WAAA8H,KAAA,WACA2Q,oBAAAnR,EAAAqG,GACA3N,EAAA,oBAAA6B,KAAA,0HAAAyF,EAAAqG,GAAA+K,IAAA,qCAAApR,EAAAqG,GAAAgL,GAAA,yBAOA,QAAAF,qBAAAG,EAAA/Y,GACA,GAAAgZ,MACAC,EAAAlH,KAAAmH,MAAAH,EAAA/Y,GAAA8Y,IACAK,EAAApH,KAAAmH,MAAAH,EAAA/Y,GAAA6Y,IAEAO,YAAAC,oBAAA,UAAAF,EAAAF,EAAAF,EAAAC,EAAAhZ,GACAsZ,mBAAA,UAAAN,EAAA,GAGA,QAAAK,qBAAAE,EAAAJ,EAAAF,EAAAF,EAAAC,EAAAhZ,GACA,IAAAwZ,EAAA,EAAAA,EAAAP,EAAAO,IACAR,EAAA1V,KAAA,gDAAAyV,EAAA/Y,GAAA8Y,GAAA,WAEA,KAAAU,EAAA,EAAAA,EAAAL,EAAAK,IACArZ,EAAAoZ,GAAArW,OAAA,gDAAA6V,EAAA/Y,GAAA6Y,IAAA,WAEA,OAAAG,GAIA,QAAAM,oBAAAC,EAAAP,EAAAhZ,GACAA,EAAAoZ,WAAAnZ,SACAE,EAAAoZ,GAAArW,OAAA8V,EAAAhZ,IACAA,IACAsZ,mBAAAC,EAAAP,EAAAhZ,IAoHA,QAAAyZ,aACA,MAAA7X,MAAAkL,WAGA,QAAA4M,UAAApX,GACA,MAAAA,GAAAwF,MAIA,QAAA6R,QAAA/V,GACA,GAAAgW,GAAA,CAIA,OAHAhW,GAAAsD,QAAA,SAAAuR,GACAmB,GAAAnB,EAAA3Q,QAEA8R,EAGA,QAAAC,UAAAvX,GAGA,QAAAwX,GAAAzQ,GACA,MAAA0Q,KAAA/Z,EAAAqJ,IAGA,QAAA2Q,GAAA3Q,GAEA,MADA/G,GAAA2X,SAAAja,EAAAqJ,GACA0Q,IAAAzX,GARA,GAAAtC,EAWA,OAAA,mBAAA4B,MAAAsY,UACAla,EAAAmB,GAAAgZ,YAAA7X,EAAA8X,WAAA,GAAA9X,EAAA2X,UACArY,KAAAsY,SAAA5X,EACA0X,IAEAha,EAAAmB,GAAAgZ,YAAAvY,KAAAsY,SAAA5X,GACAV,KAAAsY,SAAAla,EAAA,GACA8Z,GAGA,QAAAO,gBAAA/X,GACA,MAAA,cAAAyX,IAAAO,SAAAhY,GAAA,IAGA,QAAAiY,MAAAjY,EAAAtC,GACA,MAAAgT,OAAAhT,GAGA,QAAAwa,oBAAAC,GACA,GAAAC,GAAA,IAAAC,WACAF,GAAAG,UAAAH,EAAAR,SAAAQ,EAAAL,YAAA,EAAAK,EAAAL,UACA,IAAAzL,GAAAoD,KAAA8I,IAAAJ,EAAAG,UAAAF,EACAjS,GAAAsJ,KAAA+I,IAAAL,EAAAG,UAAAF,CACA,OAAA,aAAA/L,EAAA,IAAAlG,EAAA,IAGA,QAAAsS,WAAAnX,MAUA,QAAAoX,YAAA1Y,GACA,OAAAA,EAAAwF,MAAAmT,IAAA,KAAAC,QAAA,GAAA,IAGA,QAAAC,WAAA7Y,GACA,MAAAA,GAAAsB,KAAAsQ,KAAA,cAAA5R,EAAAsB,KAAAkE,MAGA,QAAAsT,WAAA9Y,GACA,GAAA+Y,GAAA,KAAA/Y,EAAAwF,MAAAmT,KACAK,EAAAvJ,KAAAwJ,IAAAZ,YAAA,GAAAU,EAAA,GACA,OAAAC,GAAAvJ,KAAAwJ,GAAAZ,YAAA,IAGA,QAAAa,WAAAlZ,EAAAtC,GAIA,QAAAyb,SAAAnZ,EAAAtC,GAEAoE,QAAAC,IAAA/B,EAAAsB,KAAA8X,QACAvb,EAAA,mBAAA6B,KAAAM,EAAAsB,KAAA+X,aACAxb,EAAA,UAAA6B,KAAAM,EAAAsB,KAAAkE,OACA,iBAAAxF,EAAAsB,KAAA8X,OACAvb,EAAA,oBAAAgD,KAAA,MAAA,GAEAhD,EAAA,oBAAAgD,KAAA,MAAA,GAEA4V,eAAAzR,KAAAhF,EAAAsB,KAAA8X,QACAhD,mBAAAK,eAAAjL,MAdA8N,cAAA5b,EACAyb,QAAAnZ,EAAAtC,EAiBA,IAAA6T,OAAAgI,eAAA1Z,UAAA,WACA6R,OAAA,SAAAyG,EAAAqB,GACA,MAAA9b,KAAA8b,GAEAjI,OAAA1Q,KAAA,cACA0Q,MAAAzR,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAC,UAAA,kBAAAC,YAAA,GAAAlc,EAAA,MAKA6b,eAAA1Z,UAAA,QACA6R,OAAA,SAAAyG,EAAAqB,GACA,MAAA9b,KAAA8b,IAEA1Z,aACAC,SAAA0Z,gBAAA,GACA5Y,KAAA,YAAAqX,oBAEAqB,eAAA5Y,OAAA,gBACAA,OAAA,WACAb,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAG,OAAA5B,KAAA,KAAAva,KAGA6b,eAAA5Y,OAAA,gBACAA,OAAA,WACAb,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAzB,KAAAA,KAAA,KAAAva,KAGA6b,eAAA5Y,OAAA,gBACAA,OAAA,QACAb,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAG,OAAA5B,KAAA,KAAAva,GACAoc,GAAArK,KAAA8I,IAAAvY,EAAAsY,WAAA,GAAAyB,aACAtL,IAAAgB,KAAA+I,IAAAxY,EAAAsY,WAAA,GAAAyB,aACAvJ,GAAAf,KAAA8I,IAAAvY,EAAAsY,UAAAyB,YACAC,IAAAvK,KAAA+I,IAAAxY,EAAAsY,UAAAyB,cAGAR,eAAA5Y,OAAA,gBACAA,OAAA,iBACAa,KAAAxB,EAAAsB,KAAAsQ,MAEAjR,OAAAwW,WACAxW,OAAA,gBACAa,KAAAxB,EAAAsB,KAAAkE,OAGA,QAAAyU,YAAAja,EAAAtC,GAwBA,GAvBA6b,eAAA5Y,OAAA,gBACAd,WAAA,UAAA,YACAC,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,IAGAH,eAAA5Y,OAAA,gBACAA,OAAA,QACAb,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,IAGAH,eAAA5Y,OAAA,gBACAA,OAAA,iBACAa,KAAA,IACAb,OAAAwW,WACAxW,OAAA,gBACAa,KAAA,IAEA,mBAAA9D,GAAA,CAGA,GAAA6T,GAAAgI,eAAA1Z,UAAA,WACA6R,OAAA,SAAAyG,EAAAqB,GACA,MAAA9b,KAAA8b,GAGAjI,GAAA1Q,KAAA,cACA0Q,EAAAzR,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAC,UAAA,iBAAAC,YAAA,GAAAlc,EAAA,MAIA6b,eAAA1Z,UAAA,QACA6R,OAAA,SAAAyG,EAAAqB,GACA,MAAA9b,KAAA8b,IAEA1Z,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA8Y,UAAA,oBAxJA,GAAAhB,KAAAtB,OAAA/V,KACAA,MAAA4Y,IAAA5Y,KACA,IAAA6Y,MAAAZ,eAAA5Y,OAAA,QACAd,UAAA,QACAyB,KAAAA,MAEA8Y,QAAAD,KAAAta,UAAA,QAAAlC,OACA0c,UAAAD,QAAAX,gBAAAA,gBAAA,CAqJAQ,cAGAE,KAAA5Y,QACAX,OAAA,KACAC,KAAA,QAAA,OAEAxB,GAAA,QAAA,SAAAW,EAAAtC,GAGA4b,eAAA,GACAW,WAAA,KAAAX,eAEAJ,UAAAlZ,EAAAtC,KAIAkD,OAAA,QACAC,MACAoX,KAAAA,OAEApX,KAAA,IAAA4W,KAAApZ,MAAA,SAAA,SACAA,MAAA,eAAA,GACAsC,OAAAwW,WACAzF,OAAAoH,WACAlY,OAAA,QACAC,MACAyZ,cAAA,QACAC,YAAA,OACAtC,KAAA,OACAuC,cAAA,WAIAL,KAAAxZ,OAAA,QACAb,aACA6T,MAAA,SAAA3T,EAAAtC,GACA,MAAA0c,SAAA,EAAAC,UAAA3c,IAEAqC,SAAAsa,WACAI,UAAA,IAAAlD,UAEA4C,KAAAxZ,OAAA,QACAa,KAAAkX,YACA5Y,aACAC,SAAA0Z,iBACA5Y,MACA6Z,MAAA,gBACAf,UAAA5B,iBAGAoC,KAAAQ,OACAtb,GAAA,aAAA,MACAA,GAAA,WAAA,MACAub,QAIA,IAAAC,SAAAtB,eACA5Y,OAAA,WACAd,UAAA,WACAyB,KAAAA,KAEAuZ,SAAAtZ,QACAX,OAAA,KACAvB,GAAA,QAAA,SAAAW,EAAAtC,GAGA4b,eAAA,GACAW,WAAA,KAAAX,eAEAJ,UAAAlZ,EAAAtC,KAEAmD,KAAA,QAAA,UACAD,OAAA,QACAC,MACAJ,MAAAqa,WACA9c,OAAA4b,YACA3B,KAAAA,OAEAtX,OAAAwW,WACAvW,OAAA,QACAC,MACA0Z,YAAA,OACAD,cAAA,QACArC,KAAA,OACA5L,EAAAyO,WAAA,EACA3U,EAAAyT,YAAA,EAAA,IAEAjZ,OAAAwW,WACAtW,MACA6Y,QAAA,EACAC,UAAA,SAAA3Z,EAAAtC,GACA,MAAA,kBAAAkc,YAAA,GAAAlc,EAAA,OAGAoC,aACAC,SAAA0Z,iBACA5Y,MACA6Y,QAAA,EACAC,UAAA,SAAA3Z,EAAAtC,GACA,MAAA,iBAAAkc,YAAA,GAAAlc,EAAA,OAIAmd,QAAAF,OACAtb,GAAA,aAAA,MACAA,GAAA,WAAA,MACAwB,KAAA,aAAA,GACAf,aACAC,SAAA0Z,gBAAA,GACA5Y,MACA6Y,QAAA,EACAC,UAAA,SAAA3Z,EAAAtC,GACA,MAAA,mBAAAkc,YAAA,GAAAlc,EAAA,OAGAkd,SAIAC,QAAAla,OAAA,QAAAjB,KAAAmZ,WAgBA,QAAAkC,aAAAzZ,GACAmX,UAAAnX,GAhnBA,GAAA0Z,gBACAzE,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGAyE,SACA1E,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGA0E,WACA3E,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGA2E,OACA5E,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,EACAC,GAAA,KAGA4E,YACA7E,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAGA6E,gBACA9E,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAEAD,IAAA,GACAC,GAAA,KAMAC,eAAAuE,aACAxP,KAAA,CACA4K,oBAAAK,eAAAjL,MACA3N,EAAA,gBAAAW,SAAA,UAQAX,EAAA,aAAAwB,GAAA,QAAA,WACAxB,EAAA,aAAAY,YAAA,UACAZ,EAAAyB,MAAAd,SAAA,UACAgN,KAAA7L,SAAA9B,EAAAyB,MAAAC,OACA6W,mBAAAK,eAAAjL,KACA,IAAA8P,EACA,QAAA9P,MACA,IAAA,GACA8P,EAAA,yBACA,MACA,KAAA,GACAA,EAAA,uBACA,MACA,KAAA,GACAA,EAAA,uBACA,MACA,KAAA,GACAA,EAAA,uBAGAzd,EAAA,iBAAA6B,KAAA4b,EAAApX,eACArG,EAAA,iBAAA6B,KAAA4b,IAgDA,IAAAtQ,SACA9M,IAAA,GACAgN,OAAA,GACAC,KAAA,GACAF,MAAA,GAEAxK,MAAA,IAAAuK,OAAAG,KAAAH,OAAAC,MACAjN,OAAA,IAAAgN,OAAA9M,IAAA8M,OAAAE,OAEAqQ,YAAA,GAAA9a,MACAqa,WAAA,GAAAS,YACA3B,YAAA,GAAAkB,WAEArB,gBAAA,IACApB,YAAA5X,MAAA8a,YAAAvd,QAAAyC,MAAA8a,aAAA,EAAAvd,OAAA,EACA+b,YAAA,GAAA1B,YAEAZ,IAAA5Y,GAAA6B,IAAA+W,MACAsC,YAAAA,aACA1B,YAAAA,aAEA6B,IAAArb,GAAA2c,OACAtB,MACAuB,KAAA,MACAjW,MAAA4R,UACAU,WAAA,IAAArI,KAAAwJ,IACAtB,SAAA,IAAAlI,KAAAwJ,IAEAK,cACA5I,MAAA7R,GAAAyB,MAAAgQ,UACAlP,OAAA,UAAA,UAAA,UAAA,UAAA,UAAA,YAEAmY,eAAA1a,GAAA8B,OAAA,aACAE,MACAJ,MAAAA,MAAAuK,OAAAG,KAAAH,OAAAC,MACAjN,OAAAA,OAAAgN,OAAA9M,IAAA8M,OAAAE,SAEAtK,OAAA,KACAC,MACA6Z,MAAA,SACAf,UAAA,cAAAlZ,OAAA8a,YAAAvQ,OAAAC,QAAA,KAAAD,OAAA9M,IAAA,MAEAyC,OAAAwW,WACAvW,OAAA,KACAC,MACA6Z,MAAA,MACAf,UAAA,cAAAtB,YAAArN,OAAAG,MAAA,MAAAnN,OAAA,EAAAgN,OAAA9M,KAAA,MAEAyC,OAAAwW,WACAvW,OAAA,KACAC,MACA6Z,MAAA,cACAf,UAAA,cAAAtB,YAAArN,OAAAG,MAAA,MAAAkN,YAAArN,OAAA9M,KAAA,MAEAyC,OAAAwW,UAEAoC,gBAAA5Y,OAAA,gBACAC,OAAA,UACAC,MACA6Z,MAAA,SACAhB,QAAA,EACAG,OAAA,sBACA5B,KAAA,gBACAhX,EAAA,GAAA8Y,cAEApZ,OAAAwW,WACAvW,OAAA,UACAC,MACA6Z,MAAA,SACAhB,QAAA,EACAzB,KAAA,sBACAhX,EAAA,GAAA8Y,cAEApZ,OAAAwW,WACAvW,OAAA,QACAC,MACA6Y,QAAA,EACAG,OAAA,sBACAC,GAAA,EACArL,GAAA,EACA+B,GAAA,EACAwJ,GAAA,IAEArZ,OAAAwW,WACAvW,OAAA,QACAC,MACA6Z,MAAA,eACAH,YAAA,OACApU,GAAA,EAAA4T,YAAA,IACAO,cAAA,QACAE,cAAA,SACAkB,qBAAA,SACAzD,KAAA,SAGAtX,OAAAwW,WACAvW,OAAA,QACAC,MACA6Z,MAAA,cACAH,YAAA,OACApU,EAAA,IAAA4T,YACAO,cAAA,QACAE,cAAA,SACAkB,qBAAA,SACAzD,KAAA,QAoVA,IAAA0D,YACA/J,KAAA,SAAApM,MAAA,IAAA4T,OAAA,SAAAC,YAAA,WACAzH,KAAA,WAAApM,MAAA,IAAA4T,OAAA,WAAAC,YAAA,aACAzH,KAAA,oBAAApM,MAAA,IAAA4T,OAAA,OAAAC,YAAA,6BACAzH,KAAA,sBAAApM,MAAA,IAAA4T,OAAA,eAAAC,YAAA,wBACAzH,KAAA,YAAApM,MAAA,GAAA4T,OAAA,YAAAC,YAAA,cACAzH,KAAA,gBAAApM,MAAA,GAAA4T,OAAA,gBAAAC,YAAA,iBAGA0B,aAAAY,YC9mBA9d,EAAAP,UAAA+K,MAAA,WA6DA,QAAAuT,iBAAAxC,OAAA5T,OACA3H,EAAA,0BAAAY,YAAA,UACAZ,EAAA,IAAAub,QAAA5a,SAAA,UACAX,EAAA,WAAAwY,QACAwF,iBAAA7W,KAAAoU,SACAvb,EAAA,iBAAA6B,KAAAoc,WAAAtW,QAIA,QAAAqW,kBAAAE,GAEA,GAAAjF,KACA,KAAApZ,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACA,GAAAse,GAAAvM,KAAAmH,MAAAmF,EAAAre,GAAA,GAEAue,mBAAAC,iBAAA,UAAAF,EAAAD,EAAAjF,GAEAqF,gBAAA,UAAAF,kBAAA,GAGA,QAAAE,iBAAAlF,EAAAH,EAAApZ,GACAA,EAAAoZ,EAAAnZ,SACAE,EAAAoZ,GAAArW,OAAAkW,EAAApZ,IACAA,IAGAye,gBAAAlF,EAAAH,EAAApZ,IAMA,QAAAwe,kBAAAjF,EAAAmF,EAAAL,EAAAjF,GACA,IAAAI,EAAA,EAAAA,EAAAkF,EAAAlF,IAEAJ,EAAA9V,KAAA,gCAAAtD,EAAA,eAAAqe,EAAAre,GAAA,GAAA,WAGA,OAAAoZ,GAjGA,GAAAkE,gBACA,EAAA,IACA,KAAA,KACA,MAAA,KACA,MAAA,IACA,KAAA,KACA,EAAA,IAEAC,SACA,EAAA,IACA,KAAA,KACA,MAAA,KACA,MAAA,KACA,KAAA,KACA,EAAA,IAGAoB,QACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IAMAP,YACA,0IAAAd,aAAA,GAAA,GAAA,kCAAAA,aAAA,GAAA,GAAA,0DAAAA,aAAA,GAAA,GAAA,kCAAAA,aAAA,GAAA,GAAA,sBACA,0IAAAC,OAAA,GAAA,GAAA,kCAAAA,OAAA,GAAA,GAAA,0DAAAA,OAAA,GAAA,GAAA,kCAAAA,OAAA,GAAA,GAAA,sBACA,8KAAAoB,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,6DAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,qCAAAA,MAAA,GAAA,GAAA,uBAIAN,YAAAf,YAIAa,kBAAAb,cACAnd,EAAA,iBAAA6B,KAAAoc,WAAA,IACAje,EAAA,iBAAAW,SAAA,UAGAX,EAAA,mBAAA4F,MAAA,WACA,GAAA6Y,SAAAze,EAAAyB,MAAAgC,KAAA,UACAib,OAAAvX,KAAAnH,EAAAyB,MAAAC,MACAqc,iBAAAU,QAAAC,UAIA1e,EAAA,eAAA4F,MAAA,WACA,GAAA6Y,SAAAze,EAAAyB,MAAAuB,KAAA,MACA0b,OAAAvX,KAAAnH,EAAAyB,MAAAC,MACAqc,iBAAAU,QAAAC,YCzDA,WAoFA,QAAAC,GAAAlb,EAAAmb,GAEA,MAAAnb,GAAAma,KAAA,SAAAzU,EAAAkQ,GACA,MAAAA,GAAAuF,GAAAzV,EAAAyV,KAOA,QAAAC,GAAApb,EAAAmb,GAEA,GAAAnP,GAAAzO,GAAAyO,IAAAhM,EAAA,SAAAtB,GACA,OAAAA,EAAAyc,IAGAhR,QAAA5M,GAAAyB,MAAAmQ,SACAtP,QAAA,EAAAmM,IACAlM,OAAA,EAAAX,IAEAiL,OAAA7M,GAAAyB,MAAAgQ,UACAnP,OAAAtC,GAAAuC,MAAAE,EAAA3D,SACAgf,YAAA,EAAA3e,GAAA,GAKA,IAAA4e,GAAAC,EAAAhd,UAAA,YACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA8c,aAIAC,EAAAle,GAAAyB,MAAAgQ,UACAlP,OAAA,UAAA,YACA4b,EAAAne,GAAAyB,MAAAgQ,UACAlP,OAAA,OAAA,WAEA6b,EAAAJ,EAAAhd,UAAA,oBACAyB,KAAA4b,QAAAjW,SACA1F,QAAAX,OAAA,KACAC,KAAA,QAAA,mBACAA,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,gBAAAM,EAAA,EAAAgN,EAAA,GAAAtN,GAAA,KAGAuf,GAAArc,OAAA,QACAC,KAAA,IAAAJ,EAAA,IACAI,KAAA,QAAA,IACAA,KAAA,SAAA,IACAxC,MAAA,OAAA0e,GAGAE,EAAArc,OAAA,QACAC,KAAA,IAAAJ,EAAA,GACAI,KAAA,IAAA,GACAA,KAAA,KAAA,SACAxC,MAAA,cAAA,SACAmD,KAAAwb,GAOAJ,EAAArb,QACAX,OAAA,QACAC,KAAA,QAAA,OAIA+b,EAAAjC,OACA7a,aACAC,SAAA,KACAod,KAAA,OACAtc,KAAA,QAAA,GACA+Z,SAIAgC,EACA9c,aACAC,SAAA,KACAod,KAAA,QACAtc,KAAA,QAAA,SAAAb,GACA,MAAAyL,SAAAzL,EAAAyc,MAEA5b,KAAA,SAAA6K,OAAA0R,aACAvc,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,cAAA,EAAAsN,EAAAU,OAAAhO,IAAA,MAEAmD,KAAA,QAAA,SAAAb,EAAAtC,GACA,MAAA,SAAAsC,EAAAqd,QAAA,aAAArd,EAAAuF,IACA,sBACA,WAAAvF,EAAAqd,QAAA,aAAArd,EAAAuF,IACA,sBAEA,WAAAvF,EAAAqd,QAAA,aAAArd,EAAAuF,IACA,sBAEA,SAAAvF,EAAAqd,QAAA,aAAArd,EAAAuF,IACA,sBAEA,WAAAvF,EAAAqd,OACA,eAEA,SAAArd,EAAAqd,OACA,eADA,QAmBA,IAAAC,GAAAT,EAAAhd,UAAA,eACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA8c,aAGAS,EAAAV,EAAAhd,UAAA,gBACAyB,KAAAA,EAAA,SAAAtB,GACA,MAAAA,GAAA8c,YAKAQ,GAAA/b,QACAX,OAAA,QACAC,KAAA,QAAA,UACAyc,EAAA3C,OACAC,SAEA2C,EAAAhc,QACAX,OAAA,QACAC,KAAA,QAAA,WACA0c,EAAA5C,OACAC,SAEA4C,aAAA3e,GAAAwE,OAAA,OACAoa,iBAAA5e,GAAAwE,OAAA,OACAqa,WAAA7e,GAAAwE,OAAA,OAEAia,EAAAxd,aACAC,SAAA,KACAc,KAAA,YAAA,SAAAb,EAAAtC,GAGA,MAFAoE,SAAAC,IAAA0J,QAAAzL,EAAAyc,IAAA,IACA3a,QAAAC,IAAA/B,EAAAyc,IACA,cAAAhR,QAAAzL,EAAAyc,IAAAzR,GAAA,KAAAU,OAAAhO,GAAA,GAAA,MAEA8D,KAAA,SAAAxB,GAEA,MAAA,sBAAAyc,EACAgB,iBAAAzd,EAAAyc,IAAA,IAEA,sBAAAA,EACAe,aAAAxd,EAAAyc,IAEAiB,WAAA1d,EAAAyc,MAGA5b,KAAA,KAAA,SACAA,KAAA,KAAA,OACAA,KAAA,cAAA,SAEA0c,EAAAzd,aACAC,SAAA,KACAc,KAAA,YAAA,SAAAb,EAAAtC,GAEA,MAAA,gBAAAgO,OAAAhO,GAAA,GAAA,MAEA8D,KAAA,SAAAxB,GACA,MAAAA,GAAAuF,MAEA1E,KAAA,KAAA,SACAA,KAAA,KAAA,OACAA,KAAA,cAAA,SA5QA,GAAAJ,GAAA,IACAzC,EAAA,IACAgN,EAAA,GAOA6R,EAAAhe,GAAA8B,OAAA,kBAAAC,OAAA,OACAC,KAAA,QAAAJ,EAAA,KACAI,KAAA,SAAA7C,EAAA,IACA6e,GAAAjc,OAAA,QACAC,KAAA,QAAA,QACAA,KAAA,SAAA,QACAA,KAAA,OAAA,QAIAhC,GAAA6N,IAAA,uBAAA,SAAAzN,EAAAqC,GAEA,GAAAqc,GAAA,qBAEA1Q,EAAAuP,EAAAlb,EAAAqc,EAIAjB,GAAAzP,EAAA0Q,GAEA9e,GAAA8B,OAAA,QAAA4C,QAAA,YAAA,GACA1F,EAAA,QAAAW,SAAA,UAEAK,GAAA8B,OAAA,QACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAigB,EAAA,qBACA1Q,EAAAuP,EAAAlb,EAAAqc,GACAjB,EAAAzP,EAAA0Q,EACA,IAAAC,GAAA/e,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAA0D,QAAA,YAAA,GACA1F,EAAA,uBAAAY,YAAA,UACAmf,EAAAra,QAAA,YAAA,GACA1F,EAAAyB,MAAAd,SAAA,YAEAK,GAAA8B,OAAA,OACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAigB,EAAA,YACA1Q,EAAAuP,EAAAlb,EAAAqc,GACAjB,EAAAzP,EAAA0Q,EACA,IAAAC,GAAA/e,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAA0D,QAAA,YAAA,GACA1F,EAAA,uBAAAY,YAAA,UACAmf,EAAAra,QAAA,YAAA,GACA1F,EAAAyB,MAAAd,SAAA,YAEAK,GAAA8B,OAAA,QACAtB,GAAA,QAAA,SAAAW,EAAAtC,GACAigB,EAAA,qBACA1Q,EAAAuP,EAAAlb,EAAAqc,GACAjB,EAAAzP,EAAA0Q,EACA,IAAAC,GAAA/e,GAAA8B,OAAArB,KACAT,IAAAgB,UAAA,uBAAA0D,QAAA,YAAA,GACA1F,EAAA,uBAAAY,YAAA,UACAmf,EAAAra,QAAA,YAAA,GACA1F,EAAAyB,MAAAd,SAAA,iBPjEAyO,UACA4Q,OAAA,MAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,qBAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,qBAAAC,KAAA,KAAAC,KAAA,OACAF,OAAA,WAAAC,KAAA,KAAAC,KAAA,MAGA,IAAArN,OAAA7R,GAAAyB,MAAAgQ,UACAlP,OAAA,UAAA,YACA4J,QAAA9M,IAAAyB,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,SAAA,IAAA,GAAA4M,MAAAtL,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,SAAA,IAAA,GAAA6M,OAAAvL,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,SAAA,IAAA,EAAA8M,KAAAxL,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,SAAA,IAAA,IACAoC,MAAAd,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,SAAA,IAAA2M,OAAAG,KAAAH,OAAAC,MACAjN,OAAA2B,SAAAd,GAAA8B,OAAA,yBAAAtC,MAAA,UAAA,IAAA2M,OAAA9M,IAAA8M,OAAAE,OAEA0D,GAAA/P,GAAAyB,MAAAgQ,UACA0N,iBAAA,EAAAvd,OAAA,IAEAqZ,GAAAjb,GAAAyB,MAAAgQ,UAEAnK,EAAAtH,GAAAyB,MAAAmQ,SACArP,OAAApD,OAAA,IAQAigB,WAAApf,GAAA6B,IAAAmL,OACAvL,MAAAsO,IACA9C,OAAA,UAEAoS,WAAArf,GAAA6B,IAAAmL,OACAvL,MAAA6F,GACA2F,OAAA,QACAE,WAAAnN,GAAAwE,OAAA,QAEA8a,mBAAAtf,GAAA8B,OAAA,yBAAAC,OAAA,OAAAC,KAAA,QAAA,mBAGAud,WAAAvf,GAAA8B,OAAA,yBAAAC,OAAA,OACAC,KAAA,QAAAJ,MAAAuK,OAAAG,KAAAH,OAAAC,OACApK,KAAA,SAAA7C,OAAAgN,OAAA9M,IAAA8M,OAAAE,QACAtK,OAAA,KACAC,KAAA,YAAA,aAAAmK,OAAAG,KAAA,IAAAH,OAAA9M,IAAA,KAMAgf,QAAAre,GAAAuG,KAAA6H,QAAA,IAAAyE,OAAA,SAAArM,GACA,MAAA,WAAAA,GAGA4H,SAAArI,QAAA,SAAA5E,GACAA,EAAAyF,OAAAyX,QAAAna,IAAA,SAAA6O,GACA,OAAAA,KAAAA,EAAApM,OAAAxF,EAAA4R,QAIAhD,GAAAzN,OAAA8L,QAAAlK,IAAA,SAAA/C,GACA,MAAAA,GAAA6d,UAEA/D,GAAA3Y,OAAA+b,SAAAc,iBAAA,EAAApP,GAAAwO,cACAjX,EAAAhF,QAAA,EAAAtC,GAAAyO,IAAAL,QAAA,SAAAjN,GACA,MAAAnB,IAAAyO,IAAAtN,EAAAyF,OAAA,SAAAzF,GACA,MAAAA,GAAAwF,YAIA4Y,WAAAxd,OAAA,KACAC,KAAA,QAAA,eACAA,KAAA,YAAA,gBAAA7C,OAAA,KACAkJ,KAAA+W,YACApe,UAAA,cACAqH,KAAAxB,KAAAkJ,GAAAwO,aAEAgB,WAAAxd,OAAA,KACAC,KAAA,QAAA,eACAqG,KAAAgX,YACAtd,OAAA,QACAC,KAAA,YAAA,eACAA,KAAA,KAAA,IACAA,KAAA,KAAA,SACAxC,MAAA,cAAA,OACAmD,KAAA,iCAEA,IAAA6c,KAAAD,WAAAve,UAAA,QACAyB,KAAA2L,SACA1L,QAAAX,OAAA,KACAC,KAAA,QAAA,QACAA,KAAA,YAAA,SAAAb,GACA,MAAA,cAAA4O,GAAA5O,EAAA6d,QAAA,IAAA,OAIAQ,KAAAxe,UAAA,QACAyB,KAAA,SAAAtB,GACA,MAAAA,GAAAyF,SAEAlE,QAAAX,OAAA,QACAC,KAAA,QAAAiZ,GAAAsD,aACAvc,KAAA,IAAA,SAAAb,GACA,MAAA8Z,IAAA9Z,EAAA4R,MAAA,IAEA/Q,KAAA,IAAA,SAAAb,GACA,MAAAmG,GAAAnG,EAAAwF,SAEA3E,KAAA,QAAA,SAAAb,GACA,MAAAA,GAAA4R,OAEA/Q,KAAA,SAAA,SAAAb,GACA,MAAAhC,QAAAmI,EAAAnG,EAAAwF,SAEAnH,MAAA,OAAA,SAAA2B,GACA,MAAA0Q,OAAA1Q,EAAA4R,QAEAvT,MAAA,OAAA,SAAA2B,GACA,MAAA0Q,OAAA1Q,EAAA4R,QAQAyM,IACAhf,GAAA,YAAA,SAAAW,GACAme,mBAAA9f,MAAA,OAAAQ,GAAA0J,MAAAuG,MAAAjR,EAAA,yBAAAC,SAAAqN,KAAA,MACAgT,mBAAA9f,MAAA,MAAAQ,GAAA0J,MAAAsG,MAAAhR,EAAA,yBAAAC,SAAAI,IAAA,MACAigB,mBAAA9f,MAAA,UAAA,eACA,IAEAigB,IAFAzf,GAAA0J,MAAAuG,MACAjQ,GAAA0J,MAAAsG,MACAvR,SAAAC,iBAAA,UACAghB,GAAAD,EAAA3gB,OACA4gB,GAAA,EACAC,YAAAF,EAAAC,GAAAE,SAEAN,mBAAAze,KAAA,SAAA8e,YAAA,MAAA,aAIAH,IACAhf,GAAA,WAAA,SAAAW,GACAme,mBAAA9f,MAAA,UAAA,SAKA,IAAAqgB,QAAAN,WAAAve,UAAA,WACAyB,KAAA4b,QAAAjW,SACA1F,QAAAX,OAAA,KACAC,KAAA,QAAA,UACAA,KAAA,YAAA,SAAAb,EAAAtC,GACA,MAAA,eAAA,GAAAA,EAAA,KAGAghB,QAAA9d,OAAA,QACAC,KAAA,IAAAJ,MAAA,IACAI,KAAA,QAAA,IACAA,KAAA,SAAA,IACAxC,MAAA,OAAAqS,OAEAgO,OAAA9d,OAAA,QACAC,KAAA,IAAAJ,MAAA,IACAI,KAAA,IAAA,GACAA,KAAA,KAAA,SACAxC,MAAA,cAAA,OACAmD,KAAA,SAAAxB,GACA,MAAAA","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\r\n\r\ndocument.createElement(\"article\");\r\ndocument.createElement(\"section\");\r\n\r\nvar speed = -80;\r\nparallax(speed);\r\n\r\nfunction parallax(speed) {\r\n\r\n    var parallax = document.querySelectorAll(\".parallax\");\r\n    // console.log(parallax[0]);\r\n\r\n    window.onscroll = function() {\r\n        for (var i = 0; i < parallax.length; i++) {\r\n\r\n            //var position = $(el).position();\r\n            // var offset = [];\r\n            var $offset = $(parallax[i]).offset();\r\n            //console.log(offset);\r\n            var $windowHeight = window.height;\r\n            var $windowYOffset = window.pageYOffset / $offset.top;\r\n            // $windowYOffset[0] = 0;\r\n            //       console.log($windowYOffset);\r\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\r\n            // console.log(el+\",\"+i);\r\n\r\n            var extraY = [0, -10, -60, -40, 0, -20];\r\n\r\n            var elBackgrounPos = [];\r\n\r\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\r\n\r\n            //console.log(elBackgrounPos);\r\n\r\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\r\n        };\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////NAV\r\nfunction collapseNavbar() {\r\n    if ($(\".navbar\").offset().top > 50) {\r\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\r\n    } else {\r\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\r\n    }\r\n}\r\n\r\n$(window).scroll(collapseNavbar);\r\n$(document).ready(collapseNavbar);\r\n\r\n// jQuery for page scrolling feature - requires jQuery Easing plugin\r\n$(function() {\r\n    $('a.page-scroll').bind('click', function(event) {\r\n        var $anchor = $(this);\r\n        $('html, body').stop().animate({\r\n            scrollTop: $($anchor.attr('href')).offset().top\r\n        }, 1500, 'easeInOutExpo');\r\n        event.preventDefault();\r\n    });\r\n});\r\n\r\n// Closes the Responsive Menu on Menu Item Click\r\n$('.navbar-collapse ul li a').click(function() {\r\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\r\n        $('.navbar-toggle:visible').click();\r\n    }\r\n});\r\n\r\n\r\n//when scrolling...\r\n$(window).scroll(function() {\r\n    if ($(window).scrollTop() >= 400) {\r\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\r\n    } else {\r\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\r\n    };\r\n\r\n\r\n    $('.target').each(function() {\r\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\r\n            var $id = $(this).attr('id');\r\n            $('#navigation li').removeClass('active');\r\n            $('#navigation li[id=' + $id + '1]').addClass('active');\r\n\r\n            var $current = $(this).attr('data-index');\r\n            // var $current = $(this).find('.section-title').text();\r\n            $('#current-section').html($current);\r\n        }\r\n    });\r\n\r\n});\r\n\r\n$(\"#navigation li\").on('click', function() {\r\n    $(this).parent().find(\"li\").removeClass(\"active\");\r\n    $(this).addClass(\"active\");\r\n});\r\n\r\n\r\n\r\n$('a[href*=#]:not([href=#])').click(function() {\r\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\r\n\r\n        var target = $(this.hash);\r\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n        if (target.length) {\r\n            $('html,body').animate({\r\n                scrollTop: target.offset().top\r\n            }, 500);\r\n            return false;\r\n        }\r\n    }\r\n    // });\r\n\r\n\r\n});\r\n\r\n\r\n/////////////////////////////Accordion\r\n// $(function() {\r\n//     var icons = {\r\n//         header: \"iconClosed\",\r\n//         activeHeader: \"iconOpen\",\r\n//         hoverHeader: 'iconHover'\r\n\r\n//     };\r\n//     $(\"#accordion\").accordion({\r\n//         icons: icons,\r\n//         heightStyle: \"content\"\r\n//     });\r\n// });\r\n\r\n/////////////////////////////Pills\r\n\r\n$('#pills-first a').click(function(e) {\r\n    e.preventDefault()\r\n    $(this).tab('show')\r\n});\r\n\r\n\r\n/////////////////////////////Video Links\r\n$('#play1').click(function() {\r\n    $(\"#video1\").get(0).play();\r\n});\r\n$('#play2').click(function() {\r\n    $(\"#video2\").get(0).play();\r\n});\r\n\r\n/////////////////////////////SVG Infographic\r\n$(function() {\r\n    $(\"#svg-infographic\").load('img/human1.svg', function(response) {\r\n        var val_svg = '2/3';\r\n        asignVal_svg(val_svg);\r\n\r\n        function asignVal_svg(val) {\r\n            $('.btn-svg').removeClass('active');\r\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\r\n            if (val == '1/12') {\r\n                $('.svg-studyperiod').attr(\"opacity\", 0);\r\n                $('.svg-onemonth').attr(\"opacity\", 1);\r\n                $('#svg-info').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\r\n            } else {\r\n                $('.svg-studyperiod').attr(\"opacity\", 1);\r\n                $('#svg-info').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\r\n            }\r\n        }\r\n\r\n        $('.btn-svg').on('click', function() {\r\n            asignVal_svg($(this).val());\r\n        });\r\n\r\n        $('.controls-svg').on('click', function() {\r\n            asignVal_svg($(this).data('select'));\r\n        });\r\n    });\r\n});\r\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        //for (i = 0; i < usStates.features.length; i++) {  \r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n                //return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);    \r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            console.log('ASSERT failure for index: ' + i);\r\n            console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n            console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n        console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","// $(document).ready(function() {\r\n//     app();\r\n//     app2();\r\n// });\r\n\r\n\r\nfunction app() {\r\n    queue()\r\n    //should be town polym data\r\n    .defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\r\n    //.defer(d3.json, \"us_states_5m.geo.json\")\r\n    //should be opioid death data\r\n    .defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\r\n    //.defer(d3.csv, \"us_pop.csv\")\r\n    .awaitAll(generateMap)\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            // console.log('ASSERT failure for index: ' + i);\r\n            // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    var svgContainer = d3.select(\"#map\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip = d3.select('#map').append('div')\r\n        .attr('class', 'hidden tooltip');\r\n\r\n    //#eff3ff    \r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\r\n        .range([\"#f1f1f1\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\", \"#084594\"]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64' \r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([10000])\r\n        .translate([330, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    function notify(selector, eventName) {\r\n        d3.selectAll(selector)[0].forEach(function(el, i) {\r\n            var shape = d3.select(el);\r\n            shape.on(eventName)(shape);\r\n        });\r\n    }\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .classed(\"deathmap\", true)\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 100) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n        var currentState = this;\r\n        d3.select(this).style('fill-opacity', 0.25)\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"2px\");\r\n    })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path.deathmap')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n        \t\t.style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n   \r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2015.5]\r\n    ];\r\n    var index = 0;\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend', 'Count of Opioid Related Deaths by Municipality');\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year;\r\n        var toyear = eval(year) + 1;\r\n        $('#titlePrefix').html('Count of Opiod Related Deaths in Massachusetts in');\r\n        $('#fromYear').html(year);\r\n        //$('#titleMidfix').html('to');\r\n        //$('#toYear').html(toyear);\r\n\r\n        $('#map1-source').html('Sources: Massachusetts Department of Public Health,' +\r\n                             '<br>Massachusetts Registry of Vital Records and Statistics</>');\r\n\r\n        svgContainer.selectAll(\"path.deathmap\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        //legendData.push({\r\n            //d: -9999,\r\n            //r: '#f1f1f1',\r\n            //s: 'N/A'\r\n        //});\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ///////////////////Map Composite\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function app2() {\r\n//     queue()\r\n//     //should be town polym data\r\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n//     //.defer(d3.json, \"us_states_5m.geo.json\")\r\n//     //should be opioid death data\r\n//     .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n//     //.defer(d3.csv, \"us_pop.csv\")\r\n//     .awaitAll(generateMap2);\r\n// }\r\n\r\n// function generateMap2(error, results) {\r\n//     $('.controls-map').click(function() {\r\n//         $(\"#timeline\").val($(this).data('select'));\r\n//         setSymbology2($(this).data('select'));\r\n//     });\r\n\r\n//     var maTowns = results[0];\r\n//     var maOpioid = results[1];\r\n\r\n//     var currentyear\r\n\r\n//     var i;\r\n//     for (i = 0; i < maTowns.features.length; i++) {\r\n//         if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n//             // console.log('ASSERT failure for index: ' + i);\r\n//             // console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n//             alert('Input data corrupted: generation of map terminated.');\r\n//             return;\r\n//         }\r\n//         maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n//     }\r\n\r\n//     var width = 960,\r\n//         height = 450;\r\n\r\n//     var svgContainer = d3.select(\"#map2\").append(\"svg\")\r\n//         .attr(\"width\", width)\r\n//         .attr(\"height\", height)\r\n//         .style(\"border\", \"0px solid steelblue\");\r\n\r\n//     var tooltip2 = d3.select('#map2').append('div')\r\n//         .attr('class', 'hidden tooltip2');\r\n\r\n//     var opChgScale = d3.scale.threshold()\r\n//         .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n//         .range(colorbrewer.RdPu[5]);\r\n//     opChgScale.domainStrings = function() {\r\n//         return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n//             '15.9-31.5', '>31.5'\r\n//         ]);\r\n//     };\r\n\r\n//     function toTitleCase(str) {\r\n//         return str.replace(/\\w\\S*/g, function(txt) {\r\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n//         });\r\n//     }\r\n\r\n//     var projection = d3.geo.conicConformal()\r\n//         .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n//         .rotate([71 + 30 / 60, -41])\r\n//         .scale([10000])\r\n//         .translate([330, 480]);\r\n\r\n//     var geoPath = d3.geo.path()\r\n//         .projection(projection);\r\n\r\n//     var map = svgContainer.selectAll(\"path\")\r\n//         .data(maTowns.features)\r\n//         .enter()\r\n//         .append(\"path\")\r\n//         .attr(\"d\", function(d, i) {\r\n//             return geoPath(d);\r\n//         })\r\n//         .on('mousemove', function(d) {\r\n//             var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n//                 return parseInt(d);\r\n//             });\r\n//             var string_base = \"yr\"\r\n//             currentvalue = string_base.concat(currentyear);\r\n//             var currentrate\r\n\r\n//             if (d.properties[currentvalue] > 0) {\r\n//                 currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n//             } else if (d.properties[currentvalue] == 0) {\r\n//                 currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n//             } else {\r\n//                 currentrate = \"N/A*\";\r\n//             }\r\n\r\n\r\n//             tooltip2.classed('hidden', false)\r\n//                 .attr('style', 'left:' + (mouse[0] + 15) +\r\n//                     'px !important; top:' + (mouse[1] + 625) + 'px !important')\r\n//                 .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n//         })\r\n//         .on('mouseover', function(d, i) {\r\n\r\n//             var currentState = this;\r\n//             d3.select(this).style('fill-opacity', 0.25)\r\n//                 .style(\"stroke\", \"white\")\r\n//                 .style(\"stroke-width\", \"2px\");\r\n//         })\r\n//         .on('mouseout', function(d, i) {\r\n//             tooltip2.classed('hidden', true);\r\n//             d3.selectAll('path')\r\n//                 .style(\"fill-opacity\", 1)\r\n//                 .style(\"stroke\", \"#2f363d\")\r\n//                 .style(\"stroke-width\", \"0.1px\");\r\n//         })\r\n//         .style(\"stroke\", \"#2f363d\")\r\n//         .style(\"stroke-width\", \"0.1px\")\r\n//         .style(\"fill\", \"white\")\r\n//         .on('mouseenter', function(d, i) {\r\n\r\n//             //var string_base = \"yr\"\r\n//             //currentvalue = string_base.concat(currentyear);\r\n//             //console.log(d.properties[currentvalue]);\r\n//         })\r\n//         .on('mouseleave', function(d) {\r\n\r\n//         });\r\n\r\n//     var aYears = [\r\n//         [2000, 2001],\r\n//         [2001, 2002],\r\n//         [2002, 2003],\r\n//         [2003, 2004],\r\n//         [2004, 2005],\r\n//         [2005, 2006],\r\n//         [2006, 2007],\r\n//         [2007, 2008],\r\n//         [2008, 2009],\r\n//         [2010, 2011],\r\n//         [2011, 2012],\r\n//         [2012, 2013],\r\n//         [2013, 2014],\r\n//         [2014, 2014.5]\r\n//     ];\r\n\r\n//     var index = 0;\r\n//     getYear();\r\n\r\n//     generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n//     function getYear() {\r\n//         setSymbology2(2000);\r\n//         $(\"#timeline\").on('input change', function() {\r\n//             var year = $(this).val()\r\n//             setSymbology2($(this).val());\r\n//         });\r\n//     };\r\n\r\n\r\n//     function setSymbology2(year) {\r\n\r\n//         var szAttr = 'yr' + year;\r\n//         currentyear = year\r\n//         var toyear = eval(year) + 1\r\n\r\n//         $('#titlePrefix2').html('Opioid Overdose Events in Massachusetts from');\r\n//         $('#fromYear2').html(year);\r\n//         $('#titleMidfix2').html('to');\r\n//         $('#toYear2').html(toyear).append('<span>*</span>');\r\n//         $('#map2-note').html('*Fatal and nonfatal overdoses, ambulance trips, emergency room admissions, narcan use, etc.');\r\n//         $('#map2-source').html('Data Sources: U.S. Census Bureau;' +\r\n//                             '<br />Executive Office of Health and Human Services'+\r\n//                             '<br />(Registry of Vital Records and Statistics,' +\r\n//                             '<br />Massachusetts Department of Public Health)');\r\n\r\n\r\n\r\n//         svgContainer.selectAll(\"path\")\r\n//             .transition()\r\n//             .duration(500)\r\n//             .style(\"fill\", function(d, i) {\r\n\r\n//                 var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n//                 return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n//             });\r\n//     }\r\n\r\n//     function generateLegend2(scale, szDivId, szCaption) {\r\n//         var width2 = 550,\r\n//             height2 = 80;\r\n\r\n//         var svg = d3.select('#' + szDivId).append(\"svg\")\r\n//             .attr(\"width\", width2)\r\n//             .attr(\"height\", height2);\r\n\r\n//         var g = svg.append(\"g\");\r\n\r\n//         // Create data array.\r\n//         var legendData = [];\r\n//         legendData.push({\r\n//             d: -9999,\r\n//             r: '#f1f1f1',\r\n//             s: 'N/A'\r\n//         });\r\n//         var i;\r\n//         for (i = 0; i < scale.domain().length; i++) {\r\n//             legendData.push({\r\n//                 d: scale.domain()[i],\r\n//                 r: scale.range()[i],\r\n//                 s: scale.domainStrings()[i]\r\n//             });\r\n//         }\r\n\r\n//         g.selectAll(\"rect\")\r\n//             .data(legendData)\r\n//             .enter().append(\"rect\")\r\n//             .attr(\"height\", 20)\r\n//             .attr(\"width\", 50)\r\n//             .attr(\"x\", function(d, i) {\r\n//                 return i * 55;\r\n//             })\r\n//             .attr(\"y\", 20)\r\n//             .style(\"stroke\", \"black\")\r\n//             .style(\"stroke-width\", \"0.25px\")\r\n//             .style(\"fill\", function(d, i) {\r\n//                 return d.r;\r\n//             });\r\n\r\n//         g.selectAll(\"text\")\r\n//             .data(legendData)\r\n//             .enter().append(\"text\")\r\n//             .attr(\"x\", function(d, i) {\r\n//                 return i * 55;\r\n//             })\r\n//             .attr(\"y\", 60)\r\n//             .text(function(d, i) {\r\n//                 return d.s;\r\n//             })\r\n//             .style(\"font-size\", \"12px\");\r\n\r\n//         g.append(\"text\")\r\n//             .attr(\"class\", \"caption\")\r\n//             .attr(\"y\", 12)\r\n//             .text(szCaption);\r\n//     } // generateLegend2()\r\n// } // generateMap2"," var town_names = [\r\n     //\"massachusetts\",\r\n     \"abington\",\r\n     \"acton\",\r\n     \"acushnet\",\r\n     \"adams\",\r\n     \"agawam\",\r\n     \"alford\",\r\n     \"amesbury\",\r\n     \"amherst\",\r\n     \"andover\",\r\n     \"aquinnah\",\r\n     \"arlington\",\r\n     \"ashburnham\",\r\n     \"ashby\",\r\n     \"ashfield\",\r\n     \"ashland\",\r\n     \"athol\",\r\n     \"attleboro\",\r\n     \"auburn\",\r\n     \"avon\",\r\n     \"ayer\",\r\n     \"barnstable\",\r\n     \"barre\",\r\n     \"becket\",\r\n     \"bedford\",\r\n     \"belchertown\",\r\n     \"bellingham\",\r\n     \"belmont\",\r\n     \"berkley\",\r\n     \"berlin\",\r\n     \"bernardston\",\r\n     \"beverly\",\r\n     \"billerica\",\r\n     \"blackstone\",\r\n     \"blandford\",\r\n     \"bolton\",\r\n     \"boston\",\r\n     \"bourne\",\r\n     \"boxborough\",\r\n     \"boxford\",\r\n     \"boylston\",\r\n     \"braintree\",\r\n     \"brewster\",\r\n     \"bridgewater\",\r\n     \"brimfield\",\r\n     \"brockton\",\r\n     \"brookfield\",\r\n     \"brewster\",\r\n     \"bridgewater\",\r\n     \"brimfield\",\r\n     \"brockton\",\r\n     \"brookfield\",\r\n     \"brookline\",\r\n     \"buckland\",\r\n     \"burlington\",\r\n     \"cambridge\",\r\n     \"canton\",\r\n     \"carlisle\",\r\n     \"carver\",\r\n     \"charlemont\",\r\n     \"charlton\",\r\n     \"chatham\",\r\n     \"chelmsford\",\r\n     \"chelsea\",\r\n     \"cheshire\",\r\n     \"chester\",\r\n     \"chesterfield\",\r\n     \"chicopee\",\r\n     \"chilmark\",\r\n     \"clarksburg\",\r\n     \"clinton\",\r\n     \"cohasset\",\r\n     \"colrain\",\r\n     \"concord\",\r\n     \"conway\",\r\n     \"cummington\",\r\n     \"dalton\",\r\n     \"danvers\",\r\n     \"dartmouth\",\r\n     \"dedham\",\r\n     \"deerfield\",\r\n     \"dennis\",\r\n     \"dighton\",\r\n     \"douglas\",\r\n     \"dover\",\r\n     \"dracut\",\r\n     \"dudley\",\r\n     \"dunstable\",\r\n     \"duxbury\",\r\n     \"eastbridgewater\",\r\n     \"eastbrookfield\",\r\n     \"eastlongmeadow\",\r\n     \"eastham\",\r\n     \"easthampton\",\r\n     \"easton\",\r\n     \"edgartown\",\r\n     \"egremont\",\r\n     \"erving\",\r\n     \"essex\",\r\n     \"everett\",\r\n     \"fairhaven\",\r\n     \"fallriver\",\r\n     \"falmouth\",\r\n     \"fitchburg\",\r\n     \"florida\",\r\n     \"foxborough\",\r\n     \"framingham\",\r\n     \"franklin\",\r\n     \"freetown\",\r\n     \"gardner\",\r\n     \"gay head\",\r\n     \"georgetown\",\r\n     \"gill\",\r\n     \"gloucester\",\r\n     \"goshen\",\r\n     \"gosnold\",\r\n     \"grafton\",\r\n     \"granby\",\r\n     \"granville\",\r\n     \"greatbarrington\",\r\n     \"greenfield\",\r\n     \"groton\",\r\n     \"groveland\",\r\n     \"hadley\",\r\n     \"halifax\",\r\n     \"hamilton\",\r\n     \"hampden\",\r\n     \"hancock\",\r\n     \"hanover\",\r\n     \"hanson\",\r\n     \"hardwick\",\r\n     \"harvard\",\r\n     \"harwich\",\r\n     \"hatfield\",\r\n     \"haverhill\",\r\n     \"hawley\",\r\n     \"heath\",\r\n     \"hingham\",\r\n     \"hinsdale\",\r\n     \"holbrook\",\r\n     \"holden\",\r\n     \"holland\",\r\n     \"holliston\",\r\n     \"holyoke\",\r\n     \"hopedale\",\r\n     \"hopkinton\",\r\n     \"hubbardston\",\r\n     \"hudson\",\r\n     \"hull\",\r\n     \"huntington\",\r\n     \"ipswich\",\r\n     \"kingston\",\r\n     \"lakeville\",\r\n     \"lancaster\",\r\n     \"lanesborough\",\r\n     \"lawrence\",\r\n     \"lee\",\r\n     \"leicester\",\r\n     \"lenox\",\r\n     \"leominster\",\r\n     \"leverett\",\r\n     \"lexington\",\r\n     \"leyden\",\r\n     \"lincoln\",\r\n     \"littleton\",\r\n     \"longmeadow\",\r\n     \"lowell\",\r\n     \"ludlow\",\r\n     \"lunenburg\",\r\n     \"lynn\",\r\n     \"lynnfield\",\r\n     \"malden\",\r\n     \"manchester\",\r\n     \"mansfield\",\r\n     \"marblehead\",\r\n     \"marion\",\r\n     \"marlborough\",\r\n     \"marshfield\",\r\n     \"mashpee\",\r\n     \"mattapoisett\",\r\n     \"maynard\",\r\n     \"medfield\",\r\n     \"medford\",\r\n     \"medway\",\r\n     \"melrose\",\r\n     \"mendon\",\r\n     \"merrimac\",\r\n     \"methuen\",\r\n     \"middleborough\",\r\n     \"middlefield\",\r\n     \"middleton\",\r\n     \"milford\",\r\n     \"millbury\",\r\n     \"millis\",\r\n     \"millville\",\r\n     \"milton\",\r\n     \"monroe\",\r\n     \"monson\",\r\n     \"montague\",\r\n     \"monterey\",\r\n     \"montgomery\",\r\n     \"mountwashington\",\r\n     \"nahant\",\r\n     \"nantucket\",\r\n     \"natick\",\r\n     \"needham\",\r\n     \"newashford\",\r\n     \"newbedford\",\r\n     \"newbraintree\",\r\n     \"newmarlborough\",\r\n     \"newsalem\",\r\n     \"newbury\",\r\n     \"newburyport\",\r\n     \"newton\",\r\n     \"norfolk\",\r\n     \"westadams\",\r\n     \"westandover\",\r\n     \"westattleborough\",\r\n     \"westbrookfield\",\r\n     \"westreading\",\r\n     \"northampton\",\r\n     \"northborough\",\r\n     \"northbridge\",\r\n     \"northfield\",\r\n     \"norton\",\r\n     \"norwell\",\r\n     \"norwood\",\r\n     \"oak bluffs\",\r\n     \"oakham\",\r\n     \"orange\",\r\n     \"orleans\",\r\n     \"otis\",\r\n     \"oxford\",\r\n     \"palmer\",\r\n     \"paxton\",\r\n     \"peabody\",\r\n     \"pelham\",\r\n     \"pembroke\",\r\n     \"pepperell\",\r\n     \"peru\",\r\n     \"petersham\",\r\n     \"phillipston\",\r\n     \"pittsfield\",\r\n     \"plainfield\",\r\n     \"plainville\",\r\n     \"plymouth\",\r\n     \"plympton\",\r\n     \"princeton\",\r\n     \"provincetown\",\r\n     \"quincy\",\r\n     \"randolph\",\r\n     \"raynham\",\r\n     \"reading\",\r\n     \"rehoboth\",\r\n     \"revere\",\r\n     \"richmond\",\r\n     \"rochester\",\r\n     \"rockland\",\r\n     \"rockport\",\r\n     \"rowe\",\r\n     \"rowley\",\r\n     \"royalston\",\r\n     \"russell\",\r\n     \"rutland\",\r\n     \"salem\",\r\n     \"salisbury\",\r\n     \"sandisfield\",\r\n     \"sandwich\",\r\n     \"saugus\",\r\n     \"savoy\",\r\n     \"scituate\",\r\n     \"seekonk\",\r\n     \"sharon\",\r\n     \"sheffield\",\r\n     \"shelburne\",\r\n     \"sherborn\",\r\n     \"shirley\",\r\n     \"shrewsbury\",\r\n     \"shutesbury\",\r\n     \"somerset\",\r\n     \"somerville\",\r\n     \"southhadley\",\r\n     \"southampton\",\r\n     \"southborough\",\r\n     \"southbridge\",\r\n     \"southwick\",\r\n     \"spencer\",\r\n     \"springfield\",\r\n     \"sterling\",\r\n     \"stockbridge\",\r\n     \"stoneham\",\r\n     \"stoughton\",\r\n     \"stow\",\r\n     \"sturbridge\",\r\n     \"sudbury\",\r\n     \"sunderland\",\r\n     \"sutton\",\r\n     \"swampscott\",\r\n     \"swansea\",\r\n     \"taunton\",\r\n     \"templeton\",\r\n     \"tewksbury\",\r\n     \"tisbury\",\r\n     \"tolland\",\r\n     \"topsfield\",\r\n     \"townsend\",\r\n     \"truro\",\r\n     \"tyngsborough\",\r\n     \"tyringham\",\r\n     \"upton\",\r\n     \"uxbridge\",\r\n     \"wakefield\",\r\n     \"wales\",\r\n     \"walpole\",\r\n     \"waltham\",\r\n     \"ware\",\r\n     \"wareham\",\r\n     \"warren\",\r\n     \"warwick\",\r\n     \"washington\",\r\n     \"watertown\",\r\n     \"wayland\",\r\n     \"webster\",\r\n     \"wellesley\",\r\n     \"wellfleet\",\r\n     \"wendell\",\r\n     \"wenham\",\r\n     \"westboylston\",\r\n     \"westbridgewater\",\r\n     \"westbrookfield\",\r\n     \"westnewbury\",\r\n     \"westspringfield\",\r\n     \"weststockbridge\",\r\n     \"westtisbury\",\r\n     \"westborough\",\r\n     \"westfield\",\r\n     \"westford\",\r\n     \"westhampton\",\r\n     \"westminster\",\r\n     \"weston\",\r\n     \"westport\",\r\n     \"westwood\",\r\n     \"weymouth\",\r\n     \"whately\",\r\n     \"whitman\",\r\n     \"wilbraham\",\r\n     \"williamsburg\",\r\n     \"williamstown\",\r\n     \"wilmington\",\r\n     \"winchendon\",\r\n     \"winchester\",\r\n     \"windsor\",\r\n     \"winthrop\",\r\n     \"woburn\",\r\n     \"worcester\",\r\n     \"worthington\",\r\n     \"wrentham\",\r\n     \"yarmouth\"\r\n ];\r\n var current_town = \"massachusetts\";\r\n\r\n var margin_bsas = {\r\n         top: 0,\r\n         right: 50,\r\n         bottom: 30,\r\n         left: 50\r\n     },\r\n     width_bsas = 650 - margin_bsas.left - margin_bsas.right,\r\n     height_bsas = 400 - margin_bsas.top - margin_bsas.bottom;\r\n\r\n var bisectAge = d3.bisector(function(d) {\r\n     return d.age;\r\n }).left;\r\n var percent = d3.format(',.1%');\r\n var yearformat = d3.format(\"d\");\r\n // var min_age = 2005;\r\n // var fields = ['emp', 'edu', 'race', 'orig'];\r\n var groups = {};\r\n\r\n var x = d3.scale.linear()\r\n     .range([0, width_bsas]);\r\n\r\n var y = d3.scale.linear()\r\n     .range([height_bsas, 0]);\r\n // .domain([0, 6]);\r\n\r\n var color = d3.scale.category10();\r\n\r\n var xAxis_bsas = d3.svg.axis()\r\n     .scale(x)\r\n     .tickFormat(yearformat)\r\n     .orient(\"bottom\")\r\n     .outerTickSize(0);\r\n\r\n var yAxis_bsas = d3.svg.axis()\r\n     .scale(y)\r\n     .tickSize(width_bsas)\r\n     .orient(\"right\")\r\n     .tickFormat(percent);\r\n\r\n var line = d3.svg.line()\r\n     .x(function(d) {\r\n         return x(d.age);\r\n     })\r\n     .y(function(d) {\r\n         return y(d.value);\r\n     })\r\n     .defined(function(d) {\r\n         return y(d.value);\r\n     }) // Omit empty values.;\r\n\r\n\r\n\r\n var $lines_bsas = d3.select(\"#lines-bsas\").append(\"svg\")\r\n     .attr(\"width\", width_bsas + margin_bsas.left + margin_bsas.right)\r\n     .attr(\"height\", height_bsas + margin_bsas.top + margin_bsas.bottom)\r\n     .append(\"g\")\r\n     .attr(\"transform\", \"translate(\" + margin_bsas.left + \",\" + margin_bsas.top + \")\");\r\n\r\n d3.csv(\"js/data/bsas-data.csv\", type, function(error, data) {\r\n     if (error) throw error;\r\n     //console.log(groups);\r\n     // var marriages = groups[current_town];\r\n\r\n     x.domain([2005, d3.max(data, function(d) {\r\n         return d.age;\r\n     })]);\r\n     y.domain([0, .99]);\r\n\r\n     $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"x axis_bsas\")\r\n         .attr(\"transform\", \"translate(0,\" + height_bsas + \")\")\r\n         .call(xAxis_bsas)\r\n         .append(\"text\")\r\n         .attr(\"x\", 635)\r\n         .attr(\"y\", 15)\r\n         .attr(\"text-anchor\", \"middle\")\r\n         .text(\"Year\");\r\n\r\n     $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"y axis_bsas\")\r\n         .call(yAxis_bsas)\r\n         .append(\"text\")\r\n         // .attr(\"y\", -30)\r\n         .style(\"text-anchor\", \"start\")\r\n         // .text(\"Substance Abuse\");\r\n     $lines_bsas.selectAll(\".y.axis_bsas text\").attr(\"x\", -43).attr(\"dy\", 0);\r\n\r\n     var legend_pos_text = -40,\r\n         legend_pos_dot = -50;\r\n\r\n\r\n     $lines_bsas.append(\"circle\")\r\n         .attr(\"class\", \"circle opioids\")\r\n         .attr(\"cx\", width_bsas + legend_pos_dot)\r\n         .attr(\"cy\", 25)\r\n         .attr(\"r\", 3);\r\n     $lines_bsas.append(\"g\")\r\n         .append(\"text\")\r\n         .attr(\"class\", \"focus opioids\")\r\n         .attr(\"x\", width_bsas + legend_pos_text)\r\n         .attr(\"y\", 28)\r\n         .text(\"opioids\");\r\n\r\n     $lines_bsas.append(\"circle\")\r\n         .attr(\"class\", \"circle alcohol\")\r\n         .attr(\"cx\", width_bsas + legend_pos_dot)\r\n         .attr(\"cy\", 40)\r\n         .attr(\"r\", 3);\r\n     $lines_bsas.append(\"g\")\r\n         .append(\"text\")\r\n         .attr(\"class\", \"focus alcohol\")\r\n         .attr(\"x\", width_bsas + legend_pos_text)\r\n         .attr(\"y\", 43)\r\n         .text(\"alcohol\");\r\n\r\n\r\n     $lines_bsas.append(\"circle\")\r\n         .attr(\"class\", \"circle marijuana\")\r\n         .attr(\"cx\", width_bsas + legend_pos_dot)\r\n         .attr(\"cy\", 55)\r\n         .attr(\"r\", 3);\r\n     $lines_bsas.append(\"g\")\r\n         .append(\"text\")\r\n         .attr(\"class\", \"focus marijuana\")\r\n         .attr(\"x\", width_bsas + legend_pos_text)\r\n         .attr(\"y\", 58)\r\n         .text(\"marijuana\");\r\n\r\n\r\n     $lines_bsas.append(\"circle\")\r\n         .attr(\"class\", \"circle other\")\r\n         .attr(\"cx\", width_bsas + legend_pos_dot)\r\n         .attr(\"cy\", 70)\r\n         .attr(\"r\", 3);\r\n     $lines_bsas.append(\"g\")\r\n         .append(\"text\")\r\n         .attr(\"class\", \"focus other\")\r\n         .attr(\"x\", width_bsas + legend_pos_text)\r\n         .attr(\"y\", 73)\r\n         .text(\"other\");\r\n\r\n\r\n     $lines_bsas.append(\"circle\")\r\n         .attr(\"class\", \"circle none\")\r\n         .attr(\"cx\", width_bsas + legend_pos_dot)\r\n         .attr(\"cy\", 82)\r\n         .attr(\"r\", 3);\r\n     $lines_bsas.append(\"g\")\r\n         .append(\"text\")\r\n         .attr(\"class\", \"focus none\")\r\n         .attr(\"x\", width_bsas + legend_pos_text)\r\n         .attr(\"y\", 88)\r\n         .text(\"none\");\r\n\r\n     // Alcohol line\r\n     $lines_bsas.append(\"path\")\r\n         .attr(\"class\", \"line alcohol\")\r\n         .attr(\"d\", function(d) {\r\n             return line(groups[current_town + \"alcohol\"].values);\r\n         });\r\n\r\n     //alcohol circle\r\n     for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n\r\n         var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\r\n         var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\r\n\r\n         if (y_circle_alcohol >= 0) {\r\n\r\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \r\n             //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\r\n\r\n             $lines_bsas.append(\"circle\")\r\n                 .attr(\"class\", function(d) {\r\n                     return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                 })\r\n                 .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\r\n                 .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\r\n                 .attr(\"r\", 3)\r\n         }\r\n     }\r\n\r\n     // Marijuana line\r\n     $lines_bsas.append(\"path\")\r\n         .attr(\"class\", \"line marijuana\")\r\n         .attr(\"d\", function(d) {\r\n             return line(groups[current_town + \"marijuana\"].values);\r\n         });\r\n     // Marijuana circle\r\n     for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n\r\n         var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\r\n         var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\r\n\r\n         if (y_circle_alcohol >= 0) {\r\n\r\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \r\n             //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\r\n\r\n             $lines_bsas.append(\"circle\")\r\n                 .attr(\"class\", function(d) {\r\n                     return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                 })\r\n                 .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\r\n                 .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\r\n                 .attr(\"r\", 3)\r\n         }\r\n     }\r\n\r\n     // None line\r\n     $lines_bsas.append(\"path\")\r\n         .attr(\"class\", \"line none\")\r\n         .attr(\"d\", function(d) {\r\n             return line(groups[current_town + \"none\"].values);\r\n         });\r\n     // None circle\r\n     for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n         var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\r\n         var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\r\n\r\n         if (y_circle_alcohol >= 0) {\r\n\r\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \r\n             //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\r\n\r\n             $lines_bsas.append(\"circle\")\r\n                 .attr(\"class\", function(d) {\r\n                     return \"circle none y\" + groups[current_town + \"none\"].values[i].age\r\n                 })\r\n                 .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\r\n                 .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\r\n                 .attr(\"r\", 3)\r\n         }\r\n     }\r\n\r\n     // Opioids line\r\n     $lines_bsas.append(\"path\")\r\n         .attr(\"class\", \"line opioids\")\r\n         .attr(\"d\", function(d) {\r\n             return line(groups[current_town + \"opioids\"].values);\r\n         });\r\n     // Opioids circle\r\n     for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n         var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\r\n         var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\r\n\r\n         if (y_circle_alcohol >= 0) {\r\n\r\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \r\n             //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\r\n\r\n             $lines_bsas.append(\"circle\")\r\n                 .attr(\"class\", function(d) {\r\n                     return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\r\n                 })\r\n                 .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\r\n                 .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\r\n                 .attr(\"r\", 3)\r\n         }\r\n     }\r\n\r\n     // Other line\r\n     $lines_bsas.append(\"path\")\r\n         .attr(\"class\", \"line other\")\r\n         .attr(\"d\", function(d) {\r\n             return line(groups[current_town + \"other\"].values);\r\n         });\r\n     // Other circle\r\n     for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n         var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\r\n         var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\r\n\r\n         if (y_circle_alcohol >= 0) {\r\n\r\n             //console.log(groups[current_town+\"alcohol\"].values[i].age); \r\n             // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\r\n\r\n             $lines_bsas.append(\"circle\")\r\n                 .attr(\"class\", function(d) {\r\n                     return \"circle other y\" + groups[current_town + \"other\"].values[i].age\r\n                 })\r\n                 .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\r\n                 .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\r\n                 .attr(\"r\", 3)\r\n         }\r\n     }\r\n\r\n     // Autocomplete\r\n\r\n     $(\".btn-bsas\").addClass('active');\r\n     d3.selectAll(\".btn-bsas\").on(\"click\", function() {\r\n         current_town = d3.select(this).attr(\"data-val\");\r\n         update();\r\n         $(\"#tags\").val('');\r\n     });\r\n\r\n\r\n     $(\"#tags\").autocomplete({\r\n         source: function(request, response) {\r\n             var matches = $.map(town_names, function(acItem) {\r\n                 if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\r\n                     return acItem;\r\n                 }\r\n             });\r\n             response(matches);\r\n             //$(\"#tags\").focus(function() {\r\n                 // if (matches.length == 1) {\r\n                 //     current_town = matches[0];\r\n                 //     $(\".btn-bsas\").removeClass('active');\r\n                 //     update();\r\n                 // }\r\n             //});\r\n             //console.log(matches);\r\n         },\r\n         select: function(event, ui) {\r\n             current_town = ui.item.value;\r\n             $(\".btn-bsas\").removeClass('active');\r\n             update();\r\n         }\r\n     });\r\n\r\n     function update() {\r\n\r\n         // marriages = groups[current_town];\r\n         //update alcohol line\r\n         $lines_bsas.select(\".line.alcohol\")\r\n             .transition()\r\n             .duration(600)\r\n             .delay(180)\r\n             .attr(\"d\", function(d) {\r\n                 return line(groups[current_town + \"alcohol\"].values);\r\n             });\r\n\r\n         //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\r\n\r\n         //update alcohol circles\r\n         for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\r\n             var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\r\n                 // console.log(string_select);\r\n\r\n             if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"cx\", function(d) {\r\n                         return x(groups[current_town + \"alcohol\"].values[i].age)\r\n                     })\r\n                     .attr(\"cy\", function(d) {\r\n                         return y(groups[current_town + \"alcohol\"].values[i].value)\r\n                     })\r\n                     .attr(\"r\", 3)\r\n             } else {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"r\", 0)\r\n             }\r\n\r\n         }\r\n\r\n\r\n\r\n         //marijuana\r\n         $lines_bsas.select(\".line.marijuana\")\r\n             .transition()\r\n             .duration(600)\r\n             .attr(\"d\", function(d) {\r\n                 return line(groups[current_town + \"marijuana\"].values);\r\n             });\r\n         //update marijuana circles\r\n         for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\r\n             var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\r\n                 //console.log(string_select);\r\n\r\n             if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"cx\", function(d) {\r\n                         return x(groups[current_town + \"marijuana\"].values[i].age)\r\n                     })\r\n                     .attr(\"cy\", function(d) {\r\n                         return y(groups[current_town + \"marijuana\"].values[i].value)\r\n                     })\r\n                     .attr(\"r\", 3)\r\n             } else {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"r\", 0)\r\n             }\r\n\r\n         }\r\n\r\n         //none\r\n         $lines_bsas.select(\".line.none\")\r\n             .transition()\r\n             .duration(600)\r\n             .attr(\"d\", function(d) {\r\n                 return line(groups[current_town + \"none\"].values);\r\n             });\r\n         //update none circles\r\n         for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\r\n\r\n\r\n             var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\r\n             var value_select = groups[current_town + \"none\"].values[i].value\r\n                 // console.log(string_select);\r\n                 // console.log(value_select);\r\n                 // console.log(value_select >= 0);\r\n\r\n             if (groups[current_town + \"none\"].values[i].value >= 0) {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"cx\", function(d) {\r\n                         return x(groups[current_town + \"none\"].values[i].age)\r\n                     })\r\n                     .attr(\"cy\", function(d) {\r\n                         return y(groups[current_town + \"none\"].values[i].value)\r\n                     })\r\n                     .attr(\"r\", 3);\r\n             } else {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"r\", 0);\r\n             }\r\n\r\n         }\r\n\r\n         //opioids\r\n         $lines_bsas.select(\".line.opioids\")\r\n             .transition()\r\n             .duration(600)\r\n             .attr(\"d\", function(d) {\r\n                 return line(groups[current_town + \"opioids\"].values);\r\n             });\r\n         //update opioids circles\r\n         for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\r\n\r\n\r\n             var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\r\n             var value_select = groups[current_town + \"opioids\"].values[i].value\r\n                 //console.log(string_select);\r\n                 //console.log(value_select);\r\n                 //console.log(value_select >= 0);\r\n\r\n             if (value_select >= 0) {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"cx\", function(d) {\r\n                         return x(groups[current_town + \"opioids\"].values[i].age)\r\n                     })\r\n                     .attr(\"cy\", function(d) {\r\n                         return y(groups[current_town + \"opioids\"].values[i].value)\r\n                     })\r\n                     .attr(\"r\", 3);\r\n             } else {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"r\", 0);\r\n             }\r\n\r\n         }\r\n\r\n         //other\r\n         $lines_bsas.select(\".line.other\")\r\n             .transition()\r\n             .duration(600)\r\n             .attr(\"d\", function(d) {\r\n                 return line(groups[current_town + \"other\"].values);\r\n             });\r\n         //update other circles\r\n         for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\r\n\r\n             var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\r\n             var value_select = groups[current_town + \"other\"].values[i].value\r\n                 // console.log(string_select);\r\n                 // console.log(value_select);\r\n                 // console.log(value_select >= 0);\r\n\r\n             if (value_select >= 0) {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"cx\", function(d) {\r\n                         return x(groups[current_town + \"other\"].values[i].age)\r\n                     })\r\n                     .attr(\"cy\", function(d) {\r\n                         return y(groups[current_town + \"other\"].values[i].value)\r\n                     })\r\n                     .attr(\"r\", 3);\r\n             } else {\r\n                 $lines_bsas.selectAll(string_select)\r\n                     .transition()\r\n                     .duration(600)\r\n                     .attr(\"r\", 0);\r\n             }\r\n\r\n         }\r\n\r\n     }\r\n\r\n\r\n\r\n\r\n     // alcohol\r\n     var focusalcohol = $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"focus alcohol\")\r\n         .style(\"display\", \"none\");\r\n     focusalcohol.append(\"circle\")\r\n         .attr(\"r\", 3);\r\n     focusalcohol.append(\"text\")\r\n         .attr(\"x\", 9)\r\n         .attr(\"dy\", \".35em\");\r\n\r\n     // marijuana\r\n     var focusmarijuana = $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"focus marijuana\")\r\n         .style(\"display\", \"none\");\r\n     focusmarijuana.append(\"circle\")\r\n         .attr(\"r\", 3);\r\n     focusmarijuana.append(\"text\")\r\n         .attr(\"x\", 9)\r\n         .attr(\"dy\", \".35em\");\r\n\r\n     // none\r\n     var focusnone = $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"focus none\")\r\n         .style(\"display\", \"none\");\r\n     focusnone.append(\"circle\")\r\n         .attr(\"r\", 3);\r\n     focusnone.append(\"text\")\r\n         .attr(\"x\", 9)\r\n         .attr(\"dy\", \".35em\");\r\n\r\n     // opioids\r\n     var focusopioids = $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"focus opioids\")\r\n         .style(\"display\", \"none\");\r\n     focusopioids.append(\"circle\")\r\n         .attr(\"r\", 3);\r\n     focusopioids.append(\"text\")\r\n         .attr(\"x\", 9)\r\n         .attr(\"dy\", \".35em\");\r\n\r\n     // none\r\n     var focusother = $lines_bsas.append(\"g\")\r\n         .attr(\"class\", \"focus other\")\r\n         .style(\"display\", \"none\");\r\n     focusother.append(\"circle\")\r\n         .attr(\"r\", 3);\r\n     focusother.append(\"text\")\r\n         .attr(\"x\", 9)\r\n         .attr(\"dy\", \".35em\");\r\n\r\n     // Events\r\n     $lines_bsas.append(\"rect\")\r\n         .attr(\"class\", \"overlay\")\r\n         .attr(\"width\", width_bsas)\r\n         .attr(\"height\", height_bsas)\r\n         .on(\"mouseover\", function() {\r\n             focusmarijuana.style(\"display\", null);\r\n             focusalcohol.style(\"display\", null);\r\n             focusnone.style(\"display\", null);\r\n             focusopioids.style(\"display\", null);\r\n             focusother.style(\"display\", null);\r\n             //focusage.style(\"display\", null);\r\n         })\r\n         .on(\"mouseout\", function() {\r\n             focusmarijuana.style(\"display\", \"none\");\r\n             focusalcohol.style(\"display\", \"none\");\r\n             focusnone.style(\"display\", \"none\");\r\n             focusopioids.style(\"display\", \"none\");\r\n             focusother.style(\"display\", \"none\");\r\n             //focusage.style(\"display\", \"none\");\r\n         })\r\n         .on(\"mousemove\", mousemove);\r\n\r\n     function mousemove() {\r\n\r\n\r\n\r\n         var x0 = x.invert(d3.mouse(this)[0])\r\n\r\n         // Alcohol\r\n         var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\r\n             d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\r\n             d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\r\n             d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\r\n\r\n         if (d_alcohol.value >= 0) {\r\n             focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\r\n             focusalcohol.select(\"text\").text(percent(d_alcohol.value));\r\n             focusalcohol.select(\"circle\").attr(\"r\", 4);\r\n         } else {\r\n             focusalcohol.select(\"circle\").attr(\"r\", 0);\r\n             focusalcohol.select(\"text\").text(\"\");\r\n         }\r\n\r\n         // Marijuana\r\n\r\n         var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\r\n             d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\r\n             d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\r\n             d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\r\n\r\n\r\n         // console.log(d_marijuana.value + \" \" + d_marijuana.age);\r\n         // console.log(d_marijuana.value >= 0);\r\n\r\n         if (d_marijuana.value >= 0) {\r\n             focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\r\n             focusmarijuana.select(\"text\").text(percent(d_marijuana.value));\r\n             focusmarijuana.select(\"circle\").attr(\"r\", 4);\r\n         } else {\r\n             focusmarijuana.select(\"circle\").attr(\"r\", 0);\r\n             focusmarijuana.select(\"text\").text(\"\");\r\n         }\r\n\r\n         // None\r\n\r\n         var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\r\n             d0_none = groups[current_town + \"none\"].values[i_none - 1],\r\n             d1_none = groups[current_town + \"none\"].values[i_none],\r\n             d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\r\n\r\n         if (d_none.value >= 0) {\r\n             focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\r\n             focusnone.select(\"text\").text(percent(d_none.value));\r\n             focusnone.select(\"circle\").attr(\"r\", 4);\r\n         } else {\r\n             focusnone.select(\"circle\").attr(\"r\", 0);\r\n             focusnone.select(\"text\").text(\"\");\r\n         }\r\n\r\n\r\n         // Opioids\r\n         var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\r\n             d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\r\n             d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\r\n             d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\r\n\r\n         if (d_opioids.value >= 0) {\r\n             focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\r\n             focusopioids.select(\"text\").text(percent(d_opioids.value));\r\n             focusopioids.select(\"circle\").attr(\"r\", 4);\r\n         } else {\r\n             focusopioids.select(\"circle\").attr(\"r\", 0);\r\n             focusopioids.select(\"text\").text(\"\");\r\n         }\r\n\r\n\r\n         // other\r\n         var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\r\n             d0_other = groups[current_town + \"other\"].values[i_other - 1],\r\n             d1_other = groups[current_town + \"other\"].values[i_other],\r\n             d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\r\n\r\n         //console.log(d_other.value);\r\n\r\n         if (d_other.value >= 0) {\r\n             focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\r\n             focusother.select(\"text\").text(percent(d_other.value));\r\n             focusother.select(\"circle\").attr(\"r\", 4);\r\n         } else {\r\n             focusother.select(\"circle\").attr(\"r\", 0);\r\n             focusother.select(\"text\").text(\"\");\r\n         }\r\n\r\n\r\n         // Adjust label horizontal positions.\r\n         if (x0 > 80) {\r\n             focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n             focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n             focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n             focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n             focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\r\n         } else {\r\n             focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n             focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n             focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n             focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n             focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\r\n         }\r\n\r\n\r\n\r\n     }\r\n\r\n }); // @end d3.tsv()\r\n\r\n\r\n function type(d, i) {\r\n\r\n     d3.keys(d).forEach(function(key) {\r\n         d[key] = +d[key];\r\n         if (key != 'age') {\r\n             if (!(key in groups)) {\r\n                 groups[key] = {\r\n                     'values': [{\r\n                         age: d.age,\r\n                         value: d[key]\r\n                     }]\r\n                 };\r\n             } else {\r\n                 groups[key]['values'].push({\r\n                     age: d.age,\r\n                     value: d[key]\r\n                 });\r\n             }\r\n         }\r\n     });\r\n\r\n     return d;\r\n\r\n }\r\n","dataset = [\r\n    { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\r\n    { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\r\n    { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\r\n    { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\r\n];\r\n\r\nvar color = d3.scale.ordinal()\r\n    .range([\"#2166ac\", \"#92c5de\"]);\r\nvar margin = { top: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10), right: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 20), bottom: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 5), left: (parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) / 10) },\r\n    width = parseInt(d3.select('#race_ethnicity_chart').style('width'), 10) - margin.left - margin.right,\r\n    height = parseInt(d3.select('#race_ethnicity_chart').style('height'), 10) - margin.top - margin.bottom;\r\n\r\nvar x0 = d3.scale.ordinal()\r\n    .rangeRoundBands([0, width], .1);\r\n\r\nvar x1 = d3.scale.ordinal();\r\n\r\nvar y = d3.scale.linear()\r\n    .range([height, 0]);\r\n\r\n//var colorRange = d3.scale.category20();\r\n//var color = d3.scale.ordinal()\r\n//.range(colorRange.range());\r\n\r\n\r\n\r\nvar xAxis_bars = d3.svg.axis()\r\n    .scale(x0)\r\n    .orient(\"bottom\");\r\n\r\nvar yAxis_bars = d3.svg.axis()\r\n    .scale(y)\r\n    .orient(\"left\")\r\n    .tickFormat(d3.format(\".0f\"));\r\n\r\nvar divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").attr(\"class\", \"tooltip_raceeth\");\r\n\r\n\r\nvar $bars_race = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n\r\n\r\n\r\nvar options = d3.keys(dataset[0]).filter(function(key) {\r\n    return key !== \"raceth\";\r\n});\r\n\r\ndataset.forEach(function(d) {\r\n    d.values = options.map(function(name) {\r\n        return { name: name, value: +d[name] };\r\n    });\r\n});\r\n\r\nx0.domain(dataset.map(function(d) {\r\n    return d.raceth;\r\n}));\r\nx1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\r\ny.domain([0, d3.max(dataset, function(d) {\r\n    return d3.max(d.values, function(d) {\r\n        return d.value;\r\n    });\r\n})]);\r\n\r\n$bars_race.append(\"g\")\r\n    .attr(\"class\", \"x axis-race\")\r\n    .attr(\"transform\", \"translate(10,\" + height + \")\")\r\n    .call(xAxis_bars)\r\n    .selectAll(\".tick text\")\r\n    .call(wrap, x0.rangeBand());\r\n\r\n$bars_race.append(\"g\")\r\n    .attr(\"class\", \"y axis-race\")\r\n    .call(yAxis_bars)\r\n    .append(\"text\")\r\n    .attr(\"transform\", \"rotate(-90)\")\r\n    .attr(\"y\", -35)\r\n    .attr(\"dy\", \".71em\")\r\n    .style(\"text-anchor\", \"end\")\r\n    .text(\"Age Adjusted Rates per 100,000\");\r\n\r\nvar bar = $bars_race.selectAll(\".bar\")\r\n    .data(dataset)\r\n    .enter().append(\"g\")\r\n    .attr(\"class\", \"rect\")\r\n    .attr(\"transform\", function(d) {\r\n        return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\r\n    });\r\n\r\n\r\nbar.selectAll(\"rect\")\r\n    .data(function(d) {\r\n        return d.values;\r\n    })\r\n    .enter().append(\"rect\")\r\n    .attr(\"width\", x1.rangeBand())\r\n    .attr(\"x\", function(d) {\r\n        return x1(d.name) + 5;\r\n    })\r\n    .attr(\"y\", function(d) {\r\n        return y(d.value);\r\n    })\r\n    .attr(\"value\", function(d) {\r\n        return d.name;\r\n    })\r\n    .attr(\"height\", function(d) {\r\n        return height - y(d.value);\r\n    })\r\n    .style(\"fill\", function(d) {\r\n        return color(d.name);\r\n    })\r\n    .style(\"fill\", function(d) {\r\n        return color(d.name);\r\n    });\r\n\r\n//bar.on(\r\n//\"mouseover\", function(){ \r\n//d3.select(this).attr(\"fill\",\"red !important\");\r\n//});\r\n\r\nbar\r\n    .on(\"mousemove\", function(d) {\r\n        divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\r\n        divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\r\n        divtooltip_raceeth.style(\"display\", \"inline-block\");\r\n        var x = d3.event.pageX,\r\n            y = d3.event.pageY\r\n        var elements = document.querySelectorAll(':hover');\r\n        l = elements.length\r\n        l = l - 1\r\n        elementData = elements[l].__data__\r\n            //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\r\n        divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\r\n\r\n    });\r\n\r\nbar\r\n    .on(\"mouseout\", function(d) {\r\n        divtooltip_raceeth.style(\"display\", \"none\");\r\n    });\r\n\r\n\r\n\r\nvar legend = $bars_race.selectAll(\".legend\")\r\n    .data(options.slice())\r\n    .enter().append(\"g\")\r\n    .attr(\"class\", \"legend\")\r\n    .attr(\"transform\", function(d, i) {\r\n        return \"translate(0,\" + i * 20 + \")\";\r\n    });\r\n\r\nlegend.append(\"rect\")\r\n    .attr(\"x\", width - 18)\r\n    .attr(\"width\", 18)\r\n    .attr(\"height\", 18)\r\n    .style(\"fill\", color);\r\n\r\nlegend.append(\"text\")\r\n    .attr(\"x\", width - 24)\r\n    .attr(\"y\", 9)\r\n    .attr(\"dy\", \".35em\")\r\n    .style(\"text-anchor\", \"end\")\r\n    .text(function(d) {\r\n        return d;\r\n    });\r\n\r\nfunction wrap(text, width) {\r\n    text.each(function() {\r\n        var text = d3.select(this),\r\n            words = text.text().split(/\\s+/).reverse(),\r\n            word,\r\n            line = [],\r\n            lineNumber = 0,\r\n            lineHeight = 1.1, // ems\r\n            y = text.attr(\"y\"),\r\n            dy = parseFloat(text.attr(\"dy\")),\r\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n        while (word = words.pop()) {\r\n            line.push(word);\r\n            tspan.text(line.join(\" \"));\r\n            if (tspan.node().getComputedTextLength() > width) {\r\n                line.pop();\r\n                tspan.text(line.join(\" \"));\r\n                line = [word];\r\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n            }\r\n        }\r\n    });\r\n}\r\n","(function() {\r\n  var slice = [].slice;\r\n\r\n  function queue(parallelism) {\r\n    var q,\r\n        tasks = [],\r\n        started = 0, // number of tasks that have been started (and perhaps finished)\r\n        active = 0, // number of tasks currently being executed (started but not finished)\r\n        remaining = 0, // number of tasks not yet finished\r\n        popping, // inside a synchronous task callback?\r\n        error = null,\r\n        await = noop,\r\n        all;\r\n\r\n    if (!parallelism) parallelism = Infinity;\r\n\r\n    function pop() {\r\n      while (popping = started < tasks.length && active < parallelism) {\r\n        var i = started++,\r\n            t = tasks[i],\r\n            a = slice.call(t, 1);\r\n        a.push(callback(i));\r\n        ++active;\r\n        t[0].apply(null, a);\r\n      }\r\n    }\r\n\r\n    function callback(i) {\r\n      return function(e, r) {\r\n        --active;\r\n        if (error != null) return;\r\n        if (e != null) {\r\n          error = e; // ignore new tasks and squelch active callbacks\r\n          started = remaining = NaN; // stop queued tasks from starting\r\n          notify();\r\n        } else {\r\n          tasks[i] = r;\r\n          if (--remaining) popping || pop();\r\n          else notify();\r\n        }\r\n      };\r\n    }\r\n\r\n    function notify() {\r\n      if (error != null) await(error);\r\n      else if (all) await(error, tasks);\r\n      else await.apply(null, [error].concat(tasks));\r\n    }\r\n\r\n    return q = {\r\n      defer: function() {\r\n        if (!error) {\r\n          tasks.push(arguments);\r\n          ++remaining;\r\n          pop();\r\n        }\r\n        return q;\r\n      },\r\n      await: function(f) {\r\n        await = f;\r\n        all = false;\r\n        if (!remaining) notify();\r\n        return q;\r\n      },\r\n      awaitAll: function(f) {\r\n        await = f;\r\n        all = true;\r\n        if (!remaining) notify();\r\n        return q;\r\n      }\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  queue.version = \"1.0.7\";\r\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\r\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\r\n  else this.queue = queue;\r\n})();\r\n","var Vis = (function(d3) {\r\n    var geojson;\r\n    queue()\r\n        .defer(d3.json, 'js/data/TOWN.geo.json')\r\n        .defer(d3.json, 'js/data/data.json')\r\n        .await(visualize);\r\n\r\n    var width = 525,\r\n        height = 325;\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([7500])\r\n        .translate([250, 350]);\r\n\r\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n    var path = d3.geo.path().projection(projection),\r\n        palette = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6]);\r\n\r\n\r\n\r\n    function visualize(error, states, data) {\r\n\r\n        var visualizationWrapper = d3.select('#multi-maps');\r\n\r\n        data.data.forEach(function(data, i) {\r\n            var wrapper = visualizationWrapper\r\n                .append('div')\r\n                .style({\r\n                    width: width + 'px',\r\n                    height: height + 'px'\r\n                });\r\n\r\n            createMap(wrapper, states, data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function createMap(wrapper, geo, data) {\r\n\r\n        wrapper.append('p')\r\n            .text(data.key)\r\n            .attr('class', 'legend');\r\n        wrapper.append('p2')\r\n            .text(\"\")\r\n            .attr('class', 'legend');\r\n\r\n        wrapper.append('y');\r\n\r\n        var $maps_sub = wrapper.append('svg')\r\n            .attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n        $maps_sub.selectAll('path')\r\n            .data(geo.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', path)\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"0.0px\")\r\n            .style('fill', function(d, i) {\r\n                var value = data.values[d.properties.TOWN];\r\n                return palette(value);\r\n            })\r\n            .on('mouseover', function(d, i) {\r\n\r\n            })\r\n            .on('mouseout', function(d, i) {\r\n\r\n            })\r\n            .attr('class', function(d) {\r\n                return d.properties.TOWN.toLowerCase()\r\n            })\r\n            .attr('id', 'bsasmap')\r\n            .on('mouseenter', function(d, i) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\r\n                // var currentState = this;\r\n                // console.log(this);\r\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('mouseleave', function(d) {\r\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\r\n\r\n            })\r\n            .on('select', function(self) {\r\n                var geoData = self.data();\r\n                var town_value\r\n\r\n                if (data.values[geoData[0].properties.TOWN] !== 'Null') {\r\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\r\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\r\n                } else {\r\n                    town_value = \"N/A\";\r\n                };\r\n\r\n                //console.log(town_value);\r\n\r\n                self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = (geoData[0].properties.TOWN + \":  \" + town_value);\r\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\r\n            })\r\n            .on('unselect', function(self) {\r\n                self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\r\n                d3.selectAll('path#bsasmap').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\r\n            })\r\n\r\n        function notify(selector, eventName) {\r\n            d3.selectAll(selector)[0].forEach(function(el, i) {\r\n                var shape = d3.select(el);\r\n                shape.on(eventName)(shape);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(colorbrewer.YlOrBr[6])\r\n    opChgScale.domainStrings = function() {\r\n        return (['0%', '>0-10%', '>10-15%', '>15-35%',\r\n            '>35-60%', '>60-100%'\r\n        ]);\r\n    };\r\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25', \r\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); }; \r\n    generateLegend_map_sub(opChgScale, 'legend_sub', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\r\n\r\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 70;\r\n\r\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A*' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        $maps_sub_legends.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        $maps_sub_legends.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 55)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        $maps_sub_legends.append(\"text\")\r\n            .attr(\"class\", \"caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    }\r\n\r\n})(d3);\r\n","/*======================================================================\r\n MultiLines \r\n ======================================================================*/\r\nvar margin = {\r\n    top: 20,\r\n    right: 20,\r\n    bottom: 50,\r\n    left: 50,\r\n};\r\n\r\nvar width = 600;\r\nvar height = 400;\r\n\r\nvar MDG = 29;\r\n\r\nvar Massachusetts = [\"MA\"];\r\nvar UnitedStates = [\"USA\"];\r\n\r\n//Set up date formatting and years\r\nvar dateFormat = d3.time.format(\"%Y\");\r\n\r\n//Set up scales\r\nvar xScale = d3.time.scale()\r\n    .range([margin.left, width - margin.right - margin.left]);\r\n\r\nvar yScale = d3.scale.sqrt()\r\n    .range([margin.top, height - margin.bottom]);\r\n\r\n//Configure axis generators\r\nvar xAxis_death = d3.svg.axis()\r\n    .scale(xScale)\r\n    .orient(\"bottom\")\r\n    .ticks(15)\r\n    .tickFormat(function(d) {\r\n        return dateFormat(d);\r\n    })\r\n    .innerTickSize([8]);\r\n\r\nvar yAxis_death = d3.svg.axis()\r\n    .scale(yScale)\r\n    .orient(\"left\")\r\n    .innerTickSize([8]);\r\n\r\n//defines a function to be used to append the title to the tooltip.  you can set how you want it to display here.\r\n//var maketip = function(d) {\r\n//    var tip = '<p class=\"tip3\">' + d.name + '<p class=\"tip1\">' + NumbType(d.value) + '</p> <p class=\"tip3\">' + formatDate(d.date) + '</p>';\r\n//    return tip;\r\n//}\r\n\r\n// add a tooltip to the page - not to the svg itself!\r\nvar tooltip_death = d3.select(\"#lines_death\")\r\n    .append(\"div\")\r\n    .attr(\"class\", \"lines-tooltip\");\r\n\r\n//Configure line \r\n// each line dataset must have a d.year and a d.rate for this to work.\r\nvar line_death = d3.svg.line()\r\n    .x(function(d) {\r\n        return xScale(dateFormat.parse(d.year));\r\n    })\r\n    .y(function(d) {\r\n        return yScale(+d.rate)\r\n    })\r\n    .defined(function(d) {\r\n        return yScale(+d.rate); });\r\n\r\n//Create the empty SVG image\r\nvar $lines_death = d3.select(\"#lines_death\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height);\r\n\r\n/*======================================================================\r\n   Creating the Multiple Lines from the Data\r\n ======================================================================*/\r\n\r\n//Load data - first is opioid mortality rates. \r\nd3.csv(\"js/data/death_states.csv\", function(data) {\r\n    var years = d3.keys(data[0]).slice(1, 65); //\r\n    //console.log(years);\r\n\r\n    //Create a new, empty array to hold our restructured dataset\r\n    var dataset = [];\r\n\r\n    //Loop once for each row in data\r\n    data.forEach(function(d, i) {\r\n\r\n        var OMRs = [];\r\n\r\n        years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n\r\n\r\n            if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n\r\n                OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                    year: y,\r\n                    rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                    Geography: d.Geography,\r\n                    FullName: d.FullName\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n            Geography: d.Geography,\r\n            FullName: d.FullName,\r\n            rates: OMRs // we just built this from the current index.\r\n        });\r\n\r\n    });\r\n    //Set scale domains - max and min of the years\r\n    xScale.domain(\r\n        d3.extent(years, function(d) {\r\n            return dateFormat.parse(d);\r\n        }));\r\n\r\n    // max of rates to 0 (reversed, remember)\r\n    yScale.domain([\r\n        d3.max(dataset, function(d) {\r\n            return d3.max(d.rates, function(d) {\r\n                return +d.rate;\r\n            });\r\n        }),\r\n        0\r\n    ]);\r\n\r\n\r\n    //Make a group for each Geography\r\n    var groups = $lines_death.selectAll(\"g.lines-death\")\r\n        .data(dataset)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"lines-death\");\r\n\r\n    //Within each group, create a new line/path,\r\n    //binding just the rates data to each one\r\n    groups.selectAll(\"path\")\r\n        .data(function(d) { // because there's a group with data already...\r\n            return [d.rates]; // it has to be an array for the line function\r\n        })\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"class\", \"line-death\")\r\n        .classed(\"massachusetts\", function(d, i) {\r\n            //console.log(d[i].Geography);\r\n            if ($.inArray(d[i].Geography, Massachusetts) != -1) {\r\n                //console.log(\"true\");\r\n                return true;\r\n            } else {\r\n                //console.log(\"false\");\r\n                return false;\r\n            }\r\n        })\r\n        .classed(\"usa\", function(d, i) {\r\n            //console.log(d[i].Geography);\r\n            if ($.inArray(d[i].Geography, UnitedStates) != -1) {\r\n                //console.log(\"true\");\r\n                return true;\r\n            } else {\r\n                //console.log(\"false\");\r\n                return false;\r\n            }\r\n        })\r\n        .attr(\"d\", line_death);\r\n\r\n\r\n    /*======================================================================\r\n      Adding the Axes\r\n    ======================================================================*/\r\n\r\n\r\n    var margin = {\r\n        top: 20,\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 50,\r\n    };\r\n\r\n    var width = 600;\r\n    var height = 400;\r\n\r\n\r\n\r\n    $lines_death.append(\"g\")\r\n        .attr(\"class\", \"x axis-death\")\r\n        // .attr(\"transform\", \"translate(0,\" + (height - margin.bottom) + \")\")\r\n        .attr(\"transform\", \"translate(0,\" + (height - margin.bottom - margin.top - margin.top) + \")\")\r\n        .call(xAxis_death)\r\n        .append(\"text\")\r\n        .attr(\"x\", width - margin.left)\r\n        .attr(\"y\", margin.bottom+10)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"class\", \"label\")\r\n        .text(\"Year\");\r\n\r\n    $lines_death.append(\"g\")\r\n        .attr(\"class\", \"y axis-death\")\r\n        // .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + (-margin.top / 2) + ')')\r\n        .call(yAxis_death)\r\n        .append(\"text\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .attr(\"x\", -margin.top)\r\n        .attr(\"y\", -margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"class\", \"label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n    /*======================================================================\r\n      MDG line\r\n    ======================================================================*/\r\n\r\n    /*svg.append(\"line\")\r\n        .attr(\"class\", \"MDG\")\r\n        .attr(\"x1\", margin.left)\r\n        .attr(\"y1\", yScale(MDG))\r\n        .attr(\"x2\", width - margin.left - margin.right + 15)\r\n        .attr(\"y2\", yScale(MDG));*/\r\n    $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", width - margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", width - margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    /*======================================================================\r\n      Mouse Functions\r\n    ======================================================================*/\r\n    d3.selectAll(\"g.lines-death\")\r\n        .on(\"mouseover\", mouseoverFunc)\r\n        .on(\"mouseout\", mouseoutFunc)\r\n        .on(\"mousemove\", mousemoveFunc);\r\n\r\n    function mouseoutFunc() {\r\n\r\n        d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n        tooltip_death.style(\"display\", \"none\"); // this sets it to invisible!\r\n    }\r\n\r\n    function mouseoverFunc(d, i) {\r\n\r\n        d3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n        d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n        tooltip_death\r\n            .style(\"display\", \"block\") // this removes the display none setting from it\r\n            .html(\"<p><span class='lines-tooltipHeader sans'>\" + d.FullName + \"</span></p>\");\r\n        //console.log(d.FullName);\r\n        // console.log(d.rates[i]);\r\n\r\n    }\r\n\r\n     var coordinates = [0, 0];\r\n\r\n    function mousemoveFunc(d) {\r\n\r\n        coordinates = d3.mouse(this);\r\n        var x = coordinates[0];\r\n        var y = coordinates[1];\r\n        \r\n\r\n        tooltip_death\r\n            .style(\"top\", y + \"px\")\r\n            .style(\"left\", x + \"px\")\r\n            .style('position', 'absolute')\r\n            .style('z-index', 1001);\r\n    }\r\n\r\n\r\n\r\n}); // end of data csv\r\n","angular.module('fentViz', []).\r\ndirective('d3LocationTrendChart', ['$parse',\r\n    function($parse) {\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                groupChartData: '='\r\n            },\r\n            link: function(scope, element, attrs) {\r\n                scope.$watch('groupChartData', function(newVal, oldVal) {\r\n                    var canvasId = scope.canvasId;\r\n                    var chartTitle = scope.chartTitle;\r\n                    var chartData = scope.groupChartData;\r\n                    var chartDataCount = chartData.length - 1;\r\n\r\n                    var monthformat = d3.time.format(\"%B\");\r\n                    var yearformat = d3.time.format(\"%Y\");\r\n\r\n                    var quarter = function(date, i) {\r\n                        var i = 0\r\n                        if (i >= 0) {\r\n                            var date2 = new Date();\r\n                            date2.setMonth(date.getMonth() - 10);\r\n                            q = Math.ceil((date2.getMonth()) / 3);\r\n                            return \"Q\" + q;\r\n                        }\r\n                    }\r\n\r\n                    var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\r\n                    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"1.5px\"];\r\n                    var seriesLineDash = [\"2,2,2,2\", \"0,0,0,0\", \"0,0,0,0\", \"1,1,1,1\"]\r\n                    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\r\n                    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\r\n                    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\r\n                    var xLabel = \"date\";\r\n\r\n                    var margin = {\r\n                        top: 30,\r\n                        right: 200,\r\n                        bottom: 50,\r\n                        left: 42\r\n                    };\r\n\r\n                    var width = 300;\r\n                    var height = 550;\r\n\r\n                    var canvasWidth = d3.select(element[0]).attr(\"width\");\r\n                    var canvasHeight = d3.select(element[0]).attr(\"height\");\r\n                    var width = canvasWidth - margin.left - margin.right;\r\n                    var height = canvasHeight - margin.top - margin.bottom;\r\n                    var yearformat = d3.time.format(\"%Y\");\r\n\r\n                    var parseDate = d3.time.format(\"%Y%m%d\").parse;\r\n\r\n                    var bisectDate = d3.bisector(function(d) {\r\n                        return d.date;\r\n                    }).left;\r\n\r\n                    var end = parseDate(\"20160101\");\r\n\r\n                    var x = d3.scale.ordinal().rangePoints([0, width]);\r\n                    var x2 = d3.scale.ordinal().rangePoints([0, width]);\r\n\r\n                    //var x = d3.time.scale()\r\n                    //         .domain([chartData[0].date, chartData[chartDataCount].date])\r\n                    //    .range([0, 91]);\r\n\r\n                    //var x2 = d3.time.scale()\r\n                    //         .domain([chartData[0].date, chartData[chartDataCount].date])\r\n                    //    .range([0, 91]);\r\n\r\n                    var y = d3.scale.linear()\r\n                        .range([height, 0]);\r\n\r\n                    var color = d3.scale.ordinal()\r\n                        .range(seriesColors);\r\n\r\n                    var lineStroke = d3.scale.ordinal()\r\n                        .range(seriesLineStrokes);\r\n\r\n                    var lineDash = d3.scale.ordinal()\r\n                        .range(seriesLineDash);\r\n\r\n                    var pointShape = d3.scale.ordinal()\r\n                        .range(seriesPointShapes);\r\n\r\n                    var pointWidth = d3.scale.ordinal()\r\n                        .range(seriesPointWidth);\r\n\r\n                    var pointFill = d3.scale.ordinal()\r\n                        .range(seriesPointFill);\r\n\r\n                    var xAxis_fent = d3.svg.axis()\r\n                        .scale(x)\r\n                        .orient(\"bottom\")\r\n                        .ticks(d3.time.months, 3)\r\n                        //.tickSize(5, 0)\r\n                        .tickFormat(quarter);\r\n\r\n\r\n                    var xAxis2_fent = d3.svg.axis()\r\n                        .scale(x)\r\n                        .ticks(d3.time.years, 1)\r\n                        .tickFormat(yearformat)\r\n                        .tickSize(3, 0)\r\n                        .tickPadding(1)\r\n                        .orient(\"bottom\");\r\n\r\n                    //percentage formatiing\r\n                    var formatPercent = d3.format(\".0%\");\r\n\r\n                    var yAxis_fent = d3.svg.axis()\r\n                        .scale(y)\r\n                        .orient(\"left\")\r\n                        .tickFormat(formatPercent)\r\n                        .ticks(5)\r\n                        .tickSize(3, 0)\r\n                        .tickPadding(1);\r\n\r\n                    //create tooltipFent\r\n\r\n                    // add a tooltipFent to the page - not to the svg itself!\r\n                    var tooltipFent = d3.select(\"body\")\r\n                        .append(\"div\")\r\n                        .attr(\"class\", \"tooltipFent\");\r\n\r\n                    var line = d3.svg.line()\r\n                        //.interpolate(\"monotone\")\r\n                        .x(function(d) {\r\n                            return x(d.label);\r\n                        })\r\n                        .y(function(d) {\r\n                            return y(d.value);\r\n                        });\r\n\r\n\r\n                    var $lines_fent = d3.select(element[0]).append(\"svg\")\r\n                        .attr(\"width\", width + margin.left + margin.right)\r\n                        .attr(\"height\", height + margin.top + margin.bottom)\r\n                        .append(\"g\")\r\n                        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                    /*  var benchMark = svg.append(\"rect\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"fill\", \"#C2EBC9\")\r\n                    .attr(\"height\", 120);\r\n\r\n                var threshold = svg.append(\"rect\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", 120)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"fill\", \"#FFE97F\")\r\n                    .attr(\"height\", 50);\r\n        */\r\n                    var varSeries = d3.keys(chartData[0]).filter(function(key) {\r\n                        return key !== xLabel;\r\n                    });\r\n\r\n                    color.domain(varSeries);\r\n                    lineStroke.domain(varSeries);\r\n                    lineDash.domain(varSeries);\r\n                    pointShape.domain(varSeries);\r\n                    pointWidth.domain(varSeries);\r\n                    pointFill.domain(varSeries);\r\n\r\n                    var seriesData = varSeries.map(function(name) {\r\n                        return {\r\n                            name: name,\r\n                            values: chartData.map(function(d) {\r\n                                return {\r\n                                    name: name,\r\n                                    label: d[xLabel],\r\n                                    value: +d[name]\r\n                                };\r\n                            })\r\n                        };\r\n                    });\r\n\r\n\r\n                    x.domain(chartData.map(function(d) {\r\n                        return d.date;\r\n                    }));\r\n\r\n                    x2.domain(chartData.map(function(d) {\r\n                        return d.date;\r\n                    }));\r\n\r\n                    y.domain([\r\n                        d3.min(seriesData, function(c) {\r\n                            return d3.min(c.values, function(d) {\r\n                                //return d.value;\r\n                                return 0;\r\n                            });\r\n                        }),\r\n                        d3.max(seriesData, function(c) {\r\n                            return d3.max(c.values, function(d) {\r\n                                return d.value;\r\n                            });\r\n                        })\r\n                    ]);\r\n\r\n                    $lines_fent.append(\"g\")\r\n                        .attr(\"class\", \"x axis_fent\")\r\n                        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                        .call(xAxis_fent)\r\n                        .append(\"path\")\r\n                        .attr(\"class\", \"line\")\r\n                        .style(\"stroke-width\", \"1.5px\")\r\n                        .call(xAxis_fent);\r\n\r\n                    $lines_fent.append(\"g\")\r\n                        .attr(\"class\", \"x axis2_fent\")\r\n                        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\r\n                        .call(xAxis2_fent)\r\n                        .append(\"text\")\r\n                        .attr(\"x\", width - margin.left)\r\n                        .attr(\"y\", margin.bottom - 32)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"end\")\r\n                        .attr(\"class\", \"label\")\r\n                        .text(\"Quarter\");\r\n\r\n                    //         svg.append(\"g\")\r\n                    // .attr(\"class\", \"x axis\").append(\"path\")\r\n                    //          .attr(\"class\",\"line\")\r\n\r\n                    $lines_fent.append(\"g\")\r\n                        .attr(\"class\", \"y axis_fent\")\r\n                        .call(yAxis_fent)\r\n                        .append(\"text\")\r\n                        .attr(\"transform\", \"rotate(-90)\")\r\n                        .attr(\"x\", 0)\r\n                        .attr(\"y\", -44)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"end\")\r\n                        .style(\"font\",\"10px sans-serif\")\r\n                        .style(\"font-weight\", \"normal\")\r\n                        //.attr(\"class\", \"label\")\r\n                        .text(\"Percent Opioid Deaths\");\r\n\r\n                    var series = $lines_fent.selectAll(\".series\")\r\n                        .data(seriesData)\r\n                        .enter().append(\"g\")\r\n                        .attr(\"class\", \"seriesData\");\r\n\r\n                    //console.log(series);\r\n\r\n                    series.append(\"path\")\r\n                        .attr(\"class\", \"line\")\r\n                        .attr(\"d\", function(d) {\r\n                            return line(d.values);\r\n                        })\r\n                        .style(\"stroke\", function(d) {\r\n                            return color(d.name);\r\n                        })\r\n                        .style(\"stroke-width\", function(d) {\r\n                            return lineStroke(d.name);\r\n                        })\r\n                        .style(\"stroke-dasharray\", function(d) {\r\n                            return lineDash(d.name);\r\n                        })\r\n                        .style(\"fill\", \"none\");\r\n\r\n\r\n\r\n                    $lines_fent.append(\"text\")\r\n                        .attr(\"class\", \"aside-note\")\r\n                        .attr(\"x\", width + 5)\r\n                        .attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"start\")\r\n                        .text(\"Fentanyl & Heroin\")\r\n                        .style(\"fill\", \"$color-white\")\r\n                        .style(\"font-weight\", \"normal\");\r\n\r\n                    $lines_fent.append(\"text\")\r\n                        .attr(\"class\", \"aside-note\")\r\n                        .attr(\"x\", width + 5)\r\n                        .attr(\"y\", y(chartData[8].Methadone) - 7)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"start\")\r\n                        .text(\"Methadone\")\r\n                        .style(\"fill\", \"$color-white\")\r\n                        .style(\"font-weight\", \"normal\");\r\n\r\n                    $lines_fent.append(\"text\")\r\n                        .attr(\"class\", \"aside-note\")\r\n                        .attr(\"x\", width + 5)\r\n                        .attr(\"y\", y(chartData[8].Heroin) - 10)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"start\")\r\n                        .text(\"Heroin\")\r\n                    //.style(\"fill\", \"#08519c\")\r\n                    .style(\"fill\", \"#fff\")\r\n                        .style(\"font-size\", \"13px\")\r\n                    // .style(\"font-weight\", \"bold\");\r\n\r\n                    $lines_fent.append(\"text\")\r\n                        .attr(\"class\", \"aside-note\")\r\n                        .attr(\"x\", width + 5)\r\n                        .attr(\"y\", y(chartData[8].Fentanyl) - 10)\r\n                        .attr(\"dy\", \"1em\")\r\n                        .style(\"text-anchor\", \"start\")\r\n                        .text(\"Fentanyl\")\r\n                        .style(\"font-size\", \"13px\")\r\n                    //.style(\"fill\", \"#f44336\")\r\n                    .style(\"fill\", \"#fff\")\r\n                    // .style(\"font-weight\", \"bold\");\r\n\r\n\r\n\r\n                    //add point to line\r\n                    // series.selectAll(\".point\")\r\n                    //     .data(function(d) {\r\n                    //         return d.values;\r\n                    //         console.log(d.values);\r\n                    //     })\r\n                    //     .enter().append(\"path\")\r\n                    //     .attr(\"transform\", function(d) {\r\n                    //         return \"translate(\" + x(d.label) + \",\" + y(d.value) + \")\";\r\n                    //     })\r\n                    //     .attr(\"d\", d3.svg.symbol().type(\"circle\").size(15))\r\n                    //  .attr(\"class\", \"point\")\r\n                    //     .style(\"fill\", function(d) {\r\n                    //         return pointFill(d.name);\r\n                    //     })\r\n                    //     .style(\"stroke\", function(d) {\r\n                    //         return color(d.name);\r\n                    //     })\r\n                    //     .style(\"stroke-width\", function(d) {\r\n                    //         return lineStroke(d.name);\r\n                    //     });\r\n\r\n                    /*======================================================================\r\n                 Mouse Functions\r\n                ======================================================================*/\r\n                    var focus = $lines_fent.append(\"g\")\r\n                        .attr(\"class\", \"focus\")\r\n                        .style(\"display\", \"none\");\r\n\r\n                    focus.append(\"circle\")\r\n                        .attr(\"r\", 6)\r\n                        .style(\"stroke-width\", 1);\r\n                    //.transition()\r\n                    //.duration(500)\r\n                    //.attr(\"r\", 50)\r\n                    //.transition(500)\r\n                    //.attr(\"r\",500);\r\n\r\n                    d3.selectAll(\"g.seriesData\")\r\n                        .on(\"mouseover\", mouseoverFunc)\r\n                        .on(\"mouseout\", mouseoutFunc)\r\n                        .on(\"mousemove\", mousemoveFunc);\r\n\r\n                    function mouseoutFunc() {\r\n\r\n                        d3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n                        d3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\r\n                        tooltipFent.style(\"display\", \"none\"); // this sets it to invisible!\r\n                        focus.style(\"display\", \"none\");\r\n                    }\r\n\r\n                    function mouseoverFunc(d, i) {\r\n\r\n                        d3.selectAll(\"path.line\").classed(\"unfocused\", true);\r\n                        d3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\r\n                        // below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\r\n                        //         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\r\n                        //             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\r\n                        //         }\r\n\r\n                        d3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n                        //d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\r\n                        var x0 = d3.mouse(this)[0];\r\n                        var y0 = d3.mouse(this)[1]\r\n                        var y1 = y.invert(y0);\r\n                        var percentVal = d3.format(\".0%\")(y1)\r\n                        \r\n                        tooltipFent\r\n                            .style(\"display\", null) // this removes the display none setting from it\r\n                        .html(\r\n                            \"<p><span class='tooltipFentHeader sans'>\" + percentVal + \"</span></p>\"\r\n                        );\r\n                        //console.log(d.rates[i]);\r\n                        //console.log(d3.select(this).select(\"path.point\"));\r\n                        focus.style(\"display\", null);\r\n                    }\r\n\r\n                    function mousemoveFunc(d) {\r\n\r\n\r\n\r\n                        //console.log(\"events\", window.event, d3.event);\r\n                        var x0 = d3.mouse(this)[0];\r\n                        var y0 = d3.mouse(this)[1]\r\n                        var y1 = y.invert(y0);\r\n                        var percentVal = d3.format(\".0%\")(y1);\r\n\r\n                        focus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\r\n\r\n\r\n\r\n                        tooltipFent\r\n                            .style(\"top\", (d3.event.pageY - 45) + \"px\")\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .html(\r\n                                \"<p><span class='tooltipFentHeader sans'>\" + percentVal + \"</span></p>\"\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n])\r\n    .controller('Ctrl', ['$scope',\r\n        function($scope) {\r\n            //var date = new Date(2014, 7, 1);\r\n            var date = new Date(\"01/01/2014\");\r\n            //var date2 = new Date(2014, 10, 1);\r\n            var date2 = new Date(\"04/01/2014\");\r\n            //var date3 = new Date(2015, 1, 1);\r\n            var date3 = new Date(\"07/01/2014\");\r\n            //var date4 = new Date(2015, 4, 1);\r\n            var date4 = new Date(\"10/01/2014\");\r\n            //var date5 = new Date\r\n            var date5 = new Date(\"01/01/2015\");\r\n            //var date6 = new Date(2014, 10, 1);\r\n            var date6 = new Date(\"04/01/2015\");\r\n            //var date7 = new Date(2015, 1, 1);\r\n            var date7 = new Date(\"07/01/2015\");\r\n            //var date8 = new Date(2015, 4, 1);\r\n            var date8 = new Date(\"10/01/2015\");\r\n            //var date = new Date(2014, 7, 1);\r\n            var date9 = new Date(\"01/01/2016\");\r\n\r\n            //alert(date);\r\n            var chartData = [{\r\n                \"date\": date,\r\n                \"FentanylHeroin\": \"0.19\",\r\n                \"Fentanyl\": \"0.22\",\r\n                \"Heroin\": \"0.41\",\r\n                \"Methadone\": \"0.10\"\r\n            }, {\r\n                \"date\": date2,\r\n                \"FentanylHeroin\": \"0.18\",\r\n                \"Fentanyl\": \"0.19\",\r\n                \"Heroin\": \"0.49\",\r\n                \"Methadone\": \"0.07\"\r\n            }, {\r\n                \"date\": date3,\r\n                \"FentanylHeroin\": \"0.14\",\r\n                \"Fentanyl\": \"0.14\",\r\n                \"Heroin\": \"0.53\",\r\n                \"Methadone\": \"0.10\"\r\n            }, {\r\n                \"date\": date4,\r\n                \"FentanylHeroin\": \"0.22\",\r\n                \"Fentanyl\": \"0.27\",\r\n                \"Heroin\": \"0.35\",\r\n                \"Methadone\": \"0.06\"\r\n            }, {\r\n                \"date\": date5,\r\n                \"FentanylHeroin\": \"0.19\",\r\n                \"Fentanyl\": \"0.40\",\r\n                \"Heroin\": \"0.30\",\r\n                \"Methadone\": \"0.04\"\r\n            }, {\r\n                \"date\": date6,\r\n                \"FentanylHeroin\": \"0.24\",\r\n                \"Fentanyl\": \"0.38\",\r\n                \"Heroin\": \"0.29\",\r\n                \"Methadone\": \"0.05\"\r\n            }, {\r\n                \"date\": date7,\r\n                \"FentanylHeroin\": \"0.19\",\r\n                \"Fentanyl\": \"0.40\",\r\n                \"Heroin\": \"0.30\",\r\n                \"Methadone\": \"0.06\"\r\n            }, {\r\n                \"date\": date8,\r\n                \"FentanylHeroin\": \"0.22\",\r\n                \"Fentanyl\": \"0.43\",\r\n                \"Heroin\": \"0.24\",\r\n                \"Methadone\": \"0.05\"\r\n            }, {\r\n                \"date\": date9,\r\n                \"FentanylHeroin\": \"0.15\",\r\n                \"Fentanyl\": \"0.50\",\r\n                \"Heroin\": \"0.17\",\r\n                \"Methadone\": \"0.04\"\r\n            }];\r\n\r\n            $scope.myData = chartData;\r\n        }\r\n    ]);","$(document).ready(function() {\r\n\r\n    var prescription = [{\r\n        \"Yes\": 83,\r\n        \"No\": 17\r\n    }, {\r\n        \"Yes\": 57,\r\n        \"No\": 43\r\n    }, {\r\n        \"Yes\": 50,\r\n        \"No\": 50\r\n    }, {\r\n        \"Yes\": 37,\r\n        \"No\": 63\r\n    }];\r\n\r\n    var heroin = [{\r\n        \"Yes\": 65,\r\n        \"No\": 35\r\n    }, {\r\n        \"Yes\": 28,\r\n        \"No\": 72\r\n    }, {\r\n        \"Yes\": 20,\r\n        \"No\": 80\r\n    }, {\r\n        \"Yes\": 13,\r\n        \"No\": 87\r\n    }];\r\n\r\n    var fentanyl = [{\r\n        \"Yes\": 68,\r\n        \"No\": 32\r\n    }, {\r\n        \"Yes\": 30,\r\n        \"No\": 70\r\n    }, {\r\n        \"Yes\": 22,\r\n        \"No\": 78\r\n    }, {\r\n        \"Yes\": 17,\r\n        \"No\": 83\r\n    }];\r\n\r\n    var both = [{\r\n        \"Yes\": 64,\r\n        \"No\": 36\r\n    }, {\r\n        \"Yes\": 24,\r\n        \"No\": 76\r\n    }, {\r\n        \"Yes\": 15,\r\n        \"No\": 85\r\n    }, {\r\n        \"Yes\": 9,\r\n        \"No\": 91\r\n    }];\r\n\r\n    var methadone = [{\r\n        \"Yes\": 76,\r\n        \"No\": 24\r\n    }, {\r\n        \"Yes\": 46,\r\n        \"No\": 54\r\n    }, {\r\n        \"Yes\": 41,\r\n        \"No\": 59\r\n    }, {\r\n        \"Yes\": 27,\r\n        \"No\": 73\r\n    }];\r\n\r\n    var buprenorphine = [{\r\n        \"Yes\": 60,\r\n        \"No\": 40\r\n    }, {\r\n        \"Yes\": 60,\r\n        \"No\": 40\r\n    }, {\r\n        \"Yes\": 60,\r\n        \"No\": 40\r\n    }, {\r\n        \"Yes\": 60,\r\n        \"No\": 40\r\n    }];\r\n\r\n\r\n\r\n\r\n    var data_substance = prescription;\r\n    var time = 0;\r\n    asignVal_substance(data_substance, time);\r\n    $(\"#studyperiod\").addClass(\"active\");\r\n\r\n    // $(\"#options_substance\").on('input change', function() {\r\n    //     data_substance = eval(($(\"#options_substance option:selected\").val()));\r\n    //     asignVal_substance(data_substance, time);\r\n    // });\r\n\r\n\r\n    $(\".btn-time\").on('click', function() {\r\n        $('.btn-time').removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        time = parseInt($(this).val());\r\n        asignVal_substance(data_substance, time);\r\n        var time_period;\r\n        switch (time) {\r\n            case 0:\r\n                time_period = \"During the Study Period\";\r\n                break;\r\n            case 1:\r\n                time_period = \"6 Months Before Death\";\r\n                break;\r\n            case 2:\r\n                time_period = \"3 Months Before Death\";\r\n                break;\r\n            case 3:\r\n                time_period = \"1 Month Before Death\";\r\n                break;\r\n        }\r\n        $(\"#time-perioid\").html(time_period.toLowerCase());\r\n        $(\"#label_blocks\").html(time_period);\r\n    });\r\n\r\n\r\n    function asignVal_substance(type, time) {\r\n        $(\"#people\").empty();\r\n        $('#people').each(function() {\r\n            makeChart_substance(type, time);\r\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Present</th><th>Not Present</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\r\n        })\r\n\r\n    };\r\n\r\n\r\n\r\n    function makeChart_substance(data_substance, i) {\r\n        var blockArray_substance = [];\r\n        var noOfBlocks_No = Math.round(data_substance[i].No);\r\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\r\n        var blocksAdded = 0;\r\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\r\n        addBlock_substance(\"#people\", blockArray_substance, 0);\r\n    }\r\n\r\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\r\n        for (b = 0; b < noOfBlocks_No; b++) {\r\n            blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\r\n        };\r\n        for (b = 0; b < noOfBlocks_Yes; b++) {\r\n            $(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\r\n        };\r\n        return blockArray_substance;\r\n\r\n    }\r\n\r\n    function addBlock_substance(id, blockArray_substance, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray_substance[i]);\r\n            i++;\r\n            addBlock_substance(id, blockArray_substance, i);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////\r\n    //PIE CHART\r\n    ///////////////////////\r\n\r\n    var margin = {\r\n        top: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n        right: 0\r\n    };\r\n    var width = 550 - margin.left - margin.right,\r\n        height = 300 - margin.top - margin.bottom;\r\n\r\n    var labelsWidth = width * 0.4;\r\n    var labelWidth = labelsWidth * 0.1;\r\n    var labelHeight = labelWidth * 0.6;\r\n\r\n    var animateDuration = 300;\r\n    var outerRadius = width - labelsWidth < height ? (width - labelsWidth) / 2 : height / 2;\r\n    var innerRadius = outerRadius * 0.5; // 40%\r\n\r\n    var arc = d3.svg.arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius);\r\n\r\n    var pie = d3.layout\r\n        .pie()\r\n        .sort(null)\r\n        .value(getValue)\r\n        .startAngle(1.1 * Math.PI)\r\n        .endAngle(3.1 * Math.PI);\r\n\r\n    var explodedIndex;\r\n    var color = d3.scale.ordinal()\r\n        .range([\"#b71c1c\", \"#d32f2f\", \"#f44336\", \"#ef5350\", \"#e57373\", \"#ef9a9a\"]);\r\n\r\n    var $pie_substance = d3.select('#piechart')\r\n        .attr({\r\n            width: width + margin.left + margin.right,\r\n            height: height + margin.top + margin.bottom\r\n        })\r\n        .append('g')\r\n        .attr({\r\n            class: 'labels',\r\n            transform: 'translate(' + (width - (labelsWidth + margin.right)) + ', ' + margin.top + ')'\r\n        })\r\n        .select(getParent)\r\n        .append('g')\r\n        .attr({\r\n            class: 'pie',\r\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (height / 2 + margin.top) + ')'\r\n        })\r\n        .select(getParent)\r\n        .append('g')\r\n        .attr({\r\n            class: 'main-legend',\r\n            transform: 'translate(' + (outerRadius + margin.left) + ', ' + (outerRadius + margin.top) + ')'\r\n        })\r\n        .select(getParent);\r\n\r\n    $pie_substance.select('.main-legend')\r\n        .append('circle')\r\n        .attr({\r\n            class: 'border',\r\n            opacity: 0,\r\n            stroke: 'rgba(255,255,255,1)',\r\n            fill: 'rgba(0,0,0,0)',\r\n            r: innerRadius * 0.9\r\n        })\r\n        .select(getParent)\r\n        .append('circle')\r\n        .attr({\r\n            class: 'circle',\r\n            opacity: 0,\r\n            fill: 'rgba(255,255,255,1)',\r\n            r: innerRadius * 0.9\r\n        })\r\n        .select(getParent)\r\n        .append('line')\r\n        .attr({\r\n            opacity: 0,\r\n            stroke: 'rgba(255,255,255,1)',\r\n            x1: 0,\r\n            y1: 0,\r\n            x2: 0,\r\n            y2: 0\r\n        })\r\n        .select(getParent)\r\n        .append('text')\r\n        .attr({\r\n            class: 'legend-title',\r\n            'font-size': '18px',\r\n            y: -1 * innerRadius * 0.13,\r\n            'font-family': 'Arial',\r\n            'text-anchor': 'middle',\r\n            'alignment-baseline': 'middle',\r\n            fill: '#fff'\r\n        })\r\n\r\n    .select(getParent)\r\n        .append('text')\r\n        .attr({\r\n            class: 'description',\r\n            'font-size': '14px',\r\n            y: innerRadius * 0.13,\r\n            'font-family': 'Arial',\r\n            'text-anchor': 'middle',\r\n            'alignment-baseline': 'middle',\r\n            fill: '#fff'\r\n        });\r\n\r\n    function getParent() {\r\n        return this.parentNode;\r\n    }\r\n\r\n    function getValue(d) {\r\n        return d.value;\r\n    }\r\n\r\n\r\n    function getSum(data) {\r\n        var _sum = 0;\r\n        data.forEach(function addValue(item) {\r\n            _sum += item.value;\r\n        });\r\n        return _sum;\r\n    }\r\n\r\n    function arcTween(d) {\r\n        var i;\r\n\r\n        function toArc(t) {\r\n            return arc(i(t));\r\n        }\r\n\r\n        function toEndAngle(t) {\r\n            d.endAngle = i(t);\r\n            return arc(d);\r\n        }\r\n\r\n        if ('undefined' === typeof this._current) {\r\n            i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\r\n            this._current = d;\r\n            return toEndAngle;\r\n        }\r\n        i = d3.interpolate(this._current, d);\r\n        this._current = i(0);\r\n        return toArc;\r\n    }\r\n\r\n    function labelAnimation(d) {\r\n        return 'translate (' + arc.centroid(d) + ')';\r\n    }\r\n\r\n    function fill(d, i) {\r\n        return color(i);\r\n    }\r\n\r\n    function selectArcAnimation(_d) {\r\n        var dist = outerRadius * 0.05;\r\n        _d.midAngle = ((_d.endAngle - _d.startAngle) / 2) + _d.startAngle;\r\n        var x = Math.sin(_d.midAngle) * dist;\r\n        var y = -Math.cos(_d.midAngle) * dist;\r\n        return 'translate(' + x + ',' + y + ')';\r\n    }\r\n\r\n    function updatePie(data) {\r\n        var sum = getSum(data);\r\n        data = pie(data);\r\n        var arcs = $pie_substance.select('.pie')\r\n            .selectAll('.arc')\r\n            .data(data);\r\n\r\n        var isDelay = arcs.selectAll('path').length;\r\n        var _duration = isDelay ? animateDuration : animateDuration / 2;\r\n\r\n        function getPercent(d) {\r\n            return ((d.value / sum) * 100).toFixed(1) + '%';\r\n        }\r\n\r\n        function getLegend(d) {\r\n            return d.data.name + ' Present | ' + d.data.value;\r\n        }\r\n\r\n        function liveLarge(d) {\r\n            var angle = 360 * (d.value / sum);\r\n            var arcLength = (Math.PI * (outerRadius / 2) * angle) / 180;\r\n            return arcLength > Math.PI * outerRadius * 0.01;\r\n        }\r\n\r\n        function onMouseIn(d, i) {\r\n            explodedIndex = i;\r\n            onClick(d, i);\r\n\r\n            function onClick(d, i) {\r\n\r\n                console.log(d.data.option);\r\n                $('.substance-type').html(d.data.description);\r\n                $('#total').html(d.data.value);\r\n                if (d.data.option == \"buprenorphine\") {\r\n                    $('#timeline_blocks').attr('max', 0);\r\n                } else {\r\n                    $('#timeline_blocks').attr('max', 3);\r\n                };\r\n                data_substance = eval(d.data.option);\r\n                asignVal_substance(data_substance, time);\r\n            };\r\n\r\n\r\n            var label = $pie_substance.selectAll('.legend')\r\n                .filter(function(_d, _i) {\r\n                    return i === _i;\r\n                });\r\n            if (!label.attr('data-exit')) {\r\n                label.transition()\r\n                    .duration(animateDuration / 2)\r\n                    .attr({\r\n                        opacity: 1,\r\n                        transform: 'translate(10, ' + ((labelHeight + 5) * i) + ')'\r\n                    });\r\n            }\r\n\r\n\r\n            $pie_substance.selectAll('.arc')\r\n                .filter(function(_d, _i) {\r\n                    return i === _i;\r\n                })\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr('transform', selectArcAnimation);\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('.border')\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    opacity: 1,\r\n                    stroke: fill(null, i)\r\n                });\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('.circle')\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    opacity: 1,\r\n                    fill: fill(null, i)\r\n                });\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('line')\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    opacity: 1,\r\n                    stroke: fill(null, i),\r\n                    x1: Math.sin(d.midAngle) * (innerRadius * 0.7),\r\n                    y1: -Math.cos(d.midAngle) * (innerRadius * 0.7),\r\n                    x2: Math.sin(d.midAngle) * innerRadius,\r\n                    y2: -Math.cos(d.midAngle) * innerRadius\r\n                });\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('.legend-title')\r\n                .text(d.data.name)\r\n                // .append(d.data.name[1])\r\n                .select(getParent)\r\n                .select('.description')\r\n                .text(d.data.value)\r\n        }\r\n\r\n        function onMouseOut(d, i) {\r\n            $pie_substance.select('.main-legend')\r\n                .selectAll(['.circle', '.border'])\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    opacity: 0\r\n                });\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('line')\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    opacity: 0\r\n                });\r\n\r\n            $pie_substance.select('.main-legend')\r\n                .select('.legend-title')\r\n                .text('')\r\n                .select(getParent)\r\n                .select('.description')\r\n                .text('');\r\n\r\n            if ('undefined' === typeof i) {\r\n                return;\r\n            }\r\n            var label = $pie_substance.selectAll('.legend')\r\n                .filter(function(_d, _i) {\r\n                    return i === _i;\r\n                });\r\n\r\n            if (!label.attr('data-exit')) {\r\n                label.transition()\r\n                    .duration(animateDuration / 2)\r\n                    .attr({\r\n                        opacity: 1,\r\n                        transform: 'translate(0, ' + ((labelHeight + 5) * i) + ')'\r\n                    });\r\n            }\r\n\r\n            $pie_substance.selectAll('.arc')\r\n                .filter(function(_d, _i) {\r\n                    return i === _i;\r\n                })\r\n                .transition()\r\n                .duration(animateDuration / 2)\r\n                .attr({\r\n                    transform: 'translate(0,0)'\r\n                });\r\n        }\r\n\r\n        onMouseOut();\r\n        // update Pie\r\n\r\n        arcs.enter()\r\n            .append('g')\r\n            .attr('class', 'arc')\r\n\r\n        .on('click', function(d, i) {\r\n                // onMouseOut.call($(this).parent(), d, i);\r\n                // console.log($(this));\r\n                if (explodedIndex >= 0) {\r\n                    onMouseOut(null, explodedIndex);\r\n                }\r\n                onMouseIn(d, i);\r\n            })\r\n            //.on('mouseout', onMouseOut)\r\n            // .on('mouseout', onMouseOut)\r\n            .append('path')\r\n            .attr({\r\n                fill: fill\r\n            })\r\n            .attr(\"d\", arc).style('stroke', 'white')\r\n            .style('stroke-width', 2)\r\n            .select(getParent)\r\n            .filter(liveLarge)\r\n            .append('text')\r\n            .attr({\r\n                'font-family': 'Arial',\r\n                'font-size': '14px',\r\n                fill: '#fff',\r\n                'text-anchor': 'middle'\r\n            });\r\n\r\n\r\n        arcs.select('path')\r\n            .transition()\r\n            .delay(function delayFn(d, i) {\r\n                return isDelay ? 0 : _duration * i;\r\n            })\r\n            .duration(_duration)\r\n            .attrTween('d', arcTween);\r\n\r\n        arcs.select('text')\r\n            .text(getPercent)\r\n            .transition()\r\n            .duration(animateDuration)\r\n            .attr({\r\n                class: 'label-content',\r\n                transform: labelAnimation\r\n            });\r\n\r\n        arcs.exit()\r\n            .on('mouseenter', null)\r\n            .on('mouseout', null)\r\n            .remove();\r\n\r\n        // Update Legends\r\n\r\n        var legends = $pie_substance\r\n            .select('.labels')\r\n            .selectAll('.legend')\r\n            .data(data);\r\n\r\n        legends.enter()\r\n            .append('g')\r\n            .on('click', function(d, i) {\r\n                // onMouseOut.call($(this).parent(), d, i);\r\n                // console.log($(this));\r\n                if (explodedIndex >= 0) {\r\n                    onMouseOut(null, explodedIndex);\r\n                }\r\n                onMouseIn(d, i);\r\n            })\r\n            .attr('class', 'legend')\r\n            .append('rect')\r\n            .attr({\r\n                width: labelWidth,\r\n                height: labelHeight,\r\n                fill: fill\r\n            })\r\n            .select(getParent)\r\n            .append('text')\r\n            .attr({\r\n                'font-size': '14px',\r\n                'font-family': 'Arial',\r\n                fill: '#666',\r\n                x: labelWidth + 5,\r\n                y: labelHeight / 2 + 5\r\n            })\r\n            .select(getParent)\r\n            .attr({\r\n                opacity: 0,\r\n                transform: function(d, i) {\r\n                    return 'translate(15, ' + ((labelHeight + 5) * i) + ')';\r\n                }\r\n            })\r\n            .transition()\r\n            .duration(animateDuration)\r\n            .attr({\r\n                opacity: 1,\r\n                transform: function(d, i) {\r\n                    return 'translate(0, ' + ((labelHeight + 5) * i) + ')';\r\n                }\r\n            });\r\n\r\n        legends.exit()\r\n            .on('mouseenter', null)\r\n            .on('mouseout', null)\r\n            .attr('data-exit', true)\r\n            .transition()\r\n            .duration(animateDuration / 2)\r\n            .attr({\r\n                opacity: 0,\r\n                transform: function(d, i) {\r\n                    return 'translate(-15, ' + ((labelHeight + 5) * i) + ')';\r\n                }\r\n            })\r\n            .remove();\r\n\r\n\r\n\r\n        legends.select('text').html(getLegend);\r\n\r\n    }\r\n\r\n    var data_pie = [\r\n        { name: 'Heroin', value: 867, option: 'heroin', description: 'heroin' },\r\n        { name: 'Fentanyl', value: 288, option: 'fentanyl', description: 'fentanyl' },\r\n        { name: 'Fentanyl & Heroin', value: 249, option: 'both', description: 'both fentanyl and heroin' },\r\n        { name: 'Prescription Opioid', value: 154, option: 'prescription', description: 'prescription opioid' },\r\n        { name: 'Methadone', value: 84, option: 'methadone', description: 'methadone' },\r\n        { name: 'Buprenorphine', value: 15, option: 'buprenorphine', description: 'buprenorphine' },\r\n    ];\r\n\r\n    generatePie(data_pie);\r\n\r\n\r\n    function generatePie(data) {\r\n        updatePie(data);\r\n    }\r\n\r\n\r\n\r\n})\r\n","$(document).ready(function() {\r\n\r\n    var prescription = [\r\n        [0, 0],\r\n        [\"No\", 58],\r\n        [\"Yes\", 13],\r\n        [\"Yes\", 8],\r\n        [\"No\", 21],\r\n        [0, 0]\r\n    ];\r\n    var heroin = [\r\n        [0, 0],\r\n        [\"No\", 22],\r\n        [\"Yes\", 49],\r\n        [\"Yes\", 17],\r\n        [\"No\", 12],\r\n        [0, 0]\r\n    ];\r\n\r\n    var multi = [\r\n        [\"1\", 15],\r\n        [\"2\", 31],\r\n        [\"3\", 25],\r\n        [\"3\", 18],\r\n        [\"2\", 9],\r\n        [\"1\", 2]\r\n    ];\r\n\r\n\r\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\r\n    // console.log(person);\r\n    var table_html = [\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender1\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender4\">' + prescription[4][1] + '%</td></tr></table>',\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender1\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender4\">' + heroin[4][1] + '%</td></tr></table>',\r\n        '<table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\r\n    ];\r\n\r\n\r\n    var data_gender = prescription;\r\n\r\n\r\n    //Set initial values\r\n    makeChart_gender(prescription);\r\n    $('#table_gender').html(table_html[0]);\r\n    $(\"#prescription\").addClass(\"active\");\r\n\r\n    //Link text controls\r\n    $('.controls-block').click(function() {\r\n        var $option = $(this).data('select');\r\n        var $value = eval($(this).val());\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n    //Link button controls\r\n    $('.btn-blocks').click(function() {\r\n        var $option = $(this).attr('id');\r\n        var $value = eval($(this).val());\r\n        asignVal_gender($option, $value);\r\n    });\r\n\r\n\r\n    function asignVal_gender(option, value) {\r\n        $(\"#buttons-blocks button\").removeClass(\"active\");\r\n        $('#' + option).addClass('active');\r\n        $(\"#gender\").empty();\r\n        makeChart_gender(eval(option));\r\n        $('#table_gender').html(table_html[value]);\r\n    };\r\n\r\n\r\n    function makeChart_gender(data_gender) {\r\n\r\n        var blockArray = [];\r\n        for (i = 0; i < 6; i++) {\r\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\r\n            var blocksAdded = 0;\r\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray);\r\n        }\r\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\r\n    }\r\n\r\n    function addBlock_gender(id, blockArray, i) {\r\n        if (i < blockArray.length) {\r\n            $(id).append(blockArray[i]);\r\n            i++;\r\n            //timeout += 1;\r\n            // setTimeout(function() {\r\n            addBlock_gender(id, blockArray, i);\r\n            //})\r\n        }\r\n    }\r\n\r\n\r\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray) {\r\n        for (b = 0; b < noOfBlocks; b++) {\r\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\r\n            blockArray.push('<div class=\"block type_gender' + i + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\r\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\r\n        }\r\n        return blockArray;\r\n    }\r\n\r\n});\r\n\r\n\r\n// var $block = document.getElementByClassName('block');\r\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\r\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 100); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n        redraw(dataset, selected);\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n       \r\n\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([0, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n        var age_bar_color = d3.scale.ordinal()\r\n            .range([\"#64B5F6\", \"#FF80AB\"]);\r\n        var age_bar_label = d3.scale.ordinal()\r\n            .range([\"Male\", \"Female\"])\r\n\r\n        var age_bars_legend = $bars_age.selectAll(\".age_bars_legend\")\r\n            .data(options.slice())\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"age_bars_legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(0,\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n        age_bars_legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 20)\r\n            .attr(\"height\", 20)\r\n            .style(\"fill\", age_bar_color);\r\n\r\n\r\n        age_bars_legend.append(\"text\")\r\n            .attr(\"x\", width+4)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \".35em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text(age_bar_label);\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus 18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus 18to24\";\r\n                }\r\n                  else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus 25to34\";\r\n                }  \r\n                   else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus 25to34\";\r\n                } \r\n                  else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                }  \r\n                   else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }    \r\n            })\r\n            //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n         //   .attr(\"class\", function (d, i) {\r\n         //       if (d.age === '18 to 24') {\r\n         //           return \"18to24\";\r\n          //      } else if (d.age === '25 to 34') {\r\n         //           return \"25to34\";\r\n         //       }\r\n         //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var labels = $bars_age.selectAll(\"text.labels\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var labels2 = $bars_age.selectAll(\"text.labels2\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        labels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"labels\");\r\n        labels.exit()\r\n            .remove();\r\n\r\n        labels2.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"labels2\");\r\n        labels2.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".2f\");\r\n        rateFormat = d3.format(\".2f\");\r\n\r\n        labels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                console.log(xScale(+d[column]) + 50);\r\n                console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\") {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1.2em\")\r\n            .attr(\"dx\", \"5px\")\r\n            .attr(\"text-anchor\", \"start\");\r\n\r\n        labels2.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1.2em\")\r\n            .attr(\"dx\", \"5px\")\r\n            .attr(\"text-anchor\", \"start\");\r\n\r\n\r\n    } // end of draw function\r\n})();"],"sourceRoot":"/source/"}