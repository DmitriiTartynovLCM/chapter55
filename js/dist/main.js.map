{"version":3,"sources":["custom.js","map-death.js","lines-bsas.js","queue.js","maps_binary5yr.js","map-composite.js","maps-substance.js","lines-death.js","lines-fent.js","blocks-bar.js","blocks-gender.js","bars-age.js","bars-race.js"],"names":["parallax","speed","document","querySelectorAll","window","onscroll","i","length","$offset","$","offset","$windowYOffset","height","pageYOffset","top","extraY","elBackgrounPos","style","backgroundPosition","collapseNavbar","addClass","removeClass","app","queue","defer","d3","json","awaitAll","generateMap","error","results","getYear","setSymbology","on","this","val","year","szAttr","html","parseInt","svgContainer","selectAll","transition","duration","d","delta","properties","OPIOIDSTATS","opChgScale","generateLegend","scale","szDivId","szCaption","width","svg","select","append","attr","g","legendData","push","r","s","domain","range","domainStrings","data","enter","text","maTowns","maOpioid","features","town","TOWN","alert","threshold","Infinity","colorbrewer","Blues","projection","geo","conicConformal","parallels","rotate","translate","geoPath","path","mouse","node","map","string_base","currentvalue","concat","currentyear","currentrate","format","tooltip","classed","toTitleCase","click","app2","generateMap2","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","setSymbology2","generateLegend2","width2","height2","tooltip2","RdPu","opioidsY2000","opioidsY2015","parallelism","pop","popping","started","tasks","active","t","a","slice","call","callback","apply","e","remaining","NaN","notify","await","all","q","noop","arguments","f","version","define","amd","module","exports","createElement","scroll","ready","bind","event","preventDefault","$anchor","stop","animate","scrollTop","tab","target","newTabHeight","querySelector","clientHeight","parent","each","$id","$current","find","location","pathname","hostname","hash","$target","get","play","load","response","asignVal_svg","val_svg","innerHTML","words","trim","split","potentialWidow","newWords","join","Vis","visualize","states","forEach","wrapper","visualizationWrapper","createMap","selector","eventName","el","shape","key","$maps_sub","value","values","TOWN_1","palette","self","town_value","geoData","parentNode","getElementsByClassName","fill-opacity","generateLegend_map_sub","legendHeight","legendWidth","$maps_sub_svg","$maps_sub_legends","unitWidth","date","console","log","initialize","mapWidth","mapHeight","transformX","transformY","autoSetYear","stopSetYear","yearStart","yearEnd","timer","setTimeout","clearTimeout","setupData","years","keys","dataset","OMRs","y","rate","Geography","FullName","rates","xScale","extent","dateFormat","parse","yScale","max","groups","$lines_death","lines","inArray","Massachusetts","UnitedStates","updateDimensions","dimensions","rootNode","clientWidth","margin","left","render","right","bottom","xAxis_death","orient","ticks","tickFormat","innerTickSize","yAxis_death","$lines_death_x_axis_label","$lines_death_y_axis_label","$lines_death_y_axis","line_death","x","defined","$lines_death_x_axis","$lines_death_ma_label","$lines_death_usa_label","time","sqrt","axis","line","csv","addEventListener","quarter","date2","Date","setMonth","getMonth","Math","ceil","mouseoutFunc","symbol","type","size","tooltipFent","focus","mouseoverFunc","y0","y1","invert","percentVal","mousemoveFunc","x0","pageY","pageX","updateWidth","rangePoints","x2","xAxis_fent","xAxis2_fent","yAxis_fent","label","x_axis","x_axis2","x_axis2_text","y_axis","$svg","wrapper_width","wrapper_height","$lines","$lines_hit_area","$legend","componentWidth","renderLegend","legendItems","legendItemsTranslate","lineHeight","item","$item","seriesColors","seriesLineDash","seriesLineStrokes","rootSelector","chartData","FentanylHeroin","Fentanyl","Heroin","Methadone","yearformat","seriesPointShapes","seriesPointWidth","seriesPointFill","xLabel","ordinal","linear","color","lineStroke","lineDash","pointShape","pointWidth","pointFill","months","tickSize","tickPadding","formatPercent","$lines_fent","varSeries","filter","seriesData","name","min","c","series","xAxis_bsas","outerTickSize","yAxis_bsas","percent","age","$x_axis","$y_axis","$lines_bsas","$eventOverlay","$lines_bsas_x_axis_label","$lines_bsas_y_axis_label","renderLines","updateDots","w","setupLegend","opioids","circle","alcohol","marijuana","other","none","top_offset","line_height","legend_pos_dot","legend_pos_text","setupLines","current_town","y_circle_alcohol","delay","string_select","value_select","town_names","abington","acton","acushnet","adams","agawam","alford","amesbury","amherst","andover","aquinnah","arlington","ashburnham","ashby","ashfield","ashland","athol","attleboro","auburn","avon","ayer","barnstable","barre","becket","bedford","belchertown","bellingham","belmont","berkley","berlin","bernardston","beverly","billerica","blackstone","blandford","bolton","boston","bourne","boxborough","boxford","boylston","braintree","brewster","bridgewater","brimfield","brockton","brookfield","brookline","buckland","burlington","cambridge","canton","carlisle","carver","charlemont","charlton","chatham","chelmsford","chelsea","cheshire","chester","chesterfield","chicopee","chilmark","clarksburg","clinton","cohasset","colrain","concord","conway","cummington","dalton","danvers","dartmouth","dedham","deerfield","dennis","dighton","douglas","dover","dracut","dudley","dunstable","duxbury","eastbridgewater","eastbrookfield","eastham","easthampton","eastlongmeadow","easton","edgartown","egremont","erving","essex","everett","fairhaven","fallriver","falmouth","fitchburg","florida","foxborough","framingham","franklin","freetown","gardner","georgetown","gill","gloucester","goshen","gosnold","grafton","granby","granville","greatbarrington","greenfield","groton","groveland","hadley","halifax","hamilton","hampden","hancock","hanover","hanson","hardwick","harvard","harwich","hatfield","haverhill","hawley","heath","hingham","hinsdale","holbrook","holden","holland","holliston","holyoke","hopedale","hopkinton","hubbardston","hudson","hull","huntington","ipswich","kingston","lakeville","lancaster","lanesborough","lawrence","lee","leicester","lenox","leominster","leverett","lexington","leyden","lincoln","littleton","longmeadow","lowell","ludlow","lunenburg","lynn","lynnfield","malden","manchester","mansfield","marblehead","marion","marlborough","marshfield","mashpee","mattapoisett","maynard","medfield","medford","medway","melrose","mendon","merrimac","methuen","middleborough","middlefield","middleton","milford","millbury","millis","millville","milton","monroe","monson","montague","monterey","montgomery","mountwashington","nahant","nantucket","natick","needham","newashford","newbedford","newbraintree","newbury","newburyport","newmarlborough","newsalem","newton","norfolk","northadams","northampton","northandover","northattleborough","northborough","northbridge","northbrookfield","northfield","northreading","norton","norwell","norwood","oakbluffs","oakham","orange","orleans","otis","oxford","palmer","paxton","peabody","pelham","pembroke","pepperell","peru","petersham","phillipston","pittsfield","plainfield","plainville","plymouth","plympton","princeton","provincetown","quincy","randolph","raynham","reading","rehoboth","revere","richmond","rochester","rockland","rockport","rowe","rowley","royalston","russell","rutland","salem","salisbury","sandisfield","sandwich","saugus","savoy","scituate","seekonk","sharon","sheffield","shelburne","sherborn","shirley","shrewsbury","shutesbury","somerset","somerville","southampton","southborough","southbridge","southhadley","southwick","spencer","springfield","sterling","stockbridge","stoneham","stoughton","stow","sturbridge","sudbury","sunderland","sutton","swampscott","swansea","taunton","templeton","tewksbury","tisbury","tolland","topsfield","townsend","truro","tyngsborough","tyringham","upton","uxbridge","wakefield","wales","walpole","waltham","ware","wareham","warren","warwick","washington","watertown","wayland","webster","wellesley","wellfleet","wendell","wenham","westborough","westboylston","westbridgewater","westbrookfield","westfield","westford","westhampton","westminster","westnewbury","weston","westport","westspringfield","weststockbridge","westtisbury","westwood","weymouth","whately","whitman","wilbraham","williamsburg","williamstown","wilmington","winchendon","winchester","windsor","winthrop","woburn","worcester","worthington","wrentham","yarmouth","bisectAge","bisector","category10","mousemove","i_alcohol","d0_alcohol","d1_alcohol","d_alcohol","focusalcohol","i_marijuana","d0_marijuana","d1_marijuana","d_marijuana","focusmarijuana","i_none","d0_none","d1_none","d_none","focusnone","i_opioids","d0_opioids","d1_opioids","d_opioids","focusopioids","i_other","d0_other","d1_other","d_other","focusother","autocomplete","source","request","matches","acItem","indexOf","term","ui","asignVal_substance","Yes","empty","makeChart_substance","No","data_substance","blockArray_substance","noOfBlocks_No","round","noOfBlocks_Yes","blockArray","addBlocks_substance","addBlock_substance","id","person_path","person_svg_No","b","person_svg_Yes","draw","colors","xMax","group","rangeRoundBands","colours","bar_groups","$bar","rects","stroke","stroke-width","rangeBand","prescription","heroin","fentanyl","both","methadone","buprenorphine","count","substance","sub","time_period","o","stack","layout","n","parseFloat","substance_html","asignVal_gender","option","makeChart_gender","eval","table_html","data_gender","multi","index","noOfBlocks_gender","blockArray_gender","addBlocks_gender","addBlock_gender","noOfBlocks","person_svg","$option","$value","$bars_age","drawGraph","column","sort","redraw","chart_title","toTitle","rangeBands","bars","gender_age","age_bars_legend","exit","ease","remove","gender","dataLabels","axisLabels","numberFormat","percentageFormat","rateFormat","titleLookup","percentOpiodDeaths","deathRate","numberOpioidDeaths","age_bar_color","age_bar_label","selected","thisButton","wrap","word","reverse","lineNumber","dy","tspan","getComputedTextLength","x1","xAxis_bars","yAxis_bars","xAxis","yAxis","legendRect","legendText","bar","raceth","2014","2015","divtooltip_raceeth","$bars_race","options","elements","l","elementData","__data__","legend"],"mappings":"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","file":"main.js","sourcesContent":["// Create HTML5 elements for IE\n\ndocument.createElement(\"article\");\ndocument.createElement(\"section\");\n\nvar speed = -80;\nparallax(speed);\n\nfunction parallax(speed) {\n\n    var parallax = document.querySelectorAll(\".parallax\");\n    // console.log(parallax[0]);\n\n    window.onscroll = function() {\n        for (var i = 0; i < parallax.length; i++) {\n\n            //var position = $(el).position();\n            // var offset = [];\n            var $offset = $(parallax[i]).offset();\n            //console.log(offset);\n            var $windowHeight = window.height;\n            var $windowYOffset = window.pageYOffset / $offset.top;\n            // $windowYOffset[0] = 0;\n            //       console.log($windowYOffset);\n            //console.log('windowYOffset: pageYOffset (' + window.pageYOffset + ') / ( window.height (' + window.height + ') - offset.top ( ' + offset.top + ' ) = ' + windowYOffset);\n            // console.log(el+\",\"+i);\n\n            var extraY = [0, -10, -60, -40, 0, -20];\n\n            var elBackgrounPos = [];\n\n            elBackgrounPos[i] = \"50% \" + (extraY[i] + $windowYOffset * speed) + \"%\";\n\n            //console.log(elBackgrounPos);\n\n            parallax[i].style.backgroundPosition = elBackgrounPos[i];\n        };\n    };\n\n};\n\n\n\n\n\n/////////////////////////////NAV\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        event.preventDefault();\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n  var tab = $(e.target).attr('href');\n  var newTabHeight = document.querySelector(tab).clientHeight;\n  $(tab).parent().animate({ height: newTabHeight });\n});\n\n\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    if ($(this).attr('class') != 'dropdown-toggle active' && $(this).attr('class') != 'dropdown-toggle') {\n        $('.navbar-toggle:visible').click();\n    }\n});\n\n\n//when scrolling...\n$(window).scroll(function() {\n    if ($(window).scrollTop() >= 400) {\n        $(\"#navigation\").addClass(\"navbar-fixed-top\");\n    } else {\n        $(\"#navigation\").removeClass(\"navbar-fixed-top\");\n    };\n\n\n    $('.target').each(function() {\n        if ($(window).scrollTop() >= ($(this).offset().top) - 10) {\n            var $id = $(this).attr('id');\n            $('#navigation li').removeClass('active');\n            $('#navigation li[id=' + $id + '1]').addClass('active');\n\n            var $current = $(this).attr('data-index');\n            // var $current = $(this).find('.section-title').text();\n            $('#current-section').html($current);\n        }\n    });\n\n});\n\n$(\"#navigation li\").on('click', function() {\n    $(this).parent().find(\"li\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n});\n\n\n\n$('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') || location.hostname == this.hostname) {\n\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n        if (target.length) {\n            $('html,body').animate({\n                scrollTop: target.offset().top\n            }, 500);\n            return false;\n        }\n    }\n    // });\n\n\n});\n\n\n/////////////////////////////Accordion\n// $(function() {\n//     var icons = {\n//         header: \"iconClosed\",\n//         activeHeader: \"iconOpen\",\n//         hoverHeader: 'iconHover'\n\n//     };\n//     $(\"#accordion\").accordion({\n//         icons: icons,\n//         heightStyle: \"content\"\n//     });\n// });\n\n/////////////////////////////Pills\n\n$('#pills-first a').click(function(e) {\n    e.preventDefault()\n    $(this).tab('show')\n});\n\n\n/////////////////////////////Video Links\n\n$('.js-play-video').click(function() {\n    var $target = $($(this).data('target'));\n    if($target.get(0)) {\n        $target.get(0).play();\n    }\n});\n\n/////////////////////////////SVG Infographic\n$(function() {\n    $(\"#odInfographic\").load('img/human1.svg', function(response) {\n        var $svg = $(this).find('svg');\n        // $svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n        var val_svg = '2/3';\n        asignVal_svg(val_svg);\n\n        function asignVal_svg(val) {\n            $('.btn-svg').removeClass('active');\n            $('.btn-svg[value=\"' + val + '\"]').addClass('active');\n            if (val == '1/12') {\n                $('.svg-studyperiod').attr(\"opacity\", 0);\n                $('.svg-onemonth').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('Only about '+ '<strong>1 in 12</strong>' +' people who died from opioids had an active opioid prescription a month before they died')\n            } else {\n                $('.svg-studyperiod').attr(\"opacity\", 1);\n                $('#odInfographic_details').html('About '+ '<strong>8 in 12</strong>' +' people who died from opioids had an opioid prescription at some point during the study period')\n            }\n        }\n\n        $('.btn-svg').on('click', function() {\n            asignVal_svg($(this).val());\n        });\n\n        $('.controls-svg').on('click', function() {\n            asignVal_svg($(this).data('select'));\n        });\n    });\n});\n\n\n// Fix widows (no words on own line at the end of a <p>)\n$('p').each(function() {\n    var innerHTML = $(this).html();\n    var words = innerHTML.trim().split(' ');\n    if(words.length > 2) {\n        var potentialWidow = words[words.length-1];\n        var newWords = words.slice(0,-1).join(' ');\n        $(this).html(newWords+'&nbsp;'+potentialWidow);\n    }\n})\n","$(document).ready(function() {\r\n    app();\r\n    app2();\r\n});\r\n\r\nfunction app() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap);\r\n}\r\n\r\nfunction generateMap(error, results) {\r\n\r\n    //should be town polym data\r\n    var maTowns = results[0];\r\n    //var usStates = results[0];\r\n    //should be opioid death data\r\n    var maOpioid = results[1];\r\n    //var usPop = results[1];\r\n    // The data in usStates is in alpha-order by state, as is the data in usPop.\r\n    // The ASSERT test below is just a sanity-check for possible corruption.\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n\t//for (i = 0; i < usStates.features.length; i++) {\r\n        // Assert test.\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //if (usStates.features[i].properties.NAME !== usPop[i].State) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            //console.log(usStates.features[i].properties.NAME + ' mismatch with ' + usPop[i].State);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n        //usStates.features[i].properties.POPSTATS = usPop[i];\r\n    }\r\n\r\n    var width = 960,\r\n        height = 500;\r\n\r\n    var svgContainer = d3.select(\"#map_death\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        //popChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.Blues[5]);\r\n    //.range(colorbrewer.Greens[10]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([480, 500]);\r\n    //var projection = d3.geo.albersUsa()\r\n    //.scale(1280)\r\n    //.translate([width / 2, height / 2]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n\r\n            var currentrate\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            tooltip.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 75) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n\r\n    .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\");\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n\r\n\r\n    getYear();\r\n    generateLegend(opChgScale, 'legend_death', 'Unintentional Opioid Deaths per 100,000 people');\r\n    //generateLegend(popChgScale, 'legend', 'Population Change (percent)');\r\n\r\n    // Bind timer event handler.\r\n    // var timerInterval = 1000;\r\n    // // var id = setInterval(setSymbology, timerInterval);\r\n\r\n\r\n\r\n\r\n    //queryVariable\r\n\r\n    // function getQueryVariable(variable)\r\n    // {\r\n    //        var query = window.location.search.substring(1);\r\n    //        var vars = query.split(\"&\");\r\n    //        for (var i=0;i<vars.length;i++) {\r\n    //                var pair = vars[i].split(\"=\");\r\n    //                if(pair[0] == variable){return pair[1];}\r\n    //        }\r\n    //        return(false);\r\n    // }\r\n    $('.controls-map').click(function() {\r\n        $(\"#timeline\").val($(this).data('select'));\r\n        setSymbology($(this).data('select'));\r\n    });\r\n\r\n    function getYear() {\r\n        setSymbology(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            setSymbology($(this).val());\r\n        });\r\n    };\r\n\r\n    function setSymbology(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        $('#titlePrefix').html('Unintentional Opiod Overdose Deaths in Massachusetts from');\r\n        $('#fromYear1').html(year);\r\n        $('#titleMidfix1').html(' to ');\r\n        $('#toYear').html(parseInt(year) + 1);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                //var delta = +d.properties.POPSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n\t\t//return (delta === -9999) ? '#e8e8e8' : popChgScale(delta);\r\n            });\r\n    } // setSymbology()\r\n\r\n    function generateLegend(scale, szDivId, szCaption) {\r\n        var width = 550,\r\n            height = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({ d: -9999, r: '#f1f1f1', s: 'N/A' });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({ d: scale.domain()[i], r: scale.range()[i], s: scale.domainStrings()[i] });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend()\r\n} // generateMap\r\n\r\n\r\nfunction app2() {\r\n    queue()\r\n        //should be town polym data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.json, \"us_states_5m.geo.json\")\r\n        //should be opioid death data\r\n        .defer(d3.json, \"js/data/TOWN.geo.json\")\r\n        //.defer(d3.csv, \"us_pop.csv\")\r\n        .awaitAll(generateMap2);\r\n}\r\n\r\nfunction generateMap2(error, results) {\r\n\r\n\r\n    var maTowns = results[0];\r\n    var maOpioid = results[1];\r\n\r\n    var currentyear\r\n\r\n    var i;\r\n    for (i = 0; i < maTowns.features.length; i++) {\r\n        if (maTowns.features[i].properties.town != maOpioid.features[i].TOWN) {\r\n            //console.log('ASSERT failure for index: ' + i);\r\n            //console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\r\n            alert('Input data corrupted: generation of map terminated.');\r\n            return;\r\n        }\r\n        maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\r\n    }\r\n\r\n    var width = 960,\r\n        height = 450;\r\n\r\n    //console.log(height);\r\n\r\n    var svgContainer = d3.select(\"#map_comp\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"border\", \"0px solid steelblue\");\r\n\r\n    var tooltip2 = d3.select('#map_comp').append('div')\r\n        .attr('class', 'hidden tooltip2');\r\n\r\n    var opChgScale = d3.scale.threshold()\r\n        .domain([0.01, 6.9, 15.9, 31.5, Infinity])\r\n        .range(colorbrewer.RdPu[5]);\r\n    opChgScale.domainStrings = function() {\r\n        return (['< 0.01', '0.01-6.9', '6.9-15.9',\r\n            '15.9-31.5', '>31.5'\r\n        ]);\r\n    };\r\n\r\n    function toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    var projection = d3.geo.conicConformal()\r\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\r\n        .rotate([71 + 30 / 60, -41])\r\n        .scale([11000])\r\n        .translate([400, 480]);\r\n\r\n    var geoPath = d3.geo.path()\r\n        .projection(projection);\r\n\r\n    var map = svgContainer.selectAll(\"path\")\r\n        .data(maTowns.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", function(d, i) {\r\n            return geoPath(d);\r\n        })\r\n        .on('mousemove', function(d) {\r\n            var mouse = d3.mouse(svgContainer.node()).map(function(d) {\r\n                return parseInt(d);\r\n            });\r\n            var string_base = \"yr\"\r\n            currentvalue = string_base.concat(currentyear);\r\n            var currentrate\r\n           // console.log(height);\r\n\r\n            if (d.properties[currentvalue] > 0) {\r\n                currentrate = d3.format(\".1f\")(d.properties[currentvalue]);\r\n            } else if (d.properties[currentvalue] == 0) {\r\n                currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\r\n            } else {\r\n                currentrate = \"N/A*\";\r\n            }\r\n\r\n            //console.log(currentrate);\r\n\r\n            tooltip2.classed('hidden', false)\r\n                .attr('style', 'left:' + (mouse[0] + 15) +\r\n                    'px !important; top:' + (mouse[1] + 725) + 'px !important')\r\n                .html(\"<b>\" + toTitleCase(d.properties.TOWN) + \"</b> | \" + currentrate);\r\n        })\r\n        .on('mouseover', function(d, i) {\r\n\r\n            var currentState = this;\r\n            d3.select(this).style('fill-opacity', 0.25)\r\n                .style(\"stroke\", \"white\")\r\n                .style(\"stroke-width\", \"2px\");\r\n        })\r\n        .on('mouseout', function(d, i) {\r\n            tooltip2.classed('hidden', true);\r\n            d3.selectAll('path')\r\n                .style(\"fill-opacity\", 1)\r\n                .style(\"stroke\", \"#2f363d\")\r\n                .style(\"stroke-width\", \"0.1px\");\r\n        })\r\n        .style(\"stroke\", \"#2f363d\")\r\n        .style(\"stroke-width\", \"0.1px\")\r\n        .style(\"fill\", \"white\")\r\n        .on('mouseenter', function(d, i) {\r\n\r\n            //var string_base = \"yr\"\r\n            //currentvalue = string_base.concat(currentyear);\r\n            //console.log(d.properties[currentvalue]);\r\n        })\r\n        .on('mouseleave', function(d) {\r\n\r\n        });\r\n\r\n    var aYears = [\r\n        [2000, 2001],\r\n        [2001, 2002],\r\n        [2002, 2003],\r\n        [2003, 2004],\r\n        [2004, 2005],\r\n        [2005, 2006],\r\n        [2006, 2007],\r\n        [2007, 2008],\r\n        [2008, 2009],\r\n        [2010, 2011],\r\n        [2011, 2012],\r\n        [2012, 2013],\r\n        [2013, 2014],\r\n        [2014, 2014.5]\r\n    ];\r\n\r\n    var index = 0;\r\n    getYear();\r\n\r\n    generateLegend2(opChgScale, 'legend2', 'Composite Index Values');\r\n\r\n    function getYear() {\r\n        setSymbology2(2000);\r\n        $(\"#timeline\").on('input change', function() {\r\n            var year = $(this).val()\r\n                // $(\"#to\").html(parseInt(year) + 1);\r\n                // $(\"#from\").html(year);\r\n            setSymbology2($(this).val());\r\n        });\r\n    };\r\n\r\n\r\n    function setSymbology2(year) {\r\n\r\n        var szAttr = 'yr' + year;\r\n        currentyear = year\r\n       // console.log(currentyear)\r\n        $('#titlePrefix2').html('A Composite Indicator of the Impact of the Opioid Epidemic on Massachusetts in ');\r\n        $('#fromYear2').html(year);\r\n\r\n        svgContainer.selectAll(\"path\")\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"fill\", function(d, i) {\r\n\r\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\r\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\r\n            });\r\n    }\r\n\r\n    function generateLegend2(scale, szDivId, szCaption) {\r\n        var width2 = 550,\r\n            height2 = 80;\r\n\r\n        var svg = d3.select('#' + szDivId).append(\"svg\")\r\n            .attr(\"width\", width2)\r\n            .attr(\"height\", height2);\r\n\r\n        var g = svg.append(\"g\");\r\n\r\n        // Create data array.\r\n        var legendData = [];\r\n        legendData.push({\r\n            d: -9999,\r\n            r: '#f1f1f1',\r\n            s: 'N/A'\r\n        });\r\n        var i;\r\n        for (i = 0; i < scale.domain().length; i++) {\r\n            legendData.push({\r\n                d: scale.domain()[i],\r\n                r: scale.range()[i],\r\n                s: scale.domainStrings()[i]\r\n            });\r\n        }\r\n\r\n        g.selectAll(\"rect\")\r\n            .data(legendData)\r\n            .enter().append(\"rect\")\r\n            .attr(\"height\", 20)\r\n            .attr(\"width\", 50)\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 20)\r\n            .style(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"0.25px\")\r\n            .style(\"fill\", function(d, i) {\r\n                return d.r;\r\n            });\r\n\r\n        g.selectAll(\"text\")\r\n            .data(legendData)\r\n            .enter().append(\"text\")\r\n            .attr(\"x\", function(d, i) {\r\n                return i * 55;\r\n            })\r\n            .attr(\"y\", 60)\r\n            .text(function(d, i) {\r\n                return d.s;\r\n            })\r\n            .style(\"font-size\", \"12px\");\r\n\r\n        g.append(\"text\")\r\n\t    .attr(\"class\", \"vis-caption\")\r\n            .attr(\"y\", 12)\r\n            .text(szCaption);\r\n    } // generateLegend2()\r\n} // generateMap2\r\n","/* global d3*/\n(function() {\n    var rootNode = document.querySelector('#lines-bsas');\n    var town_names = {\n        //\"massachusetts\" : \"Massachusetts\",\n        \"abington\": \"Abington\",\n        \"acton\": \"Acton\",\n        \"acushnet\": \"Acushnet\",\n        \"adams\": \"Adams\",\n        \"agawam\": \"Agawam\",\n        \"alford\": \"Alford\",\n        \"amesbury\": \"Amesbury\",\n        \"amherst\": \"Amherst\",\n        \"andover\": \"Andover\",\n        \"aquinnah\": \"Aquinnah\",\n        \"arlington\": \"Arlington\",\n        \"ashburnham\": \"Ashburnham\",\n        \"ashby\": \"Ashby\",\n        \"ashfield\": \"Ashfield\",\n        \"ashland\": \"Ashland\",\n        \"athol\": \"Athol\",\n        \"attleboro\": \"Attleboro\",\n        \"auburn\": \"Auburn\",\n        \"avon\": \"Avon\",\n        \"ayer\": \"Ayer\",\n        \"barnstable\": \"Barnstable\",\n        \"barre\": \"Barre\",\n        \"becket\": \"Becket\",\n        \"bedford\": \"Bedford\",\n        \"belchertown\": \"Belchertown\",\n        \"bellingham\": \"Bellingham\",\n        \"belmont\": \"Belmont\",\n        \"berkley\": \"Berkley\",\n        \"berlin\": \"Berlin\",\n        \"bernardston\": \"Bernardston\",\n        \"beverly\": \"Beverly\",\n        \"billerica\": \"Billerica\",\n        \"blackstone\": \"Blackstone\",\n        \"blandford\": \"Blandford\",\n        \"bolton\": \"Bolton\",\n        \"boston\": \"Boston\",\n        \"bourne\": \"Bourne\",\n        \"boxborough\": \"Boxborough\",\n        \"boxford\": \"Boxford\",\n        \"boylston\": \"Boylston\",\n        \"braintree\": \"Braintree\",\n        \"brewster\": \"Brewster\",\n        \"bridgewater\": \"Bridgewater\",\n        \"brimfield\": \"Brimfield\",\n        \"brockton\": \"Brockton\",\n        \"brookfield\": \"Brookfield\",\n        \"brookline\": \"Brookline\",\n        \"buckland\": \"Buckland\",\n        \"burlington\": \"Burlington\",\n        \"cambridge\": \"Cambridge\",\n        \"canton\": \"Canton\",\n        \"carlisle\": \"Carlisle\",\n        \"carver\": \"Carver\",\n        \"charlemont\": \"Charlemont\",\n        \"charlton\": \"Charlton\",\n        \"chatham\": \"Chatham\",\n        \"chelmsford\": \"Chelmsford\",\n        \"chelsea\": \"Chelsea\",\n        \"cheshire\": \"Cheshire\",\n        \"chester\": \"Chester\",\n        \"chesterfield\": \"Chesterfield\",\n        \"chicopee\": \"Chicopee\",\n        \"chilmark\": \"Chilmark\",\n        \"clarksburg\": \"Clarksburg\",\n        \"clinton\": \"Clinton\",\n        \"cohasset\": \"Cohasset\",\n        \"colrain\": \"Colrain\",\n        \"concord\": \"Concord\",\n        \"conway\": \"Conway\",\n        \"cummington\": \"Cummington\",\n        \"dalton\": \"Dalton\",\n        \"danvers\": \"Danvers\",\n        \"dartmouth\": \"Dartmouth\",\n        \"dedham\": \"Dedham\",\n        \"deerfield\": \"Deerfield\",\n        \"dennis\": \"Dennis\",\n        \"dighton\": \"Dighton\",\n        \"douglas\": \"Douglas\",\n        \"dover\": \"Dover\",\n        \"dracut\": \"Dracut\",\n        \"dudley\": \"Dudley\",\n        \"dunstable\": \"Dunstable\",\n        \"duxbury\": \"Duxbury\",\n        \"eastbridgewater\": \"East Bridgewater\",\n        \"eastbrookfield\": \"East Brookfield\",\n        \"eastham\": \"Eastham\",\n        \"easthampton\": \"Easthampton\",\n        \"eastlongmeadow\": \"East Longmeadow\",\n        \"easton\": \"Easton\",\n        \"edgartown\": \"Edgartown\",\n        \"egremont\": \"Egremont\",\n        \"erving\": \"Erving\",\n        \"essex\": \"Essex\",\n        \"everett\": \"Everett\",\n        \"fairhaven\": \"Fairhaven\",\n        \"fallriver\": \"Fall River\",\n        \"falmouth\": \"Falmouth\",\n        \"fitchburg\": \"Fitchburg\",\n        \"florida\": \"Florida\",\n        \"foxborough\": \"Foxborough\",\n        \"framingham\": \"Framingham\",\n        \"franklin\": \"Franklin\",\n        \"freetown\": \"Freetown\",\n        \"gardner\": \"Gardner\",\n        \"georgetown\": \"Georgetown\",\n        \"gill\": \"Gill\",\n        \"gloucester\": \"Gloucester\",\n        \"goshen\": \"Goshen\",\n        \"gosnold\": \"Gosnold\",\n        \"grafton\": \"Grafton\",\n        \"granby\": \"Granby\",\n        \"granville\": \"Granville\",\n        \"greatbarrington\": \"Great Barrington\",\n        \"greenfield\": \"Greenfield\",\n        \"groton\": \"Groton\",\n        \"groveland\": \"Groveland\",\n        \"hadley\": \"Hadley\",\n        \"halifax\": \"Halifax\",\n        \"hamilton\": \"Hamilton\",\n        \"hampden\": \"Hampden\",\n        \"hancock\": \"Hancock\",\n        \"hanover\": \"Hanover\",\n        \"hanson\": \"Hanson\",\n        \"hardwick\": \"Hardwick\",\n        \"harvard\": \"Harvard\",\n        \"harwich\": \"Harwich\",\n        \"hatfield\": \"Hatfield\",\n        \"haverhill\": \"Haverhill\",\n        \"hawley\": \"Hawley\",\n        \"heath\": \"Heath\",\n        \"hingham\": \"Hingham\",\n        \"hinsdale\": \"Hinsdale\",\n        \"holbrook\": \"Holbrook\",\n        \"holden\": \"Holden\",\n        \"holland\": \"Holland\",\n        \"holliston\": \"Holliston\",\n        \"holyoke\": \"Holyoke\",\n        \"hopedale\": \"Hopedale\",\n        \"hopkinton\": \"Hopkinton\",\n        \"hubbardston\": \"Hubbardston\",\n        \"hudson\": \"Hudson\",\n        \"hull\": \"Hull\",\n        \"huntington\": \"Huntington\",\n        \"ipswich\": \"Ipswich\",\n        \"kingston\": \"Kingston\",\n        \"lakeville\": \"Lakeville\",\n        \"lancaster\": \"Lancaster\",\n        \"lanesborough\": \"Lanesborough\",\n        \"lawrence\": \"Lawrence\",\n        \"lee\": \"Lee\",\n        \"leicester\": \"Leicester\",\n        \"lenox\": \"Lenox\",\n        \"leominster\": \"Leominster\",\n        \"leverett\": \"Leverett\",\n        \"lexington\": \"Lexington\",\n        \"leyden\": \"Leyden\",\n        \"lincoln\": \"Lincoln\",\n        \"littleton\": \"Littleton\",\n        \"longmeadow\": \"Longmeadow\",\n        \"lowell\": \"Lowell\",\n        \"ludlow\": \"Ludlow\",\n        \"lunenburg\": \"Lunenburg\",\n        \"lynn\": \"Lynn\",\n        \"lynnfield\": \"Lynnfield\",\n        \"malden\": \"Malden\",\n        \"manchester\": \"Manchester\",\n        \"mansfield\": \"Mansfield\",\n        \"marblehead\": \"Marblehead\",\n        \"marion\": \"Marion\",\n        \"marlborough\": \"Marlborough\",\n        \"marshfield\": \"Marshfield\",\n        \"mashpee\": \"Mashpee\",\n        \"mattapoisett\": \"Mattapoisett\",\n        \"maynard\": \"Maynard\",\n        \"medfield\": \"Medfield\",\n        \"medford\": \"Medford\",\n        \"medway\": \"Medway\",\n        \"melrose\": \"Melrose\",\n        \"mendon\": \"Mendon\",\n        \"merrimac\": \"Merrimac\",\n        \"methuen\": \"Methuen\",\n        \"middleborough\": \"Middleborough\",\n        \"middlefield\": \"Middlefield\",\n        \"middleton\": \"Middleton\",\n        \"milford\": \"Milford\",\n        \"millbury\": \"Millbury\",\n        \"millis\": \"Millis\",\n        \"millville\": \"Millville\",\n        \"milton\": \"Milton\",\n        \"monroe\": \"Monroe\",\n        \"monson\": \"Monson\",\n        \"montague\": \"Montague\",\n        \"monterey\": \"Monterey\",\n        \"montgomery\": \"Montgomery\",\n        \"mountwashington\": \"Mount Washington\",\n        \"nahant\": \"Nahant\",\n        \"nantucket\": \"Nantucket\",\n        \"natick\": \"Natick\",\n        \"needham\": \"Needham\",\n        \"newashford\": \"New Ashford\",\n        \"newbedford\": \"New Bedford\",\n        \"newbraintree\": \"New Braintree\",\n        \"newbury\": \"Newbury\",\n        \"newburyport\": \"Newburyport\",\n        \"newmarlborough\": \"New Marlborough\",\n        \"newsalem\": \"New Salem\",\n        \"newton\": \"Newton\",\n        \"norfolk\": \"Norfolk\",\n        \"northadams\": \"North Adams\",\n        \"northampton\": \"Northampton\",\n        \"northandover\": \"North Andover\",\n        \"northattleborough\": \"North Attleborough\",\n        \"northborough\": \"Northborough\",\n        \"northbridge\": \"Northbridge\",\n        \"northbrookfield\": \"North Brookfield\",\n        \"northfield\": \"Northfield\",\n        \"northreading\": \"North Reading\",\n        \"norton\": \"Norton\",\n        \"norwell\": \"Norwell\",\n        \"norwood\": \"Norwood\",\n        \"oakbluffs\": \"Oak Bluffs\",\n        \"oakham\": \"Oakham\",\n        \"orange\": \"Orange\",\n        \"orleans\": \"Orleans\",\n        \"otis\": \"Otis\",\n        \"oxford\": \"Oxford\",\n        \"palmer\": \"Palmer\",\n        \"paxton\": \"Paxton\",\n        \"peabody\": \"Peabody\",\n        \"pelham\": \"Pelham\",\n        \"pembroke\": \"Pembroke\",\n        \"pepperell\": \"Pepperell\",\n        \"peru\": \"Peru\",\n        \"petersham\": \"Petersham\",\n        \"phillipston\": \"Phillipston\",\n        \"pittsfield\": \"Pittsfield\",\n        \"plainfield\": \"Plainfield\",\n        \"plainville\": \"Plainville\",\n        \"plymouth\": \"Plymouth\",\n        \"plympton\": \"Plympton\",\n        \"princeton\": \"Princeton\",\n        \"provincetown\": \"Provincetown\",\n        \"quincy\": \"Quincy\",\n        \"randolph\": \"Randolph\",\n        \"raynham\": \"Raynham\",\n        \"reading\": \"Reading\",\n        \"rehoboth\": \"Rehoboth\",\n        \"revere\": \"Revere\",\n        \"richmond\": \"Richmond\",\n        \"rochester\": \"Rochester\",\n        \"rockland\": \"Rockland\",\n        \"rockport\": \"Rockport\",\n        \"rowe\": \"Rowe\",\n        \"rowley\": \"Rowley\",\n        \"royalston\": \"Royalston\",\n        \"russell\": \"Russell\",\n        \"rutland\": \"Rutland\",\n        \"salem\": \"Salem\",\n        \"salisbury\": \"Salisbury\",\n        \"sandisfield\": \"Sandisfield\",\n        \"sandwich\": \"Sandwich\",\n        \"saugus\": \"Saugus\",\n        \"savoy\": \"Savoy\",\n        \"scituate\": \"Scituate\",\n        \"seekonk\": \"Seekonk\",\n        \"sharon\": \"Sharon\",\n        \"sheffield\": \"Sheffield\",\n        \"shelburne\": \"Shelburne\",\n        \"sherborn\": \"Sherborn\",\n        \"shirley\": \"Shirley\",\n        \"shrewsbury\": \"Shrewsbury\",\n        \"shutesbury\": \"Shutesbury\",\n        \"somerset\": \"Somerset\",\n        \"somerville\": \"Somerville\",\n        \"southampton\": \"Southampton\",\n        \"southborough\": \"Southborough\",\n        \"southbridge\": \"Southbridge\",\n        \"southhadley\": \"South Hadley\",\n        \"southwick\": \"Southwick\",\n        \"spencer\": \"Spencer\",\n        \"springfield\": \"Springfield\",\n        \"sterling\": \"Sterling\",\n        \"stockbridge\": \"Stockbridge\",\n        \"stoneham\": \"Stoneham\",\n        \"stoughton\": \"Stoughton\",\n        \"stow\": \"Stow\",\n        \"sturbridge\": \"Sturbridge\",\n        \"sudbury\": \"Sudbury\",\n        \"sunderland\": \"Sunderland\",\n        \"sutton\": \"Sutton\",\n        \"swampscott\": \"Swampscott\",\n        \"swansea\": \"Swansea\",\n        \"taunton\": \"Taunton\",\n        \"templeton\": \"Templeton\",\n        \"tewksbury\": \"Tewksbury\",\n        \"tisbury\": \"Tisbury\",\n        \"tolland\": \"Tolland\",\n        \"topsfield\": \"Topsfield\",\n        \"townsend\": \"Townsend\",\n        \"truro\": \"Truro\",\n        \"tyngsborough\": \"Tyngsborough\",\n        \"tyringham\": \"Tyringham\",\n        \"upton\": \"Upton\",\n        \"uxbridge\": \"Uxbridge\",\n        \"wakefield\": \"Wakefield\",\n        \"wales\": \"Wales\",\n        \"walpole\": \"Walpole\",\n        \"waltham\": \"Waltham\",\n        \"ware\": \"Ware\",\n        \"wareham\": \"Wareham\",\n        \"warren\": \"Warren\",\n        \"warwick\": \"Warwick\",\n        \"washington\": \"Washington\",\n        \"watertown\": \"Watertown\",\n        \"wayland\": \"Wayland\",\n        \"webster\": \"Webster\",\n        \"wellesley\": \"Wellesley\",\n        \"wellfleet\": \"Wellfleet\",\n        \"wendell\": \"Wendell\",\n        \"wenham\": \"Wenham\",\n        \"westborough\": \"Westborough\",\n        \"westboylston\": \"West Boylston\",\n        \"westbridgewater\": \"West Bridgewater\",\n        \"westbrookfield\": \"West Brookfield\",\n        \"westfield\": \"Westfield\",\n        \"westford\": \"Westford\",\n        \"westhampton\": \"Westhampton\",\n        \"westminster\": \"Westminster\",\n        \"westnewbury\": \"West Newbury\",\n        \"weston\": \"Weston\",\n        \"westport\": \"Westport\",\n        \"westspringfield\": \"West Springfield\",\n        \"weststockbridge\": \"West Stockbridge\",\n        \"westtisbury\": \"West Tisbury\",\n        \"westwood\": \"Westwood\",\n        \"weymouth\": \"Weymouth\",\n        \"whately\": \"Whately\",\n        \"whitman\": \"Whitman\",\n        \"wilbraham\": \"Wilbraham\",\n        \"williamsburg\": \"Williamsburg\",\n        \"williamstown\": \"Williamstown\",\n        \"wilmington\": \"Wilmington\",\n        \"winchendon\": \"Winchendon\",\n        \"winchester\": \"Winchester\",\n        \"windsor\": \"Windsor\",\n        \"winthrop\": \"Winthrop\",\n        \"woburn\": \"Woburn\",\n        \"worcester\": \"Worcester\",\n        \"worthington\": \"Worthington\",\n        \"wrentham\": \"Wrentham\",\n        \"yarmouth\": \"Yarmouth\"\n    };\n    var current_town = \"massachusetts\";\n\n    var margin = {\n            top: 0,\n            right: 25,\n            bottom: 35,\n            left: 45\n        },\n        wrapper_width = rootNode.clientWidth,\n        wrapper_height = 400,\n        width = wrapper_width - margin.left - margin.right,\n        height = wrapper_height - margin.top - margin.bottom;\n\n    var bisectAge = d3.bisector(function(d) {\n        return d.age;\n    }).left;\n    var percent = d3.format(',.0%');\n    var yearformat = d3.format(\"d\");\n    // var min_age = 2005;\n    // var fields = ['emp', 'edu', 'race', 'orig'];\n    var groups = {};\n\n    var x = d3.scale.linear();\n\n    var y = d3.scale.linear();\n\n    var color = d3.scale.category10();\n\n    var xAxis_bsas = d3.svg.axis();\n\n    var yAxis_bsas = d3.svg.axis();\n\n    var line = d3.svg.line();\n\n\n    var $svg = d3.select(\"#lines-bsas\").append(\"svg\");\n\n    var $lines_bsas = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var $x_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-x-axis\");\n    $x_axis\n        .append(\"text\")\n        .attr(\"x\", 635)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Year\");\n\n    var $y_axis = $lines_bsas.append(\"g\").attr(\"class\", \"vis-y-axis\");\n    $y_axis.append(\"text\");\n\n    var $lines_bsas_x_axis_label = $x_axis.append(\"text\");\n    var $lines_bsas_y_axis_label = $y_axis.append(\"text\");\n\n    var legend_pos_text = -60,\n        legend_pos_dot = -70;\n    var $legend = {\n        opioids: {},\n        alcohol: {},\n        marijuana: {},\n        other: {},\n        none: {}\n    };\n\n    setupLegend();\n\n    var $lines = {};\n\n    var $eventOverlay = $lines_bsas.append(\"rect\").attr(\"class\", \"overlay\");\n\n\n\n\n\n\n    function render() {\n        updateWidth(rootNode.clientWidth);\n\n        $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n        x.range([0, width]);\n        y.range([height, 0]);\n\n        xAxis_bsas\n            .scale(x)\n            .tickFormat(yearformat)\n            .ticks((width < 500 ? 4 : 10))\n            .orient(\"bottom\")\n            .outerTickSize(0);\n\n        yAxis_bsas\n            .scale(y)\n            .tickSize(width)\n            .orient(\"right\")\n            .tickFormat(percent);\n\n\n\n        line.x(function(d) {\n                return x(d.age);\n            })\n            .y(function(d) {\n                return y(d.value);\n            })\n            .defined(function(d) {\n                return y(d.value);\n            }); // Omit empty values.\n\n        $x_axis.attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis_bsas);\n        $y_axis.call(yAxis_bsas);\n        $lines_bsas.selectAll(\".vis-y-axis text\").attr(\"x\", -5).attr(\"dy\", 0).style(\"text-anchor\", \"end\");\n        $eventOverlay.attr(\"width\", width).attr(\"height\", height);\n\n\n        $lines_bsas_x_axis_label\n            .attr(\"x\", width - margin.left)\n            .attr(\"y\", (margin.bottom) / 2)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-x-axis-label\")\n            .text(\"Fiscal Year\");\n\n\n        $lines_bsas_y_axis_label\n            .attr(\"x\", -margin.top)\n            .attr(\"y\", -margin.left)\n            .attr(\"dy\", \"1em\")\n            .attr(\"class\", \"vis-y-axis-label\")\n            .text(\"Percent Primary Substance of Use\");\n\n\n\n        renderLegend();\n        renderLines();\n        updateDots();\n    }\n\n\n    function updateWidth(w) {\n        wrapper_width = w;\n        width = wrapper_width - margin.left - margin.right;\n    }\n\n    function setupLegend() {\n        $legend.opioids.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle opioids\").attr(\"r\", 3);\n        $legend.opioids.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus opioids\").text(\"opioids\");\n        $legend.alcohol.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle alcohol\").attr(\"r\", 3);\n        $legend.alcohol.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus alcohol\").text(\"alcohol\");\n        $legend.marijuana.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle marijuana\").attr(\"r\", 3);\n        $legend.marijuana.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus marijuana\").text(\"marijuana\");\n        $legend.other.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle other\").attr(\"r\", 3);\n        $legend.other.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus other\").text(\"other\");\n        $legend.none.circle = $lines_bsas.append(\"circle\").attr(\"class\", \"circle none\").attr(\"r\", 3);\n        $legend.none.text = $lines_bsas.append(\"g\").append(\"text\").attr(\"class\", \"focus none\").text(\"none\");\n    }\n\n    function renderLegend() {\n        var top_offset = 0;\n        var line_height = 15;\n        $legend.opioids.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (1 * line_height));\n        $legend.opioids.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (1 * line_height) + 3);\n        $legend.alcohol.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (2 * line_height));\n        $legend.alcohol.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (2 * line_height) + 3);\n        $legend.marijuana.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (3 * line_height));\n        $legend.marijuana.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (3 * line_height) + 3);\n        $legend.other.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (4 * line_height));\n        $legend.other.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (4 * line_height) + 3);\n        $legend.none.circle.attr(\"cx\", width + legend_pos_dot).attr(\"cy\", top_offset + (5 * line_height));\n        $legend.none.text.attr(\"x\", width + legend_pos_text).attr(\"y\", top_offset + (5 * line_height) + 3);\n    }\n\n    function setupLines() {\n        $lines.alcohol = $lines_bsas.append(\"path\").attr(\"class\", \"line alcohol\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"alcohol\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"alcohol\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle alcohol y\" + groups[current_town + \"alcohol\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"alcohol\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"alcohol\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.marijuana = $lines_bsas.append(\"path\").attr(\"class\", \"line marijuana\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"marijuana\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"marijuana\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle marijuana y\" + groups[current_town + \"marijuana\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"marijuana\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"marijuana\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.none = $lines_bsas.append(\"path\").attr(\"class\", \"line none\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"none\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"none\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle none y\" + groups[current_town + \"none\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle none y\" + groups[current_town + \"none\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"none\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"none\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.opioids = $lines_bsas.append(\"path\").attr(\"class\", \"line opioids\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"opioids\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"opioids\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                //console.log(\"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle opioids y\" + groups[current_town + \"opioids\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"opioids\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"opioids\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n\n        $lines.other = $lines_bsas.append(\"path\").attr(\"class\", \"line other\").attr(\"pointer-events\", \"none\");\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var x_circle_alcohol = groups[current_town + \"other\"].values[i].age;\n            var y_circle_alcohol = groups[current_town + \"other\"].values[i].value;\n\n            if (y_circle_alcohol >= 0) {\n\n                //console.log(groups[current_town+\"alcohol\"].values[i].age);\n                // console.log(\"circle other y\" + groups[current_town + \"other\"].values[i].age)\n\n                $lines_bsas.append(\"circle\")\n                    .attr(\"class\", function(d) {\n                        return \"circle other y\" + groups[current_town + \"other\"].values[i].age\n                    })\n                    .attr(\"cx\", x(groups[current_town + \"other\"].values[i].age))\n                    .attr(\"cy\", y(groups[current_town + \"other\"].values[i].value))\n                    .attr(\"r\", 3)\n                    .attr(\"pointer-events\", \"none\");\n            }\n        }\n    }\n\n\n    function renderLines() {\n        $lines.alcohol.attr(\"d\", function(d) {\n            return line(groups[current_town + \"alcohol\"].values);\n        });\n        $lines.opioids.attr(\"d\", function(d) {\n            return line(groups[current_town + \"opioids\"].values);\n        });\n        $lines.marijuana.attr(\"d\", function(d) {\n            return line(groups[current_town + \"marijuana\"].values);\n        });\n        $lines.other.attr(\"d\", function(d) {\n            return line(groups[current_town + \"other\"].values);\n        });\n        $lines.none.attr(\"d\", function(d) {\n            return line(groups[current_town + \"none\"].values);\n        });\n    }\n\n\n\n    function updateDots() {\n\n        // marriages = groups[current_town];\n        //update alcohol line\n        $lines_bsas.select(\".line.alcohol\")\n            .transition()\n            .duration(1000)\n            .delay(180)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"alcohol\"].values);\n            });\n\n        //console.log(groups[current_town + \"alcohol\"].values[5].value >= 0);\n\n        //update alcohol circles\n        for (i = 0; i < groups[current_town + \"alcohol\"].values.length; i++) {\n            var string_select = \".circle.alcohol.y\" + groups[current_town + \"alcohol\"].values[i].age\n                // console.log(string_select);\n\n            if (groups[current_town + \"alcohol\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"alcohol\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"alcohol\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n\n\n        //marijuana\n        $lines_bsas.select(\".line.marijuana\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"marijuana\"].values);\n            });\n        //update marijuana circles\n        for (i = 0; i < groups[current_town + \"marijuana\"].values.length; i++) {\n            var string_select = \".circle.marijuana.y\" + groups[current_town + \"marijuana\"].values[i].age\n                //console.log(string_select);\n\n            if (groups[current_town + \"marijuana\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"marijuana\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"marijuana\"].values[i].value)\n                    })\n                    .attr(\"r\", 3)\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0)\n            }\n\n        }\n\n        //none\n        $lines_bsas.select(\".line.none\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"none\"].values);\n            });\n        //update none circles\n        for (i = 0; i < groups[current_town + \"none\"].values.length; i++) {\n\n\n            var string_select = \".circle.none.y\" + groups[current_town + \"none\"].values[i].age\n            var value_select = groups[current_town + \"none\"].values[i].value\n                // console.log(string_select);\n                // console.log(value_select);\n                // console.log(value_select >= 0);\n\n            if (groups[current_town + \"none\"].values[i].value >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"none\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"none\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n        //opioids\n        $lines_bsas.select(\".line.opioids\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"opioids\"].values);\n            });\n        //update opioids circles\n        for (i = 0; i < groups[current_town + \"opioids\"].values.length; i++) {\n\n\n            var string_select = \".circle.opioids.y\" + groups[current_town + \"opioids\"].values[i].age\n            var value_select = groups[current_town + \"opioids\"].values[i].value\n                //console.log(string_select);\n                //console.log(value_select);\n                //console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"opioids\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"opioids\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n        //other\n        $lines_bsas.select(\".line.other\")\n            .transition()\n            .duration(1000)\n            .attr(\"d\", function(d) {\n                return line(groups[current_town + \"other\"].values);\n            });\n        //update other circles\n        for (i = 0; i < groups[current_town + \"other\"].values.length; i++) {\n\n            var string_select = \".circle.other.y\" + groups[current_town + \"other\"].values[i].age\n            var value_select = groups[current_town + \"other\"].values[i].value\n                // console.log(string_select);\n                // console.log(value_select);\n                // console.log(value_select >= 0);\n\n            if (value_select >= 0) {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d) {\n                        return x(groups[current_town + \"other\"].values[i].age)\n                    })\n                    .attr(\"cy\", function(d) {\n                        return y(groups[current_town + \"other\"].values[i].value)\n                    })\n                    .attr(\"r\", 3);\n            } else {\n                $lines_bsas.selectAll(string_select)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"r\", 0);\n            }\n\n        }\n\n    }\n\n\n\n\n\n    d3.csv(\"js/data/bsas-data-2000to2015.csv\", type, function(error, data) {\n        if (error) throw error;\n        //console.log(groups);\n        // var marriages = groups[current_town];\n\n        x.domain([2000, d3.max(data, function(d) {\n            return d.age;\n        })]);\n        y.domain([0, 1.00]);\n\n        setupLines();\n        render();\n        window.addEventListener('resize', render);\n\n\n\n        // Autocomplete\n\n        $(\".btn-bsas\").addClass('active');\n        d3.selectAll(\".btn-bsas\").on(\"click\", function() {\n            current_town = d3.select(this).attr(\"data-val\");\n            updateDots();\n            d3.select(this).classed('active', true);\n            $(\"#tags\").val('');\n        });\n\n        \n\n        $(\"#tags\").autocomplete({\n            source: function(request, response) {\n                //console.log(town_names);\n                var matches = $.map(town_names, function(acItem) {\n                    if (acItem.toUpperCase().indexOf(request.term.toUpperCase()) === 0) {\n                        return acItem;\n                    }\n                });\n                response(matches);\n                //$(\"#tags\").focus(function() {\n                // if (matches.length == 1) {\n                //     current_town = matches[0];\n                //     $(\".btn-bsas\").removeClass('active');\n                //     updateDots();\n                // }\n                //});\n                //console.log(matches);\n            },\n            select: function(event, ui) {\n                $.each(town_names, function(key, value) {\n                    if (value === ui.item.value) {\n                        current_town = key;\n                        console.log(value)\n                    }\n                });\n\n\n                $(\".btn-bsas\").removeClass('active');\n                updateDots();\n            }\n        });\n\n\n\n\n        // alcohol\n        var focusalcohol = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus alcohol\")\n            .style(\"display\", \"none\");\n        focusalcohol.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusalcohol.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // marijuana\n        var focusmarijuana = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus marijuana\")\n            .style(\"display\", \"none\");\n        focusmarijuana.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusmarijuana.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        var focusnone = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus none\")\n            .style(\"display\", \"none\");\n        focusnone.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusnone.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // opioids\n        var focusopioids = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus opioids\")\n            .style(\"display\", \"none\");\n        focusopioids.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusopioids.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // none\n        var focusother = $lines_bsas.append(\"g\")\n            .attr(\"class\", \"focus other\")\n            .style(\"display\", \"none\");\n        focusother.append(\"circle\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"r\", 3);\n        focusother.append(\"text\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\");\n\n        // Events\n        $eventOverlay\n            .on(\"mouseover\", function() {\n                focusmarijuana.style(\"display\", null);\n                focusalcohol.style(\"display\", null);\n                focusnone.style(\"display\", null);\n                focusopioids.style(\"display\", null);\n                focusother.style(\"display\", null);\n                //focusage.style(\"display\", null);\n            })\n            .on(\"mouseout\", function() {\n                focusmarijuana.style(\"display\", \"none\");\n                focusalcohol.style(\"display\", \"none\");\n                focusnone.style(\"display\", \"none\");\n                focusopioids.style(\"display\", \"none\");\n                focusother.style(\"display\", \"none\");\n                //focusage.style(\"display\", \"none\");\n            })\n            .on(\"mousemove\", mousemove);\n\n        function mousemove() {\n\n\n\n            var x0 = x.invert(d3.mouse(this)[0])\n\n            // Alcohol\n            var i_alcohol = bisectAge(groups[current_town + \"alcohol\"].values, x0, 1),\n                d0_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol - 1],\n                d1_alcohol = groups[current_town + \"alcohol\"].values[i_alcohol],\n                d_alcohol = x0 - d0_alcohol.age > d1_alcohol.age - x0 ? d1_alcohol : d0_alcohol;\n\n            if (d_alcohol.value >= 0) {\n                focusalcohol.attr(\"transform\", \"translate(\" + x(d_alcohol.age) + \",\" + y(d_alcohol.value) + \")\");\n                focusalcohol.select(\"text\").text(percent(d_alcohol.value)).attr('transform', \"translate(-28,0)\");\n                focusalcohol.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusalcohol.select(\"circle\").attr(\"r\", 0);\n                focusalcohol.select(\"text\").text(\"\");\n            }\n\n            // Marijuana\n\n            var i_marijuana = bisectAge(groups[current_town + \"marijuana\"].values, x0, 1),\n                d0_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana - 1],\n                d1_marijuana = groups[current_town + \"marijuana\"].values[i_marijuana],\n                d_marijuana = x0 - d0_marijuana.age > d1_marijuana.age - x0 ? d1_marijuana : d0_marijuana;\n\n\n            // console.log(d_marijuana.value + \" \" + d_marijuana.age);\n            // console.log(d_marijuana.value >= 0);\n\n            if (d_marijuana.value >= 0) {\n                focusmarijuana.attr(\"transform\", \"translate(\" + x(d_marijuana.age) + \",\" + y(d_marijuana.value) + \")\");\n                focusmarijuana.select(\"text\").text(percent(d_marijuana.value)).attr('transform', \"translate(-28,0)\");\n                focusmarijuana.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusmarijuana.select(\"circle\").attr(\"r\", 0);\n                focusmarijuana.select(\"text\").text(\"\");\n            }\n\n            // None\n\n            var i_none = bisectAge(groups[current_town + \"none\"].values, x0, 1),\n                d0_none = groups[current_town + \"none\"].values[i_none - 1],\n                d1_none = groups[current_town + \"none\"].values[i_none],\n                d_none = x0 - d0_none.age > d1_none.age - x0 ? d1_none : d0_none;\n\n            if (d_none.value >= 0) {\n                focusnone.attr(\"transform\", \"translate(\" + x(d_none.age) + \",\" + y(d_none.value) + \")\");\n                focusnone.select(\"text\").text(percent(d_none.value));\n                focusnone.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusnone.select(\"circle\").attr(\"r\", 0);\n                focusnone.select(\"text\").text(\"\");\n            }\n\n\n            // Opioids\n            var i_opioids = bisectAge(groups[current_town + \"opioids\"].values, x0, 1),\n                d0_opioids = groups[current_town + \"opioids\"].values[i_opioids - 1],\n                d1_opioids = groups[current_town + \"opioids\"].values[i_opioids],\n                d_opioids = x0 - d0_opioids.age > d1_opioids.age - x0 ? d1_opioids : d0_opioids;\n\n            if (d_opioids.value >= 0) {\n                focusopioids.attr(\"transform\", \"translate(\" + x(d_opioids.age) + \",\" + y(d_opioids.value) + \")\");\n                focusopioids.select(\"text\").text(percent(d_opioids.value));\n                focusopioids.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusopioids.select(\"circle\").attr(\"r\", 0);\n                focusopioids.select(\"text\").text(\"\");\n            }\n\n\n            // other\n            var i_other = bisectAge(groups[current_town + \"other\"].values, x0, 1),\n                d0_other = groups[current_town + \"other\"].values[i_other - 1],\n                d1_other = groups[current_town + \"other\"].values[i_other],\n                d_other = x0 - d0_other.age > d1_other.age - x0 ? d1_other : d0_other;\n\n            //console.log(d_other.value);\n\n            if (d_other.value >= 0) {\n                focusother.attr(\"transform\", \"translate(\" + x(d_other.age) + \",\" + y(d_other.value) + \")\");\n                focusother.select(\"text\").text(percent(d_other.value));\n                focusother.select(\"circle\").attr(\"r\", 4);\n            } else {\n                focusother.select(\"circle\").attr(\"r\", 0);\n                focusother.select(\"text\").text(\"\");\n            }\n\n\n            // Adjust label horizontal positions.\n            if (x0 > 80) {\n                focusalcohol.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusnone.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 3).attr(\"y\", -7).attr(\"text-anchor\", \"beginning\");\n            } else {\n                focusalcohol.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusmarijuana.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusnone.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusopioids.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n                focusother.select(\"text\").attr(\"x\", 10).attr(\"text-anchor\", \"beginning\");\n            }\n\n\n\n        }\n\n\n    }); // @end d3.tsv()\n\n\n    function type(d, i) {\n\n        d3.keys(d).forEach(function(key) {\n            d[key] = +d[key];\n            if (key != 'age') {\n                if (!(key in groups)) {\n                    groups[key] = {\n                        'values': [{\n                            age: d.age,\n                            value: d[key]\n                        }]\n                    };\n                } else {\n                    groups[key]['values'].push({\n                        age: d.age,\n                        value: d[key]\n                    });\n                }\n            }\n        });\n\n        return d;\n\n    }\n\n\n\n\n})();\n\nfunction opioidsY2000(d, i) {\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };\n\n        function opioidsY2015(d, i) {\n            d3.select(\".circle.opioids.y2000\").attr(\"r\", 3).style(\"fill-opacity\", 0.75).style(\"stroke-width\", \"0\");\n            d3.select(\".circle.opioids.y2015\").attr(\"r\", 15).style(\"fill-opacity\", 0.9).style(\"stroke-width\", \"0\").style(\"stroke\", \"#8e1014\");\n            d3.select(\".btn-bsas\").classed('active', true);\n        };","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#binaryMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/rate_5yr_odc.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([8600])\n        .translate([280, 360]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity]).range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313']);\n\n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(function(d) {\n                if (data.key == 2005) {\n                    return '2001 to 2005';\n                } else if (data.key == 2010) {\n                    return '2006 to 2010';\n                } else if (data.key == 2015) {\n                    return '2011 to 2015';\n                }\n            })\n            .attr('class', 'vis-title')\n            .style('padding-bottom', \"3%\");\n\n\n\n\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN_1];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN_1.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN_1.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN_1] > 0) {\n                    town_value = d3.format(\".2f\")(data.values[geoData[0].properties.TOWN]);\n                } else { town_value = \"0\"; }\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \"<br>\" + town_value) + \" per 100,000\";\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n                d3.selectAll('path#bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0.1, 2.1, 6.1, 17.1, Infinity]).range([\"#d3d3d3\", '#db8d8d', '#c54949', \"#b71c1c\", '#801313'])\n    opChgScale.domainStrings = function() {\n        return (['0', '>0-2.1', '>2.1-6.1', '>6.1-17.1', '>17.1']);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'binaryMaps_legend', 'Average 5 year Opioid-Related Death Rate per 100,000 people');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n\n        var legendHeight = 60,\n            legendWidth = '90%';\n\n\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        // legendData.push({\n        //     d: -9999,\n        //     r: '#f1f1f1',\n        //     s: 'N/A*'\n        // });\n        for (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n        var unitWidth = 100 / legendData.length;\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", legendHeight / 3)\n            .attr(\"width\", function(d, i) {\n                return unitWidth + '%';\n            })\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + (unitWidth / 2) + '%';\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-binary-map').click(function() {\n        var date = $(this).data('date');\n        $('#binaryMaps').attr('data-active-date', date);\n        $('.js-toggle-binary-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);\nconsole.log(\"file loaded - binary\")\n","/* global d3, $, queue */\n// Dependency on queue.js\n\n(function() {\n    \"use strict\";\n\n    // Heights & Widths\n    var legendHeight = 60,\n        legendWidth = '100%',\n        mapWidth = 600,\n        mapHeight = 400;\n\n    var currentyear;\n    var svgContainer;\n    var opChgScale;\n\n    // Helper functions\n\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n\n\n    function initialize() {\n        queue()\n            //should be town polym data\n            .defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n            //.defer(d3.json, \"us_states_5m.geo.json\")\n            //should be opioid death data\n            .defer(d3.json, \"js/data/opioid_count_by_town.geo.json\")\n            //.defer(d3.csv, \"us_pop.csv\")\n            .awaitAll(generateMap);\n    }\n\n    function generateMap(error, results) {\n\n        var maTowns = results[0];\n        var maOpioid = results[1];\n\n\n        $('.controls-map').click(function() {\n            $(\"#odMap_timeline\").val($(this).data('select'));\n            setSymbology($(this).data('select'));\n        });\n\n        for (var i = 0; i < maTowns.features.length; i++) {\n            if (maTowns.features[i].properties.town !== maOpioid.features[i].TOWN) {\n                console.log('ASSERT failure for index: ' + i);\n                console.log(maTowns.features[i].properties.town + ' mismatch with ' + maOpioid.features[i].TOWN);\n                // alert('Input data corrupted: generation of map terminated.');\n                return;\n            }\n            maTowns.features[i].properties.OPIOIDSTATS = maOpioid.features[i].properties;\n        }\n\n        svgContainer = d3.select(\"#odMap_map\")\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + mapWidth + \" \" + mapHeight)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true)\n            .style(\"border\", \"0px solid steelblue\");\n\n        var tooltip = d3.select('#odMap_map').append('div')\n            .attr('class', 'hidden vis-tooltip');\n\n        //#eff3ff\n\n        opChgScale = d3.scale.threshold()\n            .domain([0.01, 1.01, 5.01, 15.01, 33.01, 64.01, Infinity])\n            .range([\"#f1f1f1\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#084594\"]);\n        opChgScale.domainStrings = function() {\n            return (['0', '1', '2-5', '6-15', '16-33', '34-64', '>64']);\n        };\n\n\n        var projection = d3.geo.conicConformal()\n            .parallels([41 + 43 / 60, 42 + 41 / 60])\n            .rotate([71 + 30 / 60, -41])\n            .scale([10000])\n            .translate([mapWidth / 1.8, mapHeight * 1.1]);\n\n        var geoPath = d3.geo.path()\n            .projection(projection);\n\n        svgContainer.selectAll(\"path\")\n            .data(maTowns.features)\n            .enter()\n            .append(\"path\")\n            .classed(\"deathmap\", true)\n            .attr(\"d\", function(d, i) {\n                return geoPath(d);\n            })\n            .style(\"stroke\", \"#2f363d\")\n            .style(\"stroke-width\", \"0.1px\")\n            .style(\"fill\", \"white\")\n            .on('mousemove', function(d) {\n                var mouse = d3.mouse(svgContainer.node()).map(function(d) {\n                    return parseInt(d);\n                });\n\n                var style = 'left:' + ((100 * mouse[0] / mapWidth) + 3) + '% !important;top:' + (100 * mouse[1] / mapHeight) + '% !important;';\n                // Add transformation based on where the mouse is (top, bottom, left, right) to keep it in view\n                var transformX = mouse[0] > mapWidth / 2 ? '-160%' : 0,\n                    transformY = mouse[1] > mapHeight / 2 ? '-100%' : 0;\n                style += 'transform: translate(' + transformX + ',' + transformY + ');';\n\n                var string_base = \"yr\";\n                var currentvalue = string_base.concat(currentyear);\n                var currentrate;\n\n                if (d.properties[currentvalue] > 0) {\n                    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n                } else if (d.properties[currentvalue] === 0) {\n                    currentrate = d3.format(\".0f\")(d.properties[currentvalue]);\n                } else {\n                    currentrate = \"N/A*\";\n                }\n\n                tooltip.classed('hidden', false)\n                    .attr('style', style)\n                    .html(\"<strong>\" + toTitleCase(d.properties.TOWN) + \"</strong> | \" + currentrate);\n            })\n\n        .on('mouseover', function(d, i) {\n                d3.select(this).style('fill-opacity', 0.25)\n                    .style(\"stroke\", \"white\")\n                    .style(\"stroke-width\", \"2px\");\n            })\n            .on('mouseout', function(d, i) {\n                tooltip.classed('hidden', true);\n                d3.selectAll('path.deathmap')\n                    .style(\"fill-opacity\", 1)\n                    .style(\"stroke\", \"#2f363d\")\n                    .style(\"stroke-width\", \"0.1px\");\n            });\n\n\n        getYear();\n        generateLegend(opChgScale, 'odMap_legend', 'Count of Opioid Related Deaths by Municipality');\n\n\n    } // generateMap\n\n    function getYear() {\n        autoSetYear();\n        $(\"#odMap_timeline\").on('input change', function() {\n        \tsetSymbology($(this).val());\n            stopSetYear();\n        });\n    }\n\n\n    var timer,\n        yearStart = 1999,\n        yearEnd = 2015;\n\n    function autoSetYear() {\n\n        if (yearStart < yearEnd) {\n            yearStart++;\n            $(\"#odMap_timeline\").val(yearStart);\n            setSymbology(yearStart);\n        } else { yearStart = 1999; };\n\n        timer = setTimeout(autoSetYear, 2000);\n    };\n\n    function stopSetYear() {\n        // yearStart = stoppedYear;\n        // yearEnd = stoppedYear;\n        clearTimeout(timer);\n        console.log(\"stopped\");\n\n    };\n\n    // initial setting on load\n\n    function setSymbology(year) {\n\n        var szAttr = 'yr' + year;\n        currentyear = year;\n        $('#odMap_titlePrefix').html('Opioid Related Deaths in Massachusetts in');\n        $('#odMap_fromYear').html(year);\n\n        $('#odMap_source').html('Sources: <a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/programs/admin/dmoa/vitals/\">Massachusetts Registry of Vital Records and Statistics</a>, ' +\n            '<br><a target=\"_blank\" href=\"http://www.mass.gov/eohhs/gov/departments/dph/\">Massachusetts Department of Public Health</a>.</>');\n\n        svgContainer.selectAll(\"path.deathmap\")\n            .transition()\n            .duration(500)\n            .style(\"fill\", function(d, i) {\n                var delta = +d.properties.OPIOIDSTATS[szAttr];\n                return (delta === -9999) ? '#f1f1f1' : opChgScale(delta);\n            });\n    }\n\n    function generateLegend(scale, szDivId, szCaption) {\n\n        var svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight);\n\n        var g = svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        //legendData.push({\n        //d: -9999,\n        //r: '#f1f1f1',\n        //s: 'N/A'\n        //});\n        for (var i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n        var unitWidth = 100 / legendData.length;\n\n        g.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", legendHeight / 3)\n            .attr(\"width\", function(d, i) {\n                return unitWidth + '%';\n            })\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + '%';\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        g.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return (i * unitWidth) + (unitWidth / 2) + '%';\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        g.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    } // generateLegend()\n\n\n    $(document).ready(initialize);\n})();\n","var Vis = (function(d3) {\n    \"use strict\";\n\n    var visualizationWrapper = d3.select('#treatmentMaps_maps');\n\n    var geojson;\n    queue()\n        .defer(d3.json, 'js/data/TOWN.geo.json')\n        .defer(d3.json, 'js/data/maps_susbtance_data.json')\n        .await(visualize);\n\n    var width = 525,\n        height = 325;\n\n    var projection = d3.geo.conicConformal()\n        .parallels([41 + 43 / 60, 42 + 41 / 60])\n        .rotate([71 + 30 / 60, -41])\n        .scale([7500])\n        .translate([280, 330]);\n\n    var $maps_sub = d3.select(\"#carte\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    var path = d3.geo.path().projection(projection),\n        palette = d3.scale.threshold().domain([-0.1, 0.01, 0.14, 0.24, 0.33, 0.46, 1.1])\n        .range(['#d1d1d1','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450']);\n        \n\n\n    function visualize(error, states, data) {\n\n\n\n        data.data.forEach(function(data, i) {\n            var wrapper = visualizationWrapper.append('div').attr('class', 'map-wrapper').append('div');\n\n            createMap(wrapper, states, data);\n        });\n    }\n\n\n\n    function createMap(wrapper, geo, data) {\n\n        wrapper.append('span')\n            .text(data.key)\n            .attr('class', 'vis-title');\n        wrapper.append('span')\n            .text(\"\")\n            .attr('class', 'selection-label');\n\n        var $maps_sub = wrapper\n            .classed(\"svg-container\", true) //container class to make it responsive\n            .append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n            //class to make it responsive\n            .classed(\"svg-content-responsive\", true);\n\n        $maps_sub.selectAll('path')\n            .data(geo.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0px\")\n            .style('fill', function(d, i) {\n                var value = data.values[d.properties.TOWN];\n                return palette(value);\n            })\n            .on('mouseover', function(d, i) {\n\n            })\n            .on('mouseout', function(d, i) {\n\n            })\n            .attr('class', function(d) {\n                return d.properties.TOWN.toLowerCase()\n            })\n            .attr('id', 'bsasmap')\n            .on('mouseenter', function(d, i) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'select');\n                // var currentState = this;\n                // console.log(this);\n                // d3.select(this).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n            })\n            .on('mouseleave', function(d) {\n                notify('.' + d.properties.TOWN.toLowerCase(), 'unselect');\n\n            })\n            .on('select', function(self) {\n                var geoData = self.data();\n                var town_value\n\n                if (data.values[geoData[0].properties.TOWN] >= 0) {\n                    //console.log(data.values[geoData[0].properties.TOWN] == 'Null');\n                    town_value = d3.format(\"%,.2f\")(data.values[geoData[0].properties.TOWN]);\n                } else {\n                    town_value = \"N/A\";\n                };\n\n                //console.log(town_value);\n\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = (geoData[0].properties.TOWN_1 + \":  \" + town_value);\n                d3.select((self.node())).style('fill-opacity', 0.4).style(\"stroke\", \"white\").style(\"stroke-width\", \"1.5px\");\n                //console.log(geoData[0].properties);\n            })\n            .on('unselect', function(self) {\n                //     self.node().parentNode.parentNode.getElementsByTagName('p2')[0].innerHTML = \"\";\n                //     d3.selectAll('#treatmentMaps_maps path').style({ 'fill-opacity': 1 }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n                self.node().parentNode.parentNode.getElementsByClassName('selection-label')[0].innerHTML = \"\";\n                d3.selectAll('path#bsasmap').style({\n                    'fill-opacity': 1\n                }).style(\"stroke\", \"white\").style(\"stroke-width\", \"0.0px\");\n            })\n\n        function notify(selector, eventName) {\n            d3.selectAll(selector)[0].forEach(function(el, i) {\n                var shape = d3.select(el);\n                shape.on(eventName)(shape);\n            });\n        }\n\n    }\n\n    var opChgScale = d3.scale.threshold().domain([0, 0.1, 0.15, 0.35, 0.6, 1.00]).range(['#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'])\n    opChgScale.domainStrings = function() {\n        return (['0%', '>0-14%', '>14-24%', '>24-33%', '>33-46%', '>46-100%'\n        ]);\n    };\n    //popChgScale.domainStrings = function() { return (['< 0.1', '0.25-0.50', '0.50-0.75', '0.75-1.0', '1.0-1.25',\n    //'1.25-1.50', '1.50-1.75', '1.75-2.0', '> 2.0']); };\n    generateLegend_map_sub(opChgScale, 'treatmentMaps_legend', 'Heroin Primary Substance of Abuse upon Seeking Treatment (%)');\n\n    function generateLegend_map_sub(scale, szDivId, szCaption) {\n        var width = 550,\n            height = 70;\n\n        var $maps_sub_svg = d3.select('#' + szDivId).append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", height);\n\n        var $maps_sub_legends = $maps_sub_svg.append(\"g\");\n\n        // Create data array.\n        var legendData = [];\n        legendData.push({\n            d: -9999,\n            r: '#d1d1d1',\n            s: 'N/A*'\n        });\n        var i;\n        for (i = 0; i < scale.domain().length; i++) {\n            legendData.push({\n                d: scale.domain()[i],\n                r: scale.range()[i],\n                s: scale.domainStrings()[i]\n            });\n        }\n\n        $maps_sub_legends.selectAll(\"rect\")\n            .data(legendData)\n            .enter().append(\"rect\")\n            .attr(\"height\", 20)\n            .attr(\"width\", 60)\n            .attr(\"x\", function(d, i) {\n                return (i * (100 / legendData.length)) + \"%\";\n            })\n            .attr(\"y\", 20)\n            .style(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"0.25px\")\n            .style(\"fill\", function(d, i) {\n                return d.r;\n            });\n\n        $maps_sub_legends.selectAll(\"text\")\n            .data(legendData)\n            .enter().append(\"text\")\n            .attr('text-anchor', 'middle')\n            .attr(\"x\", function(d, i) {\n                return ((i * (100 / legendData.length)) + 7) + \"%\";\n            })\n            .attr(\"y\", 55)\n            .text(function(d, i) {\n                return d.s;\n            });\n\n        $maps_sub_legends.append(\"text\")\n            .attr(\"class\", \"vis-caption\")\n            .attr(\"y\", 12)\n            .text(szCaption);\n    }\n\n\n\n    $('.js-toggle-treatment-map').click(function() {\n        var date = $(this).data('date');\n        $('#treatmentMaps').attr('data-active-date', date);\n        $('.js-toggle-treatment-map').removeClass('active');\n        $(this).addClass('active');\n    });\n\n})(d3);","/* global d3 */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var selector = '#deathLines';\r\n    var rootNode = document.querySelector(selector);\r\n\r\n    // Initial dimensions\r\n    var dimensions = {\r\n        margin: {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 50\r\n        },\r\n        width: rootNode.clientWidth,\r\n        height: 350\r\n    };\r\n\r\n    var MDG = 29;\r\n\r\n\r\n    var Massachusetts = [\"MA\"];\r\n    var UnitedStates = [\"USA\"];\r\n\r\n    var lines;\r\n\r\n\r\n    // Setup\r\n\r\n    //Set up date formatting and years\r\n    var dateFormat = d3.time.format(\"%Y\");\r\n    //Set up scales\r\n    var xScale = d3.time.scale();\r\n    var yScale = d3.scale.sqrt();\r\n    var xAxis_death = d3.svg.axis();\r\n    var yAxis_death = d3.svg.axis();\r\n    var line_death = d3.svg.line();\r\n\r\n    //Create the empty SVG image\r\n    var $lines_death = d3.select(selector)\r\n        .append(\"svg\")\r\n        .attr(\"width\", dimensions.width)\r\n        .attr(\"height\", dimensions.height);\r\n\r\n\r\n    var $lines_death_x_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-x-axis\")\r\n        .attr(\"transform\", \"translate(0,\" + (dimensions.height - dimensions.margin.bottom - dimensions.margin.top) + \")\")\r\n        .call(xAxis_death);\r\n\r\n    var $lines_death_x_axis_label = $lines_death_x_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left)\r\n        .attr(\"y\", dimensions.margin.bottom)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-x-axis-label\")\r\n        .text(\"Year\");\r\n\r\n    var $lines_death_y_axis = $lines_death.append(\"g\")\r\n        .attr(\"class\", \"vis-y-axis\")\r\n        .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')')\r\n        .call(yAxis_death);\r\n\r\n    var $lines_death_y_axis_label = $lines_death_y_axis\r\n        .append(\"text\")\r\n        .attr(\"x\", -dimensions.margin.top)\r\n        .attr(\"y\", -dimensions.margin.left)\r\n        .attr(\"dy\", \"1em\")\r\n        .attr(\"class\", \"vis-y-axis-label\")\r\n        .text(\"Age-Adjusted Opioid Death Rate per 100,000 People\");\r\n\r\n\r\n    var $lines_death_ma_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-ma\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n        .attr(\"y\", yScale(23.8) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"MA\");\r\n\r\n    var $lines_death_usa_label = $lines_death.append(\"text\")\r\n        .attr(\"class\", \"aside-usa\")\r\n        .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n        .attr(\"y\", yScale(10.0) - 6)\r\n        .attr(\"dy\", \"1em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(\"USA\");\r\n\r\n    // add a tooltip to the page - not to the svg itself!\r\n    var tooltip_death = d3.select(\"#deathLines\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"vis-tooltip hidden\");\r\n\r\n\r\n\r\n\r\n\r\n    // Actually do stuff.\r\n    d3.csv(\"js/data/death_states.csv\", function(data) {\r\n        setupData(data);\r\n        render();\r\n        // bindEvents();\r\n        window.addEventListener('resize', render);\r\n    });\r\n\r\n\r\n    function setupData(data) {\r\n        var years = d3.keys(data[0]).slice(1, 65);\r\n         //Create a new, empty array to hold our restructured dataset\r\n        var dataset = [];\r\n\r\n        //Loop once for each row in data\r\n        data.forEach(function(d, i) {\r\n            var OMRs = [];\r\n            years.forEach(function(y) { //Loop through all the years - and get the rates for this data element\r\n                if (d[y]) { /// What we are checking is if the \"y\" value - the year string from our array, which would translate to a column in our csv file - is empty or not.\r\n                    OMRs.push({ //Add a new object to the new rates data array - for year, rate. These are OBJECTS that we are pushing onto the array\r\n                        year: y,\r\n                        rate: d[y], // this is the value for, for example, d[\"2004\"]\r\n                        Geography: d.Geography,\r\n                        FullName: d.FullName\r\n                    });\r\n                }\r\n            });\r\n            dataset.push({ // At this point we are accessing one index of data from our original csv \"data\", above and we have created an array of year and rate data from this index. We then create a new object with the Geography value from this index and the array that we have made from this index.\r\n                Geography: d.Geography,\r\n                FullName: d.FullName,\r\n                rates: OMRs // we just built this from the current index.\r\n            });\r\n        });\r\n\r\n        data.dataset = dataset;\r\n\r\n        //Set scale domains - max and min of the years\r\n        xScale.domain(\r\n            d3.extent(years, function(d) {\r\n                return dateFormat.parse(d);\r\n            }));\r\n\r\n        // max of rates to 0 (reversed, remember)\r\n        yScale.domain([\r\n            d3.max(dataset, function(d) {\r\n                return d3.max(d.rates, function(d) {\r\n                    return +d.rate;\r\n                });\r\n            }),\r\n            0\r\n        ]);\r\n\r\n        var groups = $lines_death.selectAll(\"g.lines-death\")\r\n            .data(dataset)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"lines-death\");\r\n\r\n        lines = groups.selectAll(\"path\")\r\n            .data(function(d) { // because there's a group with data already...\r\n                return [d.rates]; // it has to be an array for the line function\r\n            })\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line-death\")\r\n            .classed(\"massachusetts\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, Massachusetts) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            })\r\n            .classed(\"usa\", function(d, i) {\r\n                //console.log(d[i].Geography);\r\n                if ($.inArray(d[i].Geography, UnitedStates) !== -1) {\r\n                    //console.log(\"true\");\r\n                    return true;\r\n                } else {\r\n                    //console.log(\"false\");\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n    function updateDimensions() {\r\n        dimensions.width = rootNode.clientWidth;\r\n        if(dimensions.width < 500) {\r\n            dimensions.margin.left = 30;\r\n        } else {\r\n            dimensions.margin.left = 50;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function render() {\r\n        updateDimensions();\r\n\r\n        $lines_death.attr('width', dimensions.width);\r\n\r\n        xScale.range([dimensions.margin.left, dimensions.width - dimensions.margin.right - dimensions.margin.left]);\r\n        yScale.range([dimensions.margin.top, dimensions.height - dimensions.margin.bottom -dimensions.margin.top]);\r\n\r\n        //Configure axis generators\r\n        xAxis_death.scale(xScale)\r\n            .orient(\"bottom\")\r\n            .ticks((dimensions.width < 500 ? 8 : 15))\r\n            .tickFormat(function(d) {\r\n                return dateFormat(d);\r\n            })\r\n            .innerTickSize([8]);\r\n\r\n        yAxis_death.scale(yScale)\r\n            .orient(dimensions.width < 500 ? 'right' : 'left')\r\n            .innerTickSize([8]);\r\n\r\n        $lines_death_x_axis_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left);\r\n\r\n        $lines_death_y_axis_label\r\n            .attr(\"y\", -dimensions.margin.left);\r\n\r\n        if(dimensions.width < 500) {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        } else {\r\n            $lines_death_y_axis\r\n                .attr(\"transform\", \"translate(\" + dimensions.margin.left + \",\" + (-dimensions.margin.top / 2) + ')');\r\n        }\r\n\r\n        //Configure line\r\n        // each line dataset must have a d.year and a d.rate for this to work.\r\n        line_death.x(function(d) {\r\n                return xScale(dateFormat.parse(d.year));\r\n            })\r\n            .y(function(d) {\r\n                return yScale(+d.rate);\r\n            })\r\n            .defined(function(d) {\r\n                return yScale(+d.rate);\r\n            });\r\n\r\n\r\n        $lines_death_x_axis\r\n            .call(xAxis_death);\r\n\r\n        $lines_death_y_axis\r\n            .call(yAxis_death);\r\n\r\n\r\n        $lines_death_ma_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 15)\r\n            .attr(\"y\", yScale(23.8) - 6);\r\n\r\n        $lines_death_usa_label\r\n            .attr(\"x\", dimensions.width - dimensions.margin.left - 45)\r\n            .attr(\"y\", yScale(10.0) - 6);\r\n\r\n        lines.attr(\"d\", line_death);\r\n    }\r\n\r\n    function bindEvents() {\r\n        d3.selectAll(\"g.lines-death\")\r\n            .on(\"mouseover\", mouseoverFunc)\r\n            .on(\"mouseout\", mouseoutFunc)\r\n            .on(\"mousemove\", mousemoveFunc);\r\n\r\n        function mouseoutFunc() {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", false);\r\n            tooltip_death.classed(\"hidden\", true);\r\n        }\r\n\r\n        function mouseoverFunc(d, i) {\r\n            d3.selectAll(\"path.line-death\").classed(\"unfocused\", true);\r\n            d3.select(this).select(\"path.line-death\").classed(\"unfocused\", false).classed(\"focused\", true);\r\n            tooltip_death.classed(\"hidden\", false).html(d.FullName);\r\n        }\r\n\r\n        var coordinates = [0, 0];\r\n\r\n        function mousemoveFunc(d) {\r\n            coordinates = d3.mouse(this);\r\n            var x = coordinates[0];\r\n            var y = coordinates[1];\r\n            tooltip_death\r\n                .style(\"top\", y + \"px\")\r\n                .style(\"left\", x + \"px\")\r\n                .style('position', 'absolute')\r\n                .style('z-index', 1001);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n","/* global d3 */\n(function() {\n    \"use strict\";\n\n    var rootSelector = '#fentanyl-lines';\n    var rootNode = document.querySelector(\"#fentanyl-lines\");\n\n    var chartData = [{\n    \t\"date\": new Date(\"01/01/2014\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.22\",\n    \t\"Heroin\": \"0.41\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2014\"),\n    \t\"FentanylHeroin\": \"0.18\",\n    \t\"Fentanyl\": \"0.19\",\n    \t\"Heroin\": \"0.49\",\n    \t\"Methadone\": \"0.07\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2014\"),\n    \t\"FentanylHeroin\": \"0.14\",\n    \t\"Fentanyl\": \"0.14\",\n    \t\"Heroin\": \"0.53\",\n    \t\"Methadone\": \"0.10\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2014\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.27\",\n    \t\"Heroin\": \"0.35\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.04\"\n    \t}, {\n    \t\"date\": new Date(\"04/01/2015\"),\n    \t\"FentanylHeroin\": \"0.24\",\n    \t\"Fentanyl\": \"0.38\",\n    \t\"Heroin\": \"0.29\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"07/01/2015\"),\n    \t\"FentanylHeroin\": \"0.19\",\n    \t\"Fentanyl\": \"0.40\",\n    \t\"Heroin\": \"0.30\",\n    \t\"Methadone\": \"0.06\"\n    \t}, {\n    \t\"date\": new Date(\"10/01/2015\"),\n    \t\"FentanylHeroin\": \"0.22\",\n    \t\"Fentanyl\": \"0.43\",\n    \t\"Heroin\": \"0.24\",\n    \t\"Methadone\": \"0.05\"\n    \t}, {\n    \t\"date\": new Date(\"01/01/2016\"),\n    \t\"FentanylHeroin\": \"0.15\",\n    \t\"Fentanyl\": \"0.50\",\n    \t\"Heroin\": \"0.17\",\n    \t\"Methadone\": \"0.04\"\n   }];\n\n\n\n\n    var yearformat = d3.time.format(\"%Y\");\n\n    function quarter (date) {\n    \tvar date2 = new Date();\n    \tdate2.setMonth(date.getMonth() - 10);\n    \tvar q = Math.ceil((date2.getMonth()) / 3);\n    \treturn \"Q\" + q;\n    }\n\n    var seriesColors = [\"#333333\", \"#b71c1c\", \"#0071bc\", \"#333333\"];\n    var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n    var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n    var seriesPointShapes = [\"circle\", \"circle\", \"circle\", \"circle\"];\n    var seriesPointWidth = [\"1px\", \"1.5px\", \"1.5px\", \"1px\"];\n    var seriesPointFill = [\"#a50f15\", \"#08519c\", \"#636363\", \"#636363\"];\n    var xLabel = \"date\";\n\n\n\n\n    // Dimensions\n\n    var margin = {\n      top: 10, // space for the legend\n      right: 15,\n      bottom: 50,\n      left: 42\n    };\n\n    var wrapper_width = 540;\n    var wrapper_height = 400;\n    var width = wrapper_width - margin.left - margin.right;\n    var height = wrapper_height - margin.top - margin.bottom;\n\n\n    var x = d3.scale.ordinal().rangePoints([0, width]);\n    var x2 = d3.scale.ordinal().rangePoints([0, width]);\n\n    var y = d3.scale.linear().range([height, 0]);\n\n    var color = d3.scale.ordinal().range(seriesColors);\n\n    var lineStroke = d3.scale.ordinal().range(seriesLineStrokes);\n\n    var lineDash = d3.scale.ordinal().range(seriesLineDash);\n\n    var pointShape = d3.scale.ordinal().range(seriesPointShapes);\n\n    var pointWidth = d3.scale.ordinal().range(seriesPointWidth);\n\n    var pointFill = d3.scale.ordinal().range(seriesPointFill);\n\n    var xAxis_fent = d3.svg.axis()\n                    \t.scale(x)\n                    \t.orient(\"bottom\")\n                    \t.ticks(d3.time.months, 3)\n                    \t.tickFormat(quarter);\n\n\n    var xAxis2_fent = d3.svg.axis()\n                      \t.scale(x)\n                      \t.ticks(d3.time.years, 1)\n                      \t.tickFormat(yearformat)\n                      \t.tickSize(3, 0)\n                      \t.tickPadding(1)\n                      \t.orient(\"bottom\");\n\n    //percentage formatiing\n    var formatPercent = d3.format(\".0%\");\n\n    var yAxis_fent = d3.svg.axis()\n                    \t.scale(y)\n                    \t.orient(\"left\")\n                    \t.tickFormat(formatPercent)\n                    \t.ticks(5)\n                    \t.tickSize(3, 0)\n                    \t.tickPadding(1);\n\n    //create tooltipFent\n\n    // add a tooltipFent to the page - not to the svg itself!\n    var tooltipFent = d3.select(\"body\").append(\"div\").attr(\"class\", \"vis-tooltip\");\n\n    var line = d3.svg.line()\n              \t.x(function(d) {\n              \t    return x(d.label);\n              \t})\n              \t.y(function(d) {\n              \t    return y(d.value);\n              \t});\n\n    var $svg = d3.select(document.querySelector(rootSelector))\n      .append(\"svg\");\n    var $lines_fent = $svg.append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var varSeries = d3.keys(chartData[0]).filter(function(key) {\n      return key !== xLabel;\n    });\n\n    color.domain(varSeries);\n    lineStroke.domain(varSeries);\n    lineDash.domain(varSeries);\n    pointShape.domain(varSeries);\n    pointWidth.domain(varSeries);\n    pointFill.domain(varSeries);\n\n    var seriesData = varSeries.map(function(name) {\n    \treturn {\n    \t    name: name,\n    \t    values: chartData.map(function(d) {\n        \t\treturn {\n        \t\t    name: name,\n        \t\t    label: d[xLabel],\n        \t\t    value: +d[name]\n        \t\t};\n    \t    })\n    \t};\n    });\n\n\n    x.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    x2.domain(chartData.map(function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(seriesData, function(c) {\n          return d3.min(c.values, function(d) {\n      \t//return d.value;\n      \treturn 0;\n          });\n      }),\n      d3.max(seriesData, function(c) {\n          return d3.max(c.values, function(d) {\n      \treturn d.value;\n        //return 0.6\n          });\n      })\n    ]);\n\n    var x_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-x-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis_fent);\n\n    var x_axis_lines = x_axis.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.style(\"stroke-width\", \"1.5px\")\n    \t.call(xAxis_fent);\n\n    var x_axis2 = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-axis\")\n    \t.attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n    \t.call(xAxis2_fent)\n    var x_axis2_text = x_axis2\n    \t.append(\"text\")\n    \t.attr(\"x\", width - margin.left)\n    \t.attr(\"y\", margin.bottom - 32)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-x-axis-label\")\n    \t.text(\"Quarter\");\n\n\n    var y_axis = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"vis-y-axis\")\n    \t.call(yAxis_fent)\n      //.append(\"tspan\")\n      .append(\"text\")\n    \t.attr(\"x\", 0)\n    \t.attr(\"y\", -44)\n    \t.attr(\"dy\", \"1em\")\n    \t.attr(\"class\", \"vis-y-axis-label\")\n    \t.text(\"Percent Opioid Deaths\")\n      //.html(\"<sup>1</sup>\");\n\n    var series = $lines_fent.selectAll(\".series\")\n    \t.data(seriesData)\n    \t.enter().append(\"g\")\n    \t.attr(\"class\", \"seriesData\");\n\n\n    var $lines = series.append(\"path\")\n    \t.attr(\"class\", \"line\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.style(\"stroke\", function(d) {\n    \t    return color(d.name);\n    \t})\n    \t.style(\"stroke-width\", function(d) {\n    \t    return lineStroke(d.name);\n    \t})\n    \t.style(\"stroke-dasharray\", function(d) {\n    \t    return lineDash(d.name);\n    \t})\n    \t.style(\"fill\", \"none\");\n\n\n    var $lines_hit_area = series.append(\"path\")\n    \t.attr(\"class\", \"hit-area-ext\")\n    \t.attr(\"d\", function(d) {\n    \t    return line(d.values);\n    \t})\n    \t.attr(\"style\", \"stroke:transparent;stroke-width:10px\")\n    \t.style(\"fill\", \"none\");\n\n\n    // var x_axis_label_fh = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].FentanylHeroin) - 5)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Fentanyl & Heroin\");\n\n    // var x_axis_label_m = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    // \t.attr(\"x\", width + 5)\n    // \t.attr(\"y\", y(chartData[8].Methadone) - 7)\n    // \t.attr(\"dy\", \"1em\")\n    // \t.text(\"Methadone\");\n\n    // var x_axis_label_h = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Heroin) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Heroin\");\n\n    // var x_axis_label_f = $lines_fent.append(\"text\")\n    // \t.attr(\"class\", \"vis-data-label\")\n    //   .attr(\"x\", width + 5)\n    //   .attr(\"y\", y(chartData[8].Fentanyl) - 10)\n    //   .attr(\"dy\", \"1em\")\n    //   .text(\"Fentanyl\");\n\n\n\n    /*======================================================================\n     Mouse Functions\n    ======================================================================*/\n    var focus = $lines_fent.append(\"g\")\n    \t.attr(\"class\", \"focus\")\n    \t.classed(\"hidden\", true);\n\n    focus.append(\"circle\")\n    \t.style(\"stroke-width\", 1)\n    \t.attr(\"r\", 6)\n    \t.attr('pointer-events', 'none');\n\n    d3.selectAll(\"g.seriesData\")\n    \t.on(\"mouseover\", mouseoverFunc)\n    \t.on(\"mouseout\", mouseoutFunc)\n    \t.on(\"mousemove\", mousemoveFunc);\n\n    function mouseoutFunc() {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", false);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", false).attr(\"d\", d3.svg.symbol().type(\"circle\").size(15)).style(\"fill-opacity\", \"1\");\n      \ttooltipFent.classed(\"hidden\", true); // this sets it to invisible!\n      \tfocus.classed(\"hidden\", true);\n    }\n\n    function mouseoverFunc(d, i) {\n\n    \td3.selectAll(\"path.line\").classed(\"unfocused\", true);\n    \td3.selectAll(\"path.point\").classed(\"unfocused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(10)).style(\"fill-opacity\", \"0\");\n    \t// below code sets the sub set of data even more - they only go \"unfocused\" if a certain line is selected. Otherwise, they remain at the regular opacity. .\n    \t//         if(!d3.select(this).select(\"path.line\").classed(\"ssAfrica\")) {\n    \t//             d3.selectAll(\"path.ssAfrica\").classed(\"unfocused\", false);\n    \t//         }\n\n    \td3.select(this).select(\"path.line\").classed(\"unfocused\", false).classed(\"focused\", true);\n    \t//d3.select(this).select(\"path.point\").classed(\"unfocused\", false).classed(\"focused\", true).attr(\"d\", d3.svg.symbol().type(\"circle\").size(0));\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1)\n\n    \ttooltipFent.classed(\"hidden\", false)\n    \t.html(percentVal);\n    \t//console.log(d.rates[i]);\n    \t//console.log(d3.select(this).select(\"path.point\"));\n    \tfocus.classed(\"hidden\", false);\n    }\n\n    function mousemoveFunc(d) {\n\n    \t//console.log(\"events\", window.event, d3.event);\n    \tvar x0 = d3.mouse(this)[0];\n    \tvar y0 = d3.mouse(this)[1]\n    \tvar y1 = y.invert(y0);\n    \tvar percentVal = d3.format(\".0%\")(y1);\n\n    \tfocus.attr(\"transform\", \"translate(\" + x0 + \",\" + y0 + \")\");\n\n\n\n    \ttooltipFent\n    \t    .style(\"top\", (d3.event.pageY - 45) + \"px\")\n    \t    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n    \t    .html(percentVal);\n    }\n\n\n\n    function render () {\n      updateWidth(rootNode.clientWidth);\n\n      x.rangePoints([0, width]);\n      x2.rangePoints([0, width]);\n      y.range([height, 0]);\n      xAxis_fent.scale(x);\n      xAxis2_fent.scale(x);\n      yAxis_fent.scale(y);\n      // update lines\n      line.x(function(d) {\n          return x(d.label);\n        })\n        .y(function(d) {\n            return y(d.value);\n        });\n\n      x_axis\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis_fent);\n\n      x_axis2\n        .attr(\"transform\", \"translate(0,\" + (height + 15) + \")\")\n        .call(xAxis2_fent);\n\n      x_axis2_text\n      .attr(\"x\", width - margin.left)\n      .attr(\"y\", margin.bottom - 32);\n\n\n      y_axis.call(yAxis_fent);\n\n      $svg.attr(\"width\", wrapper_width).attr(\"height\", wrapper_height);\n\n      // x_axis_label_fh.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].FentanylHeroin) - 5);\n\n      // x_axis_label_m.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Methadone) - 7);\n\n      // x_axis_label_h.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Heroin) - 10);\n\n      // x_axis_label_f.attr(\"x\", width + 5).attr(\"y\", y(chartData[8].Fentanyl) - 10);\n\n      $lines.attr(\"d\", function(d) {\n          return line(d.values);\n      });\n\n      $lines_hit_area.attr(\"d\", function(d) {\n        return line(d.values);\n      });\n\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-margin.right*6)+\",0)\");\n    }\n\n    function updateWidth(componentWidth) {\n      wrapper_width = componentWidth;\n      width = wrapper_width - margin.left - margin.right;\n      height = wrapper_height - margin.top - margin.bottom;\n    }\n\n    var $legend = $svg.append(\"g\");\n    var $item = $legend.append(\"g\");\n\n    function renderLegend() {\n      \n\n      var legendItems = [\n        \"FentanylHeroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      var legendItemsTranslate = [\n        \"Fentanyl & Heroin\",\n        \"Fentanyl\",\n        \"Heroin\",\n        \"Methadone\"\n      ];\n      $legend.attr(\"class\", \"vis-legend\").attr(\"transform\", \"translate(\"+(width-(margin.right*8))+\",0)\");\n      var lineHeight = 15;\n      // var seriesColors = [\"#ffffff\", \"#b71c1c\", \"#0071bc\", \"#ffffff\"];\n      // var seriesLineStrokes = [\"1.5px\", \"3.5px\", \"3.5px\", \"2px\"];\n      // var seriesLineDash = [\"10,10,10,10\", \"0,0,0,0\", \"0,0,0,0\", \"2,6,0,0\"];\n\n      legendItems.forEach(function(item, i) {\n      $item = $legend.append(\"g\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"transform\", \"translate(0,\"+(i*lineHeight)+\")\");\n\n        $item.append(\"svg:line\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 5)\n          .attr(\"x2\", 30)\n          .attr(\"y2\", 5)\n          .style(\"stroke\", seriesColors[i])\n          .style(\"stroke-dasharray\", seriesLineDash[i])\n          .style(\"stroke-width\", seriesLineStrokes[i]);\n\n        $item.append(\"text\")\n          .attr(\"class\", \"legend-item-\"+item)\n          .attr(\"x\", 40)\n          .attr(\"y\", 10)\n          .text(legendItemsTranslate[i]);\n      });\n    }\n\n\n    render();\n    renderLegend();\n\n    window.addEventListener('resize', render);\n    //window.addEventListener('resize', renderLegend);\n\n\n\n})();\n","$(document).ready(function() {\n    var prescription = [{\n            \"Yes\": 83,\n            \"No\": 17\n        }, {\n            \"Yes\": 57,\n            \"No\": 43\n        }, {\n            \"Yes\": 50,\n            \"No\": 50\n        }, {\n            \"Yes\": 37,\n            \"No\": 63\n        }],\n\n        heroin = [{\n            \"Yes\": 65,\n            \"No\": 35\n        }, {\n            \"Yes\": 28,\n            \"No\": 72\n        }, {\n            \"Yes\": 20,\n            \"No\": 80\n        }, {\n            \"Yes\": 13,\n            \"No\": 87\n        }],\n\n        fentanyl = [{\n            \"Yes\": 68,\n            \"No\": 32\n        }, {\n            \"Yes\": 30,\n            \"No\": 70\n        }, {\n            \"Yes\": 22,\n            \"No\": 78\n        }, {\n            \"Yes\": 17,\n            \"No\": 83\n        }],\n\n        both = [{\n            \"Yes\": 64,\n            \"No\": 36\n        }, {\n            \"Yes\": 24,\n            \"No\": 76\n        }, {\n            \"Yes\": 15,\n            \"No\": 85\n        }, {\n            \"Yes\": 9,\n            \"No\": 91\n        }],\n\n        methadone = [{\n            \"Yes\": 76,\n            \"No\": 24\n        }, {\n            \"Yes\": 46,\n            \"No\": 54\n        }, {\n            \"Yes\": 41,\n            \"No\": 59\n        }, {\n            \"Yes\": 27,\n            \"No\": 73\n        }],\n\n        buprenorphine = [{\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }, {\n            \"Yes\": 60,\n            \"No\": 40\n        }],\n\n        dataset = [{\n                data: [{\n                    count: 867,\n                    name: 'Heroin'\n                }],\n                name: 'Heroin'\n            }, {\n                data: [{\n                    count: 288,\n                    name: 'Fentanyl'\n                }],\n                name: 'Fentanyl'\n            }, {\n                data: [{\n                    count: 249,\n                    name: 'Fentanyl & Heroin'\n                }],\n                name: 'Fentanyl & Heroin'\n            }, {\n                data: [{\n                    count: 154,\n                    name: 'Prescription Opioids'\n                }],\n                name: 'Prescription Opioids'\n            }, {\n                data: [{\n                    count: 84,\n                    name: 'Methadone'\n                }],\n                name: 'Methadone'\n            },\n            //  {\n            //     data: [{\n            //         count: 15,\n            //         name: 'Buprenorphine'\n            //     }],\n            //     name: 'Buprenorphine'\n            // }\n\n        ];\n\n\n    var data_substance = prescription;\n    var time = 0;\n    asignVal_substance(data_substance, time);\n\n    $(\".btn-substance\").on('click', function() {\n        var sub = parseInt($(this).val());\n        var substance;\n        $(\".btn-time\").removeClass('disableClick disabled');\n        switch (sub) {\n            case 0:\n                substance = prescription;\n                break;\n            case 1:\n                substance = heroin;\n                break;\n            case 2:\n                substance = fentanyl;\n                break;\n            case 3:\n                substance = both;\n                break;\n            case 4:\n                substance = methadone;\n                break;\n            case 5:\n                substance = buprenorphine;\n                $(\".btn-time\").removeClass('active').addClass('disableClick disabled');\n                $(\"#studyperiod\").addClass('active');\n                break;\n        }\n        data_substance = substance;\n        asignVal_substance(data_substance, time);\n    });\n\n\n    $(\".btn-time\").on('click', function() {\n        $('.btn-time').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        time = parseInt($(this).val());\n        asignVal_substance(data_substance, time);\n        var time_period;\n        switch (time) {\n            case 0:\n                time_period = \"during 2011–2014\";\n                break;\n            case 1:\n                time_period = \"6 Months Before Death\";\n                break;\n            case 2:\n                time_period = \"3 Months Before Death\";\n                break;\n            case 3:\n                time_period = \"1 Month Before Death\";\n                break;\n        }\n        $(\"#time-period\").html(time_period.toLowerCase());\n        $(\"#label_blocks\").html(time_period);\n    });\n\n    function asignVal_substance(type, time) {\n        $('#percentage').html(type[time].Yes + '%');\n        $(\"#people\").empty();\n        $('#people').each(function() {\n            makeChart_substance(type, time);\n            $('#table_substance').html('<table class=\"table\" id=\"table_substance\"><tr><th>Had legal prescription</th><th>Did not have legal prescription</th></tr><tr><td class=\"type_substance0\">' + type[time].Yes + '%</td><td class=\"type_substance1\">' + type[time].No + '%</td></tr></table>');\n\n        })\n    };\n\n\n\n    function makeChart_substance(data_substance, i) {\n        var blockArray_substance = [];\n        var noOfBlocks_No = Math.round(data_substance[i].No);\n        var noOfBlocks_Yes = Math.round(data_substance[i].Yes);\n        var blocksAdded = 0;\n        blockArray = addBlocks_substance(\"#people\", noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i);\n        addBlock_substance(\"#people\", blockArray_substance, 0);\n    }\n\n    function addBlocks_substance(id, noOfBlocks_Yes, noOfBlocks_No, data_substance, blockArray_substance, i) {\n        var person_path = '<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/>';\n        var person_svg_No = '<svg class=\"block type_substance1\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n\n        for (b = 0; b < noOfBlocks_No; b++) {\n            blockArray_substance.push(person_svg_No);\n\n            //blockArray_substance.push('<div class=\"block type_substance' + 1 + ' data-index=' + data_substance[i].No + '\">' + '</div>');\n        };\n        for (b = 0; b < noOfBlocks_Yes; b++) {\n            //$(id).append('<div class=\"block type_substance' + 0 + ' data-index=' + data_substance[i].Yes + '\">' + '</div>');\n        var person_svg_Yes = '<svg class=\"block type_substance0\" width=\"25px\" height=\"25px\">' + person_path + '</svg>';\n            $(id).append(person_svg_Yes);\n        };\n        return blockArray_substance;\n\n    }\n\n    function addBlock_substance(id, blockArray_substance, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray_substance[i]);\n            i++;\n            addBlock_substance(id, blockArray_substance, i);\n        }\n    }\n\n\n    ////////////////////////\n    //BAR CHART\n    ///////////////////////\n\n    var width = '100%',\n        height = 30;\n    // series = dataset.map(function(d) {\n    //     return d.name;\n    // }),\n    dataset = dataset.map(function(d) {\n            return d.data.map(function(o, i) {\n                // Structure it so that your numeric\n                // axis (the stacked amount) is y\n                return {\n                    y: o.count,\n                    s: o.name,\n                };\n            });\n        }),\n        stack = d3.layout.stack();\n\n    stack(dataset);\n\n\n    var dataset = dataset.map(function(group) {\n            return group.map(function(d) {\n                // Invert the x and y values, and y0 becomes x0\n                return {\n                    x: d.y,\n                    n: d.s,\n                    y: d.x,\n                    x0: d.y0\n                };\n            });\n        }),\n        $bar = d3.select('#bar')\n        .append('svg')\n        .attr('id', 'bar_svg')\n        .attr('width', width)\n        .attr('height', height)\n    var color = [\"#b71c1c\", '#CFD8DC']\n    var colors;\n    colors = [color[1], color[1], color[1], color[0], color[1], color[1]];\n    draw(colors);\n    $(\".btn-substance\").on('click', function() {\n        $('#bar_svg').empty();\n        colors = [color[1], color[1], color[1], color[1], color[1], color[1]];\n        $('.btn-substance').removeClass(\"active\");\n        $(this).addClass(\"active\");\n        colors[$(this).val()] = color[0];\n        draw(colors);\n        var i = $(this).val(),\n            d = dataset[$(this).val()][0];\n        var xPos = parseFloat(xScale(d.x0) + 100 / (i + 1));\n        var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand();\n        console.log(d);\n        console.log(d.n == 'Fentanyl & Heroin')\n\n        if (d.n == 'Fentanyl & Heroin') {\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-7\\\" class=\\\"page-scroll\\\"><sup>7</sup></a>\";\n        } else if (d.n == 'Prescription Opioids') {\n            substance_html = d.n.toLowerCase() + \"<a href=\\\"#footnote-8\\\" class=\\\"page-scroll\\\"><sup>8</sup></a>\";\n        } else {\n            substance_html = d.n.toLowerCase();\n        }\n\n        console.log(substance_html)\n        $('.substance-type').html(substance_html);\n        $('#total').html(d.x);\n\n    });\n\n    function draw(colors) {\n        $('#bar_svg')\n            .append('g')\n            .attr('class', 'bar_g')\n            //  .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n        xMax = d3.max(dataset, function(group) {\n                return d3.max(group, function(d) {\n                    return d.x + d.x0;\n                });\n            }),\n            xScale = d3.scale.linear()\n            .domain([0, xMax])\n            .range([0, width]),\n            // months = dataset[0].map(function(d) {\n            //     return d.y;\n            // }),\n            yScale = d3.scale.ordinal()\n            //.domain(months)\n            .rangeRoundBands([0, height], .1),\n\n            colours = d3.scale.ordinal()\n            .range(colors),\n\n            bar_groups = $bar.selectAll('.bar_g')\n            .data(dataset)\n            .enter()\n            .append('g')\n            .style('fill', function(d, i) {\n                return colours(i);\n            }),\n\n            rects = bar_groups.selectAll('rect')\n            .data(function(d) {\n                return d;\n            })\n            .enter()\n            .append('rect')\n            .style({ 'stroke': '#b71c1c', 'stroke-width': '1px' })\n            .attr('x', function(d) {\n                return xScale(d.x0);\n            })\n            .attr('y', function(d, i) {\n                return yScale(d.y);\n            })\n            .attr('height', function(d) {\n                return yScale.rangeBand();\n            })\n            .attr('width', function(d) {\n                return xScale(d.x);\n            })\n    };\n\n})\n","$(document).ready(function() {\n\n    var prescription = [\n        [0, 0],\n        [\"No\", 58],\n        [\"Yes\", 13],\n        [\"Yes\", 8],\n        [\"No\", 21],\n        [0, 0]\n    ];\n    var heroin = [\n        [0, 0],\n        [\"No\", 22],\n        [\"Yes\", 49],\n        [\"Yes\", 17],\n        [\"No\", 12],\n        [0, 0]\n    ];\n\n    var multi = [\n        [\"1\", 15],\n        [\"2\", 31],\n        [\"3\", 25],\n        [\"3\", 18],\n        [\"2\", 9],\n        [\"1\", 2]\n    ];\n\n\n    // var person = '<svg width=\"10\" height=\"10\"><path d=\"M12.6,18.4c0-1,0-2,0-3c0-1.4,0.7-2.5,2-3.1c0.8-0.4,1.6-0.6,2.5-0.6c1,0,1.9,0,2.9,0c1,0,1.9,0.3,2.8,0.8c1,0.6,1.6,1.6,1.6,2.7c0,2.1,0,4.1,0,6.2c0,1.3-0.3,2.5-1.1,3.6c-0.2,0.2-0.4,0.4-0.6,0.6c-0.1,0.1-0.2,0.2-0.2,0.4c-0.2,0.8-0.4,1.6-0.5,2.5c-0.3,1.8-0.6,3.5-0.9,5.3c-0.2,1-0.8,1.5-1.8,1.5c-0.5,0-1.1,0-1.6,0c-0.2,0-0.3,0-0.5,0c-0.6-0.1-1.2-0.7-1.3-1.4c-0.3-1.6-0.5-3.2-0.8-4.9c-0.1-0.8-0.3-1.6-0.5-2.5c-0.1-0.4-0.2-0.7-0.5-1c-0.5-0.5-0.8-1.1-1-1.8c-0.3-0.8-0.4-1.6-0.4-2.5C12.6,20.3,12.6,19.3,12.6,18.4z\"/><path d=\"M13.6,6c0-2.4,1.9-4.7,4.7-4.7c2.7,0,4.8,2.1,4.8,4.8c0,2.7-2.1,4.7-4.7,4.7C15.7,10.7,13.6,8.6,13.6,6z\"/></svg>'\n    // console.log(person);\n    var table_html = [\n        '<div class=\"people-blocks\">Prescription Opioids in Toxicology Screen</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + prescription[2][1] + '%</td><td class=\"type_gender0\">' + prescription[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + prescription[3][1] + '%</td><td class=\"type_gender5\">' + prescription[4][1] + '%</td></tr></table>',\n        '<div class=\"people-blocks\">Heroin in Toxicology Screen</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>Present</th><th>Not Present</th></tr><tr><th>Male</th><td class=\"type_gender2\">' + heroin[2][1] + '%</td><td class=\"type_gender0\">' + heroin[1][1] + '%</td></tr><tr><th>Female</th><td class=\"type_gender3\">' + heroin[3][1] + '%</td><td class=\"type_gender5\">' + heroin[4][1] + '%</td></tr></table>',\n        '<div class=\"people-blocks\">Number of different prescribers</div><table class=\"table\" id=\"table_gender\"><tr><th></th><th>0 Prescribers</th><th>1–2 Prescribers</th><th>3+ Prescribers</th></tr><tr><th>Male</th><td td class=\"type_gender0\">' + multi[0][1] + '%</td><td td class=\"type_gender1\">' + multi[1][1] + '%</td><td td class=\"type_gender2\">' + multi[2][1] + '%</td></tr><tr><th>Female</th><td td class=\"type_gender5\">' + multi[5][1] + '%</td><td td class=\"type_gender4\">' + multi[4][1] + '%</td><td td class=\"type_gender3\">' + multi[3][1] + '%</td></tr></table>'\n    ];\n\n\n    var data_gender = prescription;\n    var value;\n    var option;\n\n    //Set initial values\n    makeChart_gender(prescription);\n    $('#table_gender').html(table_html[0]);\n    $(\"#prescription\").addClass(\"active\");\n\n    //Link text controls\n    $('.controls-block').click(function() {\n        $option = $(this).data('select');\n        //$value = eval($(this).val());\n        if ($option == 'multi') { $value = 2; } else if ($option == 'heroin') { $value = 1; } else if ($option = 'prescription') { $value = 0; }\n        console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    //Link button controls\n    $('.btn-blocks').click(function() {\n        $option = $(this).attr('id');\n        $value = eval($(this).val());\n        //console.log($value);\n        asignVal_gender($option, $value);\n    });\n\n\n    function asignVal_gender(option, value) {\n        $(\"#buttons-blocks button\").removeClass(\"active\");\n        $('#' + option).addClass('active');\n        $(\"#gender\").empty();\n        makeChart_gender(eval(option));\n        $('#table_gender').html(table_html[value]);\n        //console.log(value);\n    };\n\n\n    function makeChart_gender(data_gender) {\n\n        var blockArray = [];\n        if (data_gender == multi) {\n            var index = [0, 1, 2, 3, 4, 5];\n        } else {\n            var index = [0, 0, 2, 3, 5, 5];\n        };\n        for (i = 0; i < 6; i++) {\n            var noOfBlocks_gender = Math.round(data_gender[i][1]);\n            var blocksAdded = 0;\n            blockArray_gender = addBlocks_gender(\"#gender\", noOfBlocks_gender, data_gender, blockArray, index);\n        }\n        addBlock_gender(\"#gender\", blockArray_gender, 0);\n    }\n\n    function addBlock_gender(id, blockArray, i) {\n        if (i < blockArray.length) {\n            $(id).append(blockArray[i]);\n            i++;\n            //timeout += 1;\n            // setTimeout(function() {\n            addBlock_gender(id, blockArray, i);\n            //})\n        }\n    }\n\n\n    function addBlocks_gender(id, noOfBlocks, data_gender, blockArray, index) {\n        for (b = 0; b < noOfBlocks; b++) {\n            var person_svg = '<svg class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + ' width=\"25px\" height=\"25px\">'+'<path d=\"M4,12.6c0-0.7,0-1.5,0-2.2c0-1,0.5-1.8,1.4-2.2C6,7.9,6.6,7.8,7.3,7.8c0.7,0,1.4,0,2.1,0c0.7,0,1.4,0.2,2,0.6c0.7,0.4,1.1,1.1,1.1,2c0,1.5,0,3,0,4.5c0,0.9-0.2,1.8-0.8,2.6c-0.1,0.2-0.3,0.3-0.4,0.5c-0.1,0.1-0.1,0.2-0.2,0.3c-0.1,0.6-0.3,1.2-0.4,1.8c-0.2,1.3-0.4,2.6-0.6,3.8c-0.1,0.7-0.6,1.1-1.3,1.1c-0.4,0-0.8,0-1.2,0c-0.1,0-0.2,0-0.3,0c-0.5-0.1-0.9-0.5-1-1c-0.2-1.2-0.4-2.4-0.6-3.5c-0.1-0.6-0.2-1.2-0.3-1.8c-0.1-0.3-0.2-0.5-0.4-0.7c-0.4-0.3-0.6-0.8-0.7-1.3C4.1,15.9,4,15.3,4,14.7C4,14,4,13.3,4,12.6z\"/>'\n        + '<path d=\"M4.8,3.6c0-1.8,1.4-3.4,3.4-3.5c1.9,0,3.5,1.5,3.5,3.5c0,2-1.5,3.4-3.5,3.4C6.3,7,4.8,5.5,4.8,3.6z\"/></svg>';\n\n            // blockArray.push('<div class=\"block type' + i + '\">' + '<p>' + data[i][0] + '</p></div>');\n            //blockArray.push('<div class=\"block type_gender' + index[i] + ' data-index=' + data_gender[i][0] + '\">' + '</div>');\n            blockArray.push(person_svg);\n            // $(id).append('<div class=\"block type'+i+'\"><p>'+ data[i][0] +'</p></div>');\n        }\n        return blockArray;\n    }\n\n});\n\n\n// var $block = document.getElementByClassName('block');\n// $(\".block\").hover(function() { console.log($(this).dataset.index); });\n","(function() {\r\n\r\n    var width = 600;\r\n    var height = 300;\r\n    var margin = 50;\r\n    var selected;\r\n\r\n\r\n\r\n    //setup the svg\r\n\r\n    var $bars_age = d3.select(\"#changing_bars\").append(\"svg\")\r\n        .attr(\"width\", width + 100)\r\n        .attr(\"height\", height + 10); // adding some random padding\r\n    $bars_age.append(\"rect\")\r\n        .attr(\"width\", \"100%\")\r\n        .attr(\"height\", \"100%\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n    var age_bar_color = d3.scale.ordinal()\r\n        .range([\"malFocus\", \"femFocus\"]);\r\n    var age_bar_label = d3.scale.ordinal()\r\n        .range([\"Male\", \"Female\"]);\r\n\r\n    var ages_label = $bars_age.append('text')\r\n            .text(\"Age\")\r\n            .attr(\"class\", \"vis-x-axis-label\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .attr(\"y\", 10)\r\n            .attr(\"x\", 10);\r\n\r\n    var chart_title = $bars_age.append('text');\r\n\r\n    var age_bars_legend = $bars_age.selectAll(\".vis-legend\")\r\n        .data(['male', 'female'])\r\n        .enter().append(\"g\");\r\n\r\n    age_bars_legend.append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .attr(\"class\", age_bar_color);\r\n        // .style(\"fill\", age_bar_color);\r\n\r\n\r\n\r\n    age_bars_legend.append(\"text\")\r\n        .attr(\"x\", 25)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \".5em\")\r\n        .style(\"text-anchor\", \"start\")\r\n        .text(age_bar_label);\r\n\r\n    d3.csv(\"js/data/bars-age.csv\", function(error, data) {\r\n\r\n        var selected = \"percentOpiodDeaths\";\r\n        //console.log(column);\r\n        var dataset = drawGraph(data, selected); // you need to finish this function below.\r\n        //\r\n        // //console.log(column, dataset);\r\n        //\r\n\r\n\r\n        updateWidth();\r\n        redraw(dataset, selected);\r\n\r\n        window.addEventListener('resize', function() {\r\n            updateWidth();\r\n            redraw(dataset, selected);\r\n        });\r\n\r\n        d3.select(\"#POD\").classed(\"selected\", true);\r\n        $(\"#POD\").addClass(\"active\");\r\n\r\n        d3.select(\"#POD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"percentOpiodDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#DR\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"deathRate\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n            });\r\n        d3.select(\"#NOD\")\r\n            .on(\"click\", function(d, i) {\r\n                selected = \"numberOpioidDeaths\"\r\n                dataset = drawGraph(data, selected);\r\n                redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n                d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                $(\"#buttons-bar button\").removeClass(\"active\");\r\n\r\n                d3.selectAll(\"#age18to24\").classed(\"selected\", false);\r\n                $(\"#age18to24\").removeClass(\"active\");\r\n\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n            });\r\n\r\n        d3.select(\"#age18to24\")\r\n            .on(\"click\", function(d, i) {\r\n                //selected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        d3.select(\"#age25to34\")\r\n            .on(\"click\", function(d, i) {\r\n                //lected = \"18to24\"\r\n                // dataset = drawGraph(data, selected);\r\n                // redraw(dataset, selected);\r\n                var thisButton = d3.select(this);\r\n\r\n                //d3.selectAll(\"#buttons-bar button\").classed(\"selected\", false);\r\n                //$(\"#buttons-bar button\").removeClass(\"active\");\r\n                thisButton.classed(\"selected\", true);\r\n                $(this).addClass(\"active\");\r\n\r\n                d3.selectAll(\".malFocus.age25to34\")\r\n                    .classed(\"malSelector\", true);\r\n                d3.selectAll(\".femFocus.age25to34\")\r\n                    .classed(\"femSelector\", true);\r\n\r\n                d3.selectAll(\".malFocus.age18to24\")\r\n                    .classed(\"malSelector\", false);\r\n                d3.selectAll(\".femFocus.age18to24\")\r\n                    .classed(\"femSelector\", false);\r\n\r\n            });\r\n\r\n        //setup our ui -- requires access to data variable, so inside csv\r\n        // d3.select(\"#menu select\")\r\n        //     .on(\"change\", function() {\r\n        //         column = d3.select(\"#menu select\").property(\"value\");\r\n        //         dataset = drawGraph(data, column);\r\n        //         //console.log(column, dataset);\r\n        //         redraw(dataset, column);\r\n        // });\r\n\r\n    }) // end csv\r\n\r\n\r\n    function updateWidth() {\r\n        width = document.querySelector(\"#changing_bars\").clientWidth - 100;\r\n        height = 300;\r\n        margin = 50;\r\n\r\n        $bars_age\r\n            .attr(\"width\", width + 100)\r\n            .attr(\"height\", height + 10); // adding some random padding\r\n    }\r\n\r\n    //make the bars for the first data set.  They will be red at first.\r\n\r\n    function drawGraph(data, column) {\r\n\r\n        return data.sort(function(a, b) {\r\n            return b[column] - a[column]; // descending order, biggest at the top!\r\n        }); // cut off the top 10!\r\n\r\n    }\r\n\r\n    // This function is used to draw and update the data. It takes different data each time.\r\n\r\n    function redraw(data, column) {\r\n\r\n        chart_title.text(toTitle(column))\r\n            .attr(\"class\", \"vis-label\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .attr(\"y\", 12)\r\n            .attr(\"x\", width + margin + margin);\r\n\r\n        var max = d3.max(data, function(d) {\r\n            return +d[column];\r\n        });\r\n\r\n        xScale = d3.scale.linear()\r\n            .domain([0, max])\r\n            .range([0, width]);\r\n\r\n        yScale = d3.scale.ordinal()\r\n            .domain(d3.range(data.length))\r\n            .rangeBands([20, height], .2);\r\n\r\n        // yScale = function calc(e){return i[((u.get(e)||(\"range\"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]};\r\n\r\n\r\n        var bars = $bars_age.selectAll(\"rect.bar\")\r\n            .data(data, function(d) {\r\n                return d.gender_age;\r\n            }); // key function!\r\n\r\n\r\n\r\n        age_bars_legend\r\n            .attr(\"class\", \"vis-legend\")\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\"+(width - 10)+\",\" + (height - (margin * 2) + (i * 24)) + \")\";\r\n            });\r\n\r\n\r\n        //update -- existing bars get blue when we \"redraw\". We don't change labels.\r\n        // bars\r\n        //   .attr(\"fill\", \"steelblue\");\r\n\r\n        //enter - new bars get set to darkorange when we \"redraw.\"\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bar\");\r\n        // .attr(\"fill\", \"steelblue\");\r\n\r\n        //exit -- remove ones that aren't in the index set\r\n        bars.exit()\r\n            .transition()\r\n            .duration(200)\r\n            .ease(\"exp\")\r\n            .attr(\"width\", 0)\r\n            .remove();\r\n\r\n        //console.log(yScale);\r\n        // transition -- move the bars to proper widths and location\r\n        bars\r\n            .transition()\r\n            .duration(500)\r\n            .ease(\"quad\")\r\n            .attr(\"width\", function(d) {\r\n                return xScale(+d[column]);\r\n            })\r\n            .attr(\"height\", yScale.rangeBand())\r\n            .attr(\"transform\", function(d, i) {\r\n                return \"translate(\" + [(0 + margin), yScale(i)] + \")\";\r\n            })\r\n            .attr(\"class\", function(d, i) {\r\n                if (d.gender === 'Male' && d.age === '18 to 24') {\r\n                    return \"bar malFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '18 to 24') {\r\n                    return \"bar femFocus age18to24\";\r\n                } else if (d.gender === 'Female' && d.age === '25 to 34') {\r\n                    return \"bar femFocus age25to34\";\r\n                } else if (d.gender === 'Male' && d.age === '25 to 34') {\r\n                    return \"bar malFocus age25to34\";\r\n                } else if (d.gender === 'Female') {\r\n                    return \"bar femFocus\";\r\n                } else if (d.gender === 'Male') {\r\n                    return \"bar malFocus\";\r\n                }\r\n            });\r\n        //.classed(\"18to24\", (d.age === '18 to 24'))\r\n\r\n        //   .attr(\"class\", function (d, i) {\r\n        //       if (d.age === '18 to 24') {\r\n        //           return \"18to24\";\r\n        //      } else if (d.age === '25 to 34') {\r\n        //           return \"25to34\";\r\n        //       }\r\n        //   });\r\n\r\n        //add legend\r\n\r\n\r\n        //  We are attaching the labels separately, not in a group with the bars...\r\n\r\n        var dataLabels = $bars_age.selectAll(\"text.vis-data-label\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            }); // key function!\r\n\r\n        var axisLabels = $bars_age\r\n            .selectAll(\"text.vis-axis\")\r\n            .data(data, function(d) {\r\n                return d.gender_age\r\n            });\r\n\r\n\r\n        // everything gets a class and a text field.  But we assign attributes in the transition.\r\n        axisLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-axis\");\r\n        axisLabels.exit()\r\n            .remove();\r\n\r\n        dataLabels.enter()\r\n            .append(\"text\")\r\n            .attr(\"class\", \"vis-data-label\");\r\n        dataLabels.exit()\r\n            .remove();\r\n\r\n        numberFormat = d3.format(\".0f\");\r\n        percentageFormat = d3.format(\".1f\");\r\n        rateFormat = d3.format(\".1f\");\r\n\r\n        dataLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //console.log(xScale(+d[column]) + 50);\r\n                //console.log(d[column]);\r\n                return \"translate(\" + (xScale(+d[column]) + margin) + \",\" + (yScale(i) + 4) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                // console.log(column);\r\n                if (column == \"percentOpiodDeaths\" && d.age == '65+') {\r\n                    return \"<1%\";\r\n                }\r\n                if (column == \"percentOpiodDeaths\" && d.age != '65+') {\r\n                    return percentageFormat(d[column]) + \"%\";\r\n                }\r\n                if (column == \"numberOpioidDeaths\") {\r\n                    return numberFormat(d[column]);\r\n                } else {\r\n                    return rateFormat(d[column]);\r\n                }\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"5px\");\r\n\r\n        axisLabels.transition()\r\n            .duration(500)\r\n            .attr(\"transform\", function(d, i) {\r\n                //return \"translate(\" + xScale(+d[column]) + \",\" + yScale(i) + \")\"\r\n                return \"translate(\" + 0 + \",\" + (yScale(i) + 5) + \")\"\r\n            })\r\n            .text(function(d) {\r\n                return d.age;\r\n            })\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"dx\", \"40px\");\r\n\r\n\r\n    } // end of draw function\r\n\r\n\r\n    function toTitle(key) {\r\n        var titleLookup = {\r\n            percentOpiodDeaths: 'Percent Opioid Deaths among All Deaths',\r\n            deathRate: 'Opioid Death Rate per 100,000 People per Year',\r\n            numberOpioidDeaths: 'Number of Opioid Deaths'\r\n        };\r\n        return titleLookup[key];\r\n    }\r\n})();\r\n","$(document).ready(function(){\n\n    dataset = [\n        { raceth: \"All\", \"2014\": 19.8, \"2015\": 23.2 },\n        { raceth: \"White non-Hispanic\", \"2014\": 23.3, \"2015\": 27.1 },\n        { raceth: \"Black non-Hispanic\", \"2014\": 11.1, \"2015\": 13.6 },\n        { raceth: \"Hispanic\", \"2014\": 15.3, \"2015\": 19.5 }\n    ];\n\n    var color = d3.scale.ordinal()\n        .range([\"#B0BEC5\", \"#455A64\"]);\n\n    var width, height, margin = {};\n\n    updateWidth();\n\n    var x0 = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var x1 = d3.scale.ordinal();\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    //var colorRange = d3.scale.category20();\n    //var color = d3.scale.ordinal()\n    //.range(colorRange.range());\n\n\n\n    var xAxis_bars = d3.svg.axis()\n        .scale(x0)\n        .orient(\"bottom\");\n\n    var yAxis_bars = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .tickFormat(d3.format(\".0f\"));\n\n    var divtooltip_raceeth = d3.select(\"#race_ethnicity_chart\").append(\"div\").classed(\"vis-tooltip hidden\", true);\n\n\n    var $svg = d3.select(\"#race_ethnicity_chart\").append(\"svg\")\n    var $bars_race = $svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    var options = d3.keys(dataset[0]).filter(function(key) {\n        return key !== \"raceth\";\n    });\n\n    dataset.forEach(function(d) {\n        d.values = options.map(function(name) {\n            return { name: name, value: +d[name] };\n        });\n    });\n\n    x0.domain(dataset.map(function(d) {\n        return d.raceth;\n    }));\n    x1.domain(options).rangeRoundBands([0, x0.rangeBand()]);\n    y.domain([0, d3.max(dataset, function(d) {\n        return d3.max(d.values, function(d) {\n            return d.value;\n        });\n    })]);\n\n    var xAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-x-axis\")\n        .attr(\"transform\", \"translate(10,\" + height + \")\");\n\n    var yAxis = $bars_race.append(\"g\")\n        .attr(\"class\", \"vis-y-axis\");\n\n    yAxis.append(\"text\")\n        .attr(\"y\", -35)\n        .attr(\"dy\", \".71em\")\n        .attr(\"class\", \"vis-y-axis-label\")\n        .text(\"Age Adjusted Rates per 100,000\");\n\n    var bar = $bars_race.selectAll(\".bar\")\n        .data(dataset)\n        .enter().append(\"g\")\n        .attr(\"class\", \"rect\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n\n    var bars = bar.selectAll(\"rect\")\n        .data(function(d) {\n            return d.values;\n        })\n        .enter().append(\"rect\");\n\n    bars\n        .attr(\"width\", x1.rangeBand())\n        .attr(\"x\", function(d) {\n            return x1(d.name) + 5;\n        })\n        .attr(\"y\", function(d) {\n            return y(d.value);\n        })\n        .attr(\"value\", function(d) {\n            return d.name;\n        })\n        .attr(\"height\", function(d) {\n            return height - y(d.value);\n        })\n        .style(\"fill\", function(d) {\n            return color(d.name);\n        });\n\n    //bar.on(\n    //\"mouseover\", function(){\n    //d3.select(this).attr(\"fill\",\"red !important\");\n    //});\n\n    bar\n        .on(\"mousemove\", function(d) {\n            divtooltip_raceeth.style(\"left\", d3.event.pageX - $(\"#race_ethnicity_chart\").offset().left + \"px\");\n            divtooltip_raceeth.style(\"top\", d3.event.pageY - $(\"#race_ethnicity_chart\").offset().top + \"px\");\n        divtooltip_raceeth.classed(\"hidden\", false);\n            var x = d3.event.pageX,\n                y = d3.event.pageY\n            var elements = document.querySelectorAll(':hover');\n            l = elements.length\n            l = l - 1\n            elementData = elements[l].__data__\n                //divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\"  +\"<br>\" + \"<reth> - \" + (d.raceth) + \" - </reth>\" + \"<br>\" + \"<year>\" + (elementData.name) + \"</year>\");\n            divtooltip_raceeth.html(\"<rate>\" + (elementData.value) + \"</rate>\");\n\n        });\n\n    bar\n        .on(\"mouseout\", function(d) {\n        divtooltip_raceeth.classed(\"hidden\", true);\n        });\n\n\n\n    var legend = $bars_race.selectAll(\".vis-legend\")\n        .data(options.slice())\n        .enter().append(\"g\")\n        .attr(\"class\", \"vis-legend\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(0,\" + i * 20 + \")\";\n        });\n\n    var legendRect = legend.append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n    var legendText = legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n            return d;\n        });\n\n    function wrap(text, width) {\n        text.each(function() {\n            var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dy = parseFloat(text.attr(\"dy\")),\n                tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n\n    function render () {\n        updateWidth();\n\n        x1.rangeRoundBands([0, x0.rangeBand()]);\n\n        x0.rangeRoundBands([0, width], .1);\n        y.range([height, 0]);\n\n        xAxis_bars.scale(x0);\n        yAxis_bars.scale(y);\n\n        $svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\n\n        xAxis\n            .attr(\"transform\", \"translate(10,\" + height + \")\")\n            .call(xAxis_bars)\n            .selectAll(\".tick text\")\n            .call(wrap, x0.rangeBand());\n\n        yAxis.call(yAxis_bars);\n        legendRect.attr(\"x\", width - 18);\n        legendText.attr(\"x\", width - 24);\n\n        bar.attr(\"transform\", function(d) {\n            return \"translate(\" + (x0(d.raceth) - 10) + \",0)\";\n        });\n\n        bars.attr(\"width\", x1.rangeBand())\n            .attr(\"x\", function(d) {\n                return x1(d.name) + 20;\n            })\n            .attr(\"y\", function(d) {\n                return y(d.value);\n            })\n            .attr(\"value\", function(d) {\n                return d.name;\n            })\n            .attr(\"height\", function(d) {\n                return height - y(d.value);\n            });\n\n    }\n\n    function updateWidth () {\n        var w = document.querySelector('#race_ethnicity_chart').clientWidth;\n        margin = {\n            top: 50,\n            right: 10,\n            bottom: 60,\n            left: 50\n        },\n        width = w - margin.left - margin.right;\n\n        if(w < 500) {\n            height = 350 - margin.top - margin.bottom;\n        } else {\n            height = 500 - margin.top - margin.bottom;\n        }\n\n    }\n\n    render();\n    window.addEventListener('resize', render);\n});"],"sourceRoot":"/source/"}